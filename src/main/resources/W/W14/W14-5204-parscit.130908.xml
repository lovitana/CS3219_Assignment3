<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002504">
<title confidence="0.990226">
The Language Application Grid Web Service Exchange Vocabulary
</title>
<author confidence="0.998088">
Nancy Ide
</author>
<affiliation confidence="0.978680333333333">
Department of Computer Science
Vassar College
Poughkeepsie, New York USA
</affiliation>
<email confidence="0.991388">
ide@cs.vassar.edu
</email>
<author confidence="0.998611">
Keith Suderman
</author>
<affiliation confidence="0.974005666666667">
Department of Computer Science
Vassar College
Poughkeepsie, New York USA
</affiliation>
<email confidence="0.993451">
suderman@anc.org
</email>
<author confidence="0.994034">
James Pustejovsky
</author>
<affiliation confidence="0.944219666666667">
Department of Computer Science
Brandeis University
Waltham, Massachusetts USA
</affiliation>
<email confidence="0.992944">
jamesp@cs.brandeis.edu
</email>
<author confidence="0.998636">
Marc Verhagen
</author>
<affiliation confidence="0.937089333333333">
Department of Computer Science
Brandeis University
Waltham, Massachusetts USA
</affiliation>
<email confidence="0.998948">
marc@cs.brandeis.edu
</email>
<sectionHeader confidence="0.995643" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999943666666667">
In the context of the Linguistic Applications (LAPPS) Grid project, we have undertaken the def-
inition of a Web Service Exchange Vocabulary (WS-EV) specifying a terminology for a core
of linguistic objects and features exchanged among NLP tools that consume and produce lin-
guistically annotated data. The goal is not to define a new set of terms, but rather to provide a
single web location where terms relevant for exchange among NLP tools are defined and pro-
vide a “sameAs” link to all known web-based definitions that correspond to them. The WS-EV
is intended to be used by a federation of six grids currently being formed but is usable by any
web service platform. Ultimately, the WS-EV could be used for data exchange among tools in
general, in addition to web services.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.980481866666667">
There is clearly a demand within the community for some sort of standard for exchanging annotated lan-
guage data among tools.1 This has become particularly urgent with the emergence of web services, which
has enabled the availability of language processing tools that can and should interact with one another,
in particular, by forming pipelines that can branch off in multiple directions to accomplish application-
specific processing. While some progress has been made toward enabling syntactic interoperability via
the development of standard representation formats (e.g., ISO LAF/GrAF (Ide and Suderman, 2014;
ISO-24612, 2012), NLP Interchange Format (NIF) (Hellmann et al., 2013), UIMA2 Common Analysis
System (CAS)) which, if not identical, can be trivially mapped to one another, semantic interoperability
among NLP tools remains problematic (Ide and Pustejovsky, 2010). A few efforts to create repositories,
type systems, and ontologies of linguistic terms (e.g., ISOCat3, OLiA4, various repositories for UIMA
type systems5, GOLD6, NIF Core Ontology7) have been undertaken to enable (or provide) a mapping
among linguistic terms, but none has yet proven to include all requisite terms and relations or be easy
to use and reference. General repositories such as Dublin Core8, schema.org, and the Friend of a Friend
This work is licensed under a Creative Commons Attribution 4.0 International License. Page numbers and proceedings footer
are added by the organizers. License details: http://creativecommons.org/licenses/by/4.0/
</bodyText>
<footnote confidence="0.918295666666667">
1See, for example, proceedings of the recent LREC workshop on “Language Technology Service Platforms: Synergies,
Standards, Sharing” (http://www.ilc.cnr.it/ltsp2014/).
2https://uima.apache.org/
3http://www.isocat.org
4http://nachhalt.sfb632.uni-potsdam.de/owl/
5E.g., http://www.julielab.de/Resources/Software/UIMA+type+system-p-91.html
6http://linguistics-ontology.org
7http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/nif-core
8http://dublincore.org 34
</footnote>
<note confidence="0.7019195">
Proceedings of the Workshop on Open Infrastructures and Analysis Frameworks for HLT, pages 34–43,
Dublin, Ireland, August 23rd 2014.
</note>
<bodyText confidence="0.998919947368421">
project9 include some relevant terms, but they are obviously not designed to fully cover the kinds of
information found in linguistically annotated data.
In the context of the Linguistic Applications (LAPPS) Grid project (Ide et al., 2014), we have under-
taken the definition of a Web Service Exchange Vocabulary (WS-EV) specifying a terminology for a core
of linguistic objects and features exchanged among NLP tools that consume and produce linguistically
annotated data. The work is being done in collaboration with ISO TC37 SC4 WG1 in order to ensure
full community engagement and input. The goal is not to define a new set of terms, but rather to provide
a single web location where terms relevant for exchange among NLP tools are defined and provide a
“sameAs” link to all known web-based definitions that correspond to them. A second goal is to define
relations among the terms that can be used when linguistic data are exchanged. The WS-EV is intended
to be used by a federation of grids currently being formed, including the Kyoto Language Grid10, the
Language Grid Jakarta Operation Center11, the Xinjiang Language Grid, the Language Grid Bangkok
Operation Center12, LinguaGrid13, MetaNET/Panacea14, and LAPPS, but is usable by any web service
platform. Ultimately, the WS-EV could be used for data exchange among tools in general, in addition to
web services.
This paper describes the LAPPS WS-EV, which is currently under construction. We first describe the
LAPPS project and then overview the motivations and principles for developing the WS-EV. Because
our goal is to coordinate with as many similar projects and efforts as possible to avoid duplication, we
also describe existing collaborations and invite other interested groups to provide input.
</bodyText>
<sectionHeader confidence="0.870415" genericHeader="method">
2 The Language Application Grid Project
</sectionHeader>
<bodyText confidence="0.999913545454545">
The Language Application (LAPPS) Grid project is in the process of establishing a framework that
enables language service discovery, composition, and reuse, in order to promote sustainability, manage-
ability, usability, and interoperability of natural language Processing (NLP) components. It is based on
the service-oriented architecture (SOA), a more recent, web- oriented version of the pipeline architecture
that has long been used in NLP for sequencing loosely-coupled linguistic analyses. The LAPPS Grid
provides a critical missing layer of functionality for NLP: although existing frameworks such as UIMA
and GATE provide the capability to wrap, integrate, and deploy language services, they do not provide
general support for service discovery, composition, and reuse.
The LAPPS Grid is a collaborative effort among US partners Brandeis University, Vassar College,
Carnegie-Mellon University, and the Linguistic Data Consortium at the University of Pennsylvania, and
is funded by the US National Science Foundation (NSF). The project builds on the foundation laid in
the NSF-funded project SILT (Ide et al., 2009), which established a set of needs for interoperability
and developed standards and best practice guidelines to implement them. LAPPS is similar in its scope
and goals to ongoing projects such as The Language Grid15, PANACEA/MetaNET16, LinguaGrid17, and
CLARIN18, which also provide web service access to basic NLP processing tools and resources and
enable pipelining these tools to create custom NLP applications and composite services such as question
answering and machine translation, as well as access to language resources such as mono- and multi-
lingual corpora and lexicons that support NLP. The transformative aspect of the LAPPS Grid is therefore
not the provision of a suite of web services, but rather that it orchestrates access to and deployment of
language resources and processing functions available from servers around the globe, and enables users
to easily add their own language resources, services, and even service grids to satisfy their particular
needs.
</bodyText>
<footnote confidence="0.999314">
9http://www.foaf-project.org
10http://langrid.nict
11http://langrid.portal.cs.ui.ac.id/langrid/
12http://langrid.servicegrid-bangkok.org
13http://www.linguagrid.org/
14http://www.panacea-lr.eu
15http://langrid.nict
16http://panacea-lr.eu/
17http://www.linguagrid.org/
18http://www.clarin.eu/ 35
</footnote>
<bodyText confidence="0.983486870370371">
The most distinctive innovation in the LAPPS Grid that is not included in other projects is the provision
of an open advancement (OA) framework (Ferrucci et al., 2009a) for component- and application-based
evaluation of NLP tools and pipelines. The availability of this type of evaluation service will provide an
unprecedented tool for NLP development that could, in itself, take the field to a new level of productivity.
OA involves evaluating multiple possible solutions to a problem, consisting of different configurations
of component tools, resources, and evaluation data, to find the optimal solution among them, and en-
abling rapid identification of frequent error categories, together with an indication of which module(s)
and error type(s) have the greatest impact on overall performance. On this basis, enhancements and/or
modifications can be introduced with an eye toward achieving the largest possible reduction in error rate
(Ferrucci et al., 2009; Yang et al., 2013). OA was used in the development of IBM’s Watson to achieve
steady performance gains over the four years of its development (Ferrucci et al., 2010); more recently,
the open-source OAQA project has released software frameworks which provide general support for
open advancement (Garduno et al., 2013; Yang et al., 2013), which has been used to rapidly develop
information retrieval and question answering systems for bioinformatics (Yang et al., 2013; Patel et al.,
2013).
The fundamental system architecture of the LAPPS Grid is based on the Open Service Grid Initiative’s
Service Grid Server Software19 developed by the National Institute of Information and Communications
Technology (NICT) in Japan and used to implement Kyoto University’s Language Grid, a service grid
that supports multilingual communication and collaboration. Like the Language Grid, the LAPPS Grid
provides three main functions: language service registration and deployment, language service search,
and language service composition and execution. As noted above, the LAPPS Grid is instrumented
to provide relevant component-level measures for standard metrics, given gold-standard test data; new
applications automatically include instrumentation for component-level and end-to-end measurement,
and intermediate (component-level) I/O is logged to support effective error analysis.20 The LAPPS
Grid also implements a dynamic licensing system for handling license agreements on the fly21, provides
the option to run services locally with high-security technology to protect sensitive information where
required, and enables access to grids other than those based on the Service Grid technology.
We have adopted the JSON-based serialization for Linked Data (JSON-LD) to represent linguistically
annotated data for the purposes of web service exchange. The JavaScript Object Notation (JSON) is a
lightweight, text-based, language-independent data interchange format that defines a small set of format-
ting rules for the portable representation of structured data. Because it is based on the W3C Resource
Definition Framework (RDF), JSON-LD is trivially mappable to and from other graph-based formats
such as ISO LAF/GrAF and UIMA CAS, as well as a growing number of formats implementing the
same data model. Most importantly, JSON- LD enables services to reference categories and definitions
in web-based repositories and ontologies or any suitably defined concept at a given URI.
The LAPPS Grid currently supports SOAP services, with plans to support REST services in the
near future. We provide two APIs: org.lappsgrid.api.DataSource, which provides data
to other services, and org.lappsgrid.api.WebService, for tools that annotate, transform, or
otherwise manipulate data from a datasource or another web service. All LAPPS services exchange
org.lappsgrid.api.Data objects consisting of a discriminator (type) that indicates how to inter-
pret the payload, and a payload (typically a utf-8 string) that consists of the JSON-LD representation.
Data converters included in the LAPPS Grid Service Engines map from commonly used formats to the
JSON-LD interchange format; converters are automatically invoked as needed to meet the I/O require-
ments of pipelined services. Some LAPPS services are pre-wrapped to produce and consume JSON-LD.
Thus, JSON-LD provides syntactic interoperability among services in the LAPPS Grid; semantic inter-
19http://servicegrid.net
20Our current user interface provides easy (re-)configuration of single pipelines; we are currently extending the interface
to allow the user to specify an entire range of pipeline configurations using configuration descriptors (ECD; (Yang et al.,
2013) to define a space of possible pipelines, where each step might be achieved by multiple components or services and each
component or service may have configuration parameters with more than one possible value to be tested. The system will then
automatically generate metrics measurements plus variance and statistical significance calculations for each possible pipeline,
using a service-oriented version of the Configuration Space Exploration (CSE) algorithm (Yang et al., 2013).
21See (Cieri et al., 2014) for a description of how licensing 36 issues are handled in the LAPPS Grid.
operability is provided by the LAPPS Web Service Exchange Vocabulary, described in the next section.
</bodyText>
<sectionHeader confidence="0.916781" genericHeader="method">
3 LAPPS Web Service Exchange Vocabulary
</sectionHeader>
<subsectionHeader confidence="0.993865">
3.1 Motivation
</subsectionHeader>
<bodyText confidence="0.999951105263158">
The WS-EV addresses a relatively small but critical piece of the overall LAPPS architecture: it allows
web services to communicate about the content they deliver, such that the meaning–i.e., exactly what
to do with and/or how to process the data–is understood by the receiver. As such it performs the same
function as a UIMA type system performs for tools in a UIMA pipeline that utilize that type system,
or the common annotation labels (e.g., ”Token”, ”Sentence”, etc.) required for communication among
pipelined tools in GATE: these mechanisms provide semantic interoperability among tools as long as one
remains in either the UIMA or GATE world. To pipeline a tool whose output follows GATE conventions
with a tool that expects input that complies with a given UIMA type system, some mapping of terms and
structures is likely to be required.22 This is what the WS-EV is intended to enable; effectively, it is a
meta-type-system for mapping labels assigned to linguistically annotated data so that they are understood
and treated consistently by tools that exchange them in the course of executing a pipeline or workflow.
Since web services included in LAPPS and federated grids may use any i/o semantic conventions, the
WS-EV allows for communication among any of them–including, for example, between GATE and
UIMA services23
The ability to pipeline components from diverse sources is critical to the implementation of the OA
development approach described in the previous section, it must be possible for the developer to “plug
and play” individual tools, modules, and resources in order to rapidly re-configure and evaluate new
pipelines. These components may exist on any server across the globe, consist of modules developed
within frameworks such as UIMA and GATE, and or be user-defined services existing on a local machine.
</bodyText>
<subsectionHeader confidence="0.953001">
3.2 WS-EV Design
</subsectionHeader>
<bodyText confidence="0.9786405">
The WS-EV was built around the following design principles, which were compiled based on input from
the community:
</bodyText>
<listItem confidence="0.995957066666667">
1. The WS-EV will not reinvent the wheel. Objects and features defined in the WS-EV will be linked
to definitions in existing repositories and ontologies wherever possible.
2. The WS-EV will be designed so as to allow for easy, one-to-one mapping from terms designating
linguistic objects and features commonly produced and consumed by NLP tools that are wrapped
as web services. It is not necessary for the mapping to be object-to-object or feature-to-feature.
3. The WS-EV will provide a core set of objects and features, on the principle that “simpler is better”,
and provide for (principled) definition of additional objects and features beyond the core to represent
more specialized tool input and output.
4. The WS-EV is not LAPPS-specific; it will not be governed by the processing requirements or
preferences of particular tools, systems, or frameworks.
5. The WS-EV is intended to be used only for interchange among web services performing NLP tasks.
As such it can serve as a “pivot” format to which user and tool-specific formats can be mapped.
6. The web service provider is responsible for providing wrappers that perform the mapping from
internally-used formats to and/or from the WS-EV.
7. The WS-EV format should be compact to facilitate the transfer of large datasets.
</listItem>
<footnote confidence="0.7676228">
22Within UIMA, the output of tools conforming to different type systems may themselves require conversion in order to be
used together.
23Figure 5 shows a pipeline in which both GATE and UIMA services are called; GATE-to-GATE and UIMA-to-UIMA
communication does not use the WS-EV, but it is used for Trmunication between GATE and UIMA services, as well as other
services. J
</footnote>
<bodyText confidence="0.99947721875">
8. The WS-EV format will be chosen to take advantage, to the extent possible, of existing technologi-
cal infrastructures and standards.
As noted in the first principle, where possible the objects and features in the WS-EV are drawn from
existing repositories such as ISOCat and the NIF Core Ontology and linked to them via the owl:sameAs
property24 or, where appropriate, rdfs:subClassOf25. However, many repositories do not include some
categories and objects relevant for web service exchange (e.g., “token” and other segment descriptors),
do include multiple (often very similar) definitions for the same concept, and/or do not specify relations
among terms. We therefore attempted to identify a set of (more or less) “universal” concepts by surveying
existing type systems and schemas – for example, the Julie Lab and DARPA GALE UIMA type systems
and the GATE schemas for linguistic phenomena – together with the I/O requirements of commonly
used NLP software (e.g., the Stanford NLP tools, OpenNLP, etc.). Results of the survey for token and
sentence identification and part-of-speech labeling26 showed that even for these basic categories, no
existing repository provides a suitable set of categories and relations.
Perhaps more problematically, sources that do specify relations among concepts, such as the various
UIMA type systems and GATE’s schemas, vary widely in their choices of what is an object and what
is a feature; for example, some treat “token” as an object (label) and “lemma” and “POStag” as asso-
ciated features, while others regard “lemma” and/or “POStag” as objects in their own right. Decisions
concerning what is an object and what is a feature are for the most part arbitrary; no one scheme is right
or wrong, but a consistent organization is required for effective web service interchange. The WS-EV
therefore defines an organization of objects and features for the purposes of interchange only. Where
possible, the choices are principled, but they are otherwise arbitrary. The WS-EV includes sameAs and
similarTo mappings that link to like concepts in other repositories where possible, thus serving primar-
ily to group the terms and impose a structure of relations required for web service exchange in one
web-based location.
In addition to the principles above, the WS-EV is built on the principle of orthogonal design, such that
there is one and only one definition for each concept. It is also designed to be very lightweight and easy
to find and reference on the web. To that end we have established a straightforward web site (the Web
Service Exchange Vocabulary Repository27), similar to schema.org, in order to provide web-addressable
terms and definitions for reference from annotations exchanged among web services. Our approach is
bottom-up: we have adopted a minimalist strategy of adding objects and features to the repository only
as they are needed as services are added to the LAPPS Grid. Terms are organized in a shallow ontology,
with inheritance of properties, as shown in Figure 1.
</bodyText>
<sectionHeader confidence="0.997609" genericHeader="method">
4 WS-EV and JSON-LD
</sectionHeader>
<bodyText confidence="0.9997405">
References in the JSON-LD representation used for interchange among LAPPS Grid web services point
to URIs providing definitions for specific linguistic categories in the WS-EV. They also reference doc-
umentation for processing software and rules for processes such as tokenization, entity recognition, etc.
used to produce a set of annotations, which are often left unspecified in annotated resources (see for
example (Fokkens et al., 2013)). While not required for web service exchange in the LAPPS Grid, the
inclusion of such references can contribute to the better replication and evaluation of results in the field.
Figure 3 shows the information for Token, which defines the concept, identifies application types that
produce objects of this type, cross-references a similar concept in ISOCat, and provides the URI for use
in the JSON-LD representation. It also specifies the common properties that can be specified for a set
of Token objects, and the individual properties that can be associated with a Token object. There is no
requirement to use any or all of the properties in the JSON-LD representation, and we foresee that many
web services will require definition of objects and properties not included in the WS-EVR or elsewhere.
</bodyText>
<footnote confidence="0.99938775">
24http://www.w3.org/TR/2004/REC-owl-semantics-20040210/#owl sameAs
25http://www.w3.org/TR/owl-ref/#subClassOf-def
26Available at http://www.anc.org/LAPPS/EP/Meeting-2013-09-26-Pisa/ep-draft.pdf
27http://vocab.lappsgrid.org 38
</footnote>
<figureCaption confidence="0.999949">
Figure 1: Fragment of the WS-EV ontology (associated properties in gray)
</figureCaption>
<bodyText confidence="0.9999856875">
We therefore provide mechanisms for (principled) definition of objects and features beyond the WS-
EVR. Two options exist: users can provide a URI where a new term or other documentation is defined,
or users may add a definition to the WS-EVR. In the latter case, service providers use the name space
automatically assigned to them at the time of registration, thereby avoiding name clashes and providing
a distinction between general categories used across services and more idiosyncratic categories.
Figure 2 shows a fragment of the JSON-LD representation that references terms in the WS-
EV. The context statement at the top identifies the URI that is to be prefixed to any unknown
name in order to identify the location of its definition. For the purposes of the example, the
text to be processed is given inline. Our current implementation includes results from each step
in a pipeline, where applicable, together with metadata describing the service applied in each step
(here, org.anc.lapps.stanford.SATokenizer:1.4.0) and identified by an internally-defined type (stan-
ford). The annotations include references to the objects defined in the WS-EV, in this example, To-
ken (defined at http://vocab.lappsgrid.org/Token) with (inherited) features id, start, end and specific
feature string, defined at http://vocab.lappsgrid.org/Token#id, http://vocab.lappsgrid.org/Token#start,
http://vocab.lappsgrid.org/Token#end, and http://vocab.lappsgrid.orgToken/#string, respectively. The
web page defining these terms is shown in Figure 3.
</bodyText>
<equation confidence="0.99808285">
&amp;quot;@context&amp;quot; : &amp;quot;http://vocab.lappsgrid.org/&amp;quot;,
&amp;quot;metadata&amp;quot; : { },
&amp;quot;text&amp;quot; : {
&amp;quot;@value&amp;quot; : &amp;quot;Some of the strongest critics of our welfare system...&amp;quot; }
&amp;quot;steps&amp;quot; : [ {
&amp;quot;metadata&amp;quot; : {
&amp;quot;contains&amp;quot; : {
&amp;quot;Token&amp;quot; : {
&amp;quot;producer&amp;quot; : &amp;quot;org.anc.lapps.stanford.SATokenizer:1.4.0&amp;quot;,
&amp;quot;type&amp;quot; : &amp;quot;stanford&amp;quot;
}
}
},
&amp;quot;annotations&amp;quot; : [ {
&amp;quot;@type&amp;quot; : &amp;quot;Token&amp;quot;,
&amp;quot;id&amp;quot; : &amp;quot;tok0&amp;quot;,
&amp;quot;start&amp;quot; : 18,
&amp;quot;end&amp;quot; : 22,
&amp;quot;features&amp;quot; : {
string&amp;quot; : &amp;quot;Some&amp;quot; }
</equation>
<page confidence="0.702594">
},
</page>
<figureCaption confidence="0.984428">
Figure 2: JSON-LD fragment referencing the LAPPS Grid WS-EV
</figureCaption>
<page confidence="0.940686">
39
</page>
<figureCaption confidence="0.998068">
Figure 3: Token definition in the LAPPS WS-EVR
</figureCaption>
<subsectionHeader confidence="0.999845">
4.1 Mapping to JSON-LD
</subsectionHeader>
<bodyText confidence="0.999994875">
As noted above in Section 1, existing schemes and systems for organizing linguistic information ex-
changed by NLP tools vary considerably. Figure 4 shows some variants for a few commonly used NLP
tools, which differ in terminology, structure, and physical format. To be used in the LAPPS Grid, tools
such as those in the list are wrapped so that their output is in JSON-LD format, which provides syntactic
interoperability, terms are mapped to corresponding objects in the WS-EV, and the object-feature rela-
tions reflect those defined in the WS-EV. Correspondingly, wrappers transduce the JSON-LD/WS-EV
representation to the format used internally by the tool on input. This way, the tools use their internal
format as usual and map to JSON-LD/WS-EV for exchange only.
</bodyText>
<page confidence="0.992256">
40
</page>
<table confidence="0.994705466666666">
Name Input Form Output Form Example
Stanford tagger pt n/a word pos opl box NN1
XML n/a XML inline &lt;word id=”0” pos=”VB”&gt;Let&lt;/word&gt;
NaCTeM tagger pt n/a word/pos inline box/NN1
CLAWS (1) pt n/a word pos inline box NN1
CLAWS (2) pt n/a XML inline &lt;w id=”2” pos=”NN1”&gt;Type&lt;/w&gt;
CST Copenhagen pt n/a word/pos inline box/NN1
TreeTagger pt? n/a word pos lem opl The DT the
TnT token opl word pos opl der ART
word (pos pr)+ opl Falkenstein NE 8.00 NN 1.99
Twitter NLP pt opl word pos conf opl smh G 0.9406
NLTK pt s,bls [(’word’, ’pos’)] inline [(’At’, ’IN’), (’eight’, ’CD’),]
OpenNLP splitter pt n/a sentences ospl I can’t tell you if he’s here.
OpenNLP tokenizer sent ospl tokens wss, ospl I can ’t tell you if he ’s here .
OpenNLP tagger token wss, ospl word pos ospl At IN eight CD o’clock JJ on IN
</table>
<equation confidence="0.4072715">
pt = plain text opl = one per line wss = white space separated
ospl = one sentence per line bps = blank line separated
</equation>
<figureCaption confidence="0.99372">
Figure 4: I/O variants for common splitters, tokenizers, and POS taggers
</figureCaption>
<bodyText confidence="0.821858">
For example, the Stanford POS tagger XML output format produces output like this:
&lt;word id=&amp;quot;0&amp;quot; pos=&amp;quot;VB&amp;quot;&gt;Let&lt;/word&gt;
This maps to the following JSON-LD/WS-EV representation:
</bodyText>
<equation confidence="0.9486012">
{
&amp;quot;@type&amp;quot; : &amp;quot;Token&amp;quot;,
&amp;quot;id&amp;quot; : 0&amp;quot;,
&amp;quot;start&amp;quot; : 18,
&amp;quot;end&amp;quot; : 21,
&amp;quot;features&amp;quot; : {
&amp;quot;string&amp;quot; : &amp;quot;Let&amp;quot;,
&amp;quot;pos&amp;quot; : &amp;quot;VB&amp;quot;
}
}
</equation>
<bodyText confidence="0.999949444444445">
The Stanford representation uses the term “word” as an XML element name, gives an id and pos
as attribute-value pairs, and includes the string being annotated as element content. For conversion to
JSON-LD/WS-EV, “word” is mapped to “Token”, the attributes id and pos map to features of the Token
object with the same names, and the element content becomes the value of the string feature. Because
the JSON-LD representation uses standoff annotation, the attributes start and end are added in order to
provide the offset location of the string in the original data.
Services that share a format other than JSON-LD need not map into and out of JSON-LD/WS-EV
when pipelined in the LAPPS Grid. For example, two GATE services would exchange GATE XML
documents, and two UIMA services would exchange UIMA CAS, as usual. This avoids unnecessary
conversion and at the same time allows including services (consisting of individual tools or composite
workflows) from other frameworks. Figure 5 gives an example of the logical flow in the LAPPS Grid,
showing conversions into and out of JSON-LD/WS-EV where needed.
Each service in the LAPPS Grid is required to provide metadata that specifies what kind of input is
required and what kind of output is produced. For example, any service as depicted in the flow diagram
in Figure 5 can require input of a particular format (gate, uima, json-ld) with specific content (tokens,
sentences, etc.). The LAPPS Grid uses the notion of discriminators to encode these requirements, and
the pipeline composer can use these discriminators to determine if conversions are needed and/or input
requirements are met. The discriminators refer to elements of the vocabulary.
</bodyText>
<sectionHeader confidence="0.999045" genericHeader="evaluation">
5 Collaborations
</sectionHeader>
<bodyText confidence="0.994442">
The LAPPS Grid project is collaborating with several other projects in an attempt to harmonize the
development of web service platforms, and ultimately to participate in a federation of grids and ser-
vice platforms throughout the world. Existing 41and potential projects across the globe are beginning to
</bodyText>
<figureCaption confidence="0.919678">
Figure 5: Logical flow through the LAPPS Grid (client-server communication not represented)
</figureCaption>
<bodyText confidence="0.9999355">
converge on common data models, best practices, and standards, and the vision of a comprehensive in-
frastructure supporting discovery and deployment of web services that deliver language resources and
processing components is an increasingly achievable goal. Our vision is therefore not for a monolithic
grid, but rather a heterogeneous configuration of federated grids that implement common strategies for
managing and inter-changing linguistic information, so that services on all of these grids are mutually
accessible.
To this end, the LAPPS Grid project has established a multi-way international collaboration among the
US partners and institutions in Asia, Australia, and Europe. The basis is a formal federation among the
LAPPS Grid, the Language Grid (Kyoto University, Japan), NECTEC (Thailand), grids operated by the
University of Indonesia and Xinjiang University (China), and LinguaGrid28, scheduled for implementa-
tion in January 2015. The connection of these six grids into a single federated entity will enable access
to all services and resources on any of these grids by users of any one of them and, perhaps most impor-
tantly, facilitate adding additional grids and service platforms to the federation. Currently, the European
META-NET initiative is committed to joining the federation in the near future.
In addition to the projects listed above, we are also collaborating with several groups on technical
solutions to achieve interoperability and in particular, on development of the WS-EV, the JSON-LD
format, and a corollary development of an ontology of web service types. These collaborators include
the Alveo Project (Macquarie University, Australia) (Cassidy et al., 2014), the Language Grid project,
and the Lider project29. We actively seek collaboration with others in order to move closer to achieving
a “global laboratory” for language applications.
</bodyText>
<sectionHeader confidence="0.999485" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999951714285714">
In this paper, we have given a brief overview of the LAPPS Web Service Exchange Vocabulary (WS-
EV), which provides a terminology for a core of linguistic objects and features exchanged among NLP
tools that consume and produce linguistically annotated data. The goal is to bring the field closer to
achieving semantic interoperability among NLP data, tools, and services. We are actively working to both
engage with existing projects and teams and leverage available resources to move toward convergence
of terminology in the field for the purposes of exchange, as well as promote an environment (the LAPPS
Grid) within which the WS-EV can help achieve these goals.
</bodyText>
<footnote confidence="0.977278">
28http://www.linguagrid.org/
29http://www.lider-project.eu 42
</footnote>
<sectionHeader confidence="0.993653" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9956855">
This work was supported by National Science Foundation grants NSF-ACI 1147944 and NSF-ACI
1147912.
</bodyText>
<sectionHeader confidence="0.995593" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999772604651163">
Steve Cassidy, Dominique Estival, Timothy Jones, Denis Burnham, and Jared Burghold. 2014. The Alveo Virtual
Laboratory: A Web based Repository API. In Proceedings of the Ninth International Conference on Language
Resources and Evaluation (LREC’14), Reykjavik, Iceland, may. European Language Resources Association
(ELRA).
Christopher Cieri, Denise DiPersio, , and Jonathan Wright. 2014. Intellectual property rights management with
web services. In Proceedings of the Workshop on Open Infrastructures and Analysis Frameworks for HLT,
Dublin, Ireland, August.
David Ferrucci, Eric Nyberg, James Allan, Ken Barker, Eric Brown, Jennifer Chu-Carroll, Arthur Ciccolo, Pablo
Duboue, James Fan, David Gondek, Eduard Hovy, Boris Katz, Adam Lally, Michael McCord, Paul Morarescu,
Bill Murdock, Bruce Porter, John Prager, Tomek Strzalkowski, Chris Welty, and Wlodek Zadrozny. 2009.
Towards the Open Advancement of Question Answering Systems. Technical report, IBM Research, Armonk,
New York.
David A. Ferrucci, Eric W. Brown, Jennifer Chu-Carroll, James Fan, David Gondek, Aditya Kalyanpur, Adam
Lally, J. William Murdock, Eric Nyberg, John M. Prager, Nico Schlaefer, and Christopher A. Welty. 2010.
Building Watson: An overview of the DeepQA project. AI Magazine, 31(3):59–79.
Antske Fokkens, Marieke van Erp, Marten Postma, Ted Pedersen, Piek Vossen, and Nuno Freire. 2013. Offspring
from reproduction problems: What replication failure teaches us. In Proceedings of the 51st Annual Meeting
of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1691–1701, Sofia, Bulgaria,
August. Association for Computational Linguistics.
Elmer Garduno, Zi Yang, Avner Maiberg, Collin McCormack, Yan Fang, and Eric Nyberg. 2013. CSE Frame-
work: A UIMA-based Distributed System for Configuration Space Exploration Unstructured Information Man-
agement Architecture. In Peter Klgl, Richard Eckart de Castilho, and Katrin Tomanek, editors, UIMA@GSCL,
CEUR Workshop Proceedings, pages 14–17. CEUR-WS.org.
Sebastian Hellmann, Jens Lehmann, S¨oren Auer, and Martin Br¨ummer. 2013. Integrating nlp using linked data.
In 12th International Semantic Web Conference, 21-25 October 2013, Sydney, Australia.
Nancy Ide and James Pustejovsky. 2010. What Does Interoperability Mean, Anyway? Toward an Operational
Definition of Interoperability. In Proceedings of the Second International Conference on Global Interoperability
for Language Resources. ICGL.
Nancy Ide and Keith Suderman. 2014. The Linguistic Annotation Framework: A Standard for Annotation Inter-
change and Merging. Language Resources and Evaluation.
Nancy Ide, James Pustejovsky, Nicoletta Calzolari, and Claudia Soria. 2009. The SILT and FlaReNet international
collaboration for interoperability. In Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP,
August.
Nancy Ide, James Pustejovsky, Christopher Cieri, Eric Nyberg, Di Wang, Keith Suderman, Marc Verhagen, and
Jonathan Wright. 2014. The language application grid. In Proceedings of the Ninth International Conference
on Language Resources and Evaluation (LREC’14), Reykjavik, Iceland, may. European Language Resources
Association (ELRA).
ISO-24612. 2012. Language Resource Management - Linguistic Annotation Framework. ISO 24612.
Alkesh Patel, Zi Yang, Eric Nyberg, and Teruko Mitamura. 2013. Building an optimal QA system automatically
using configuration space exploration for QA4MRE’13 tasks. In Proceedings of CLEF 2013.
Zi Yang, Elmer Garduno, Yan Fang, Avner Maiberg, Collin McCormack, and Eric Nyberg. 2013. Building optimal
information systems automatically: Configuration space exploration for biomedical information systems. In
Proceedings of the CIKM’13.
</reference>
<page confidence="0.999832">
43
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.077493">
<title confidence="0.999349">The Language Application Grid Web Service Exchange Vocabulary</title>
<author confidence="0.995567">Nancy</author>
<affiliation confidence="0.792418">Department of Computer Vassar</affiliation>
<address confidence="0.970256">Poughkeepsie, New York</address>
<email confidence="0.999789">ide@cs.vassar.edu</email>
<author confidence="0.930542">Keith</author>
<affiliation confidence="0.7917015">Department of Computer Vassar</affiliation>
<address confidence="0.995514">Poughkeepsie, New York</address>
<email confidence="0.995534">suderman@anc.org</email>
<author confidence="0.969072">James</author>
<affiliation confidence="0.8596645">Department of Computer Brandeis</affiliation>
<address confidence="0.772584">Waltham, Massachusetts</address>
<email confidence="0.999705">jamesp@cs.brandeis.edu</email>
<author confidence="0.992923">Marc</author>
<affiliation confidence="0.788502333333333">Department of Computer Brandeis Waltham, Massachusetts</affiliation>
<email confidence="0.998571">marc@cs.brandeis.edu</email>
<abstract confidence="0.9951268">In the context of the Linguistic Applications (LAPPS) Grid project, we have undertaken the definition of a Web Service Exchange Vocabulary (WS-EV) specifying a terminology for a core of linguistic objects and features exchanged among NLP tools that consume and produce linguistically annotated data. The goal is not to define a new set of terms, but rather to provide a single web location where terms relevant for exchange among NLP tools are defined and provide a “sameAs” link to all known web-based definitions that correspond to them. The WS-EV is intended to be used by a federation of six grids currently being formed but is usable by any web service platform. Ultimately, the WS-EV could be used for data exchange among tools in general, in addition to web services.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Steve Cassidy</author>
<author>Dominique Estival</author>
<author>Timothy Jones</author>
<author>Denis Burnham</author>
<author>Jared Burghold</author>
</authors>
<title>The Alveo Virtual Laboratory: A Web based Repository API.</title>
<date>2014</date>
<journal>European Language Resources Association (ELRA).</journal>
<booktitle>In Proceedings of the Ninth International Conference on Language Resources and Evaluation (LREC’14),</booktitle>
<location>Reykjavik, Iceland,</location>
<contexts>
<context position="29151" citStr="Cassidy et al., 2014" startWordPosition="4374" endWordPosition="4377">se grids by users of any one of them and, perhaps most importantly, facilitate adding additional grids and service platforms to the federation. Currently, the European META-NET initiative is committed to joining the federation in the near future. In addition to the projects listed above, we are also collaborating with several groups on technical solutions to achieve interoperability and in particular, on development of the WS-EV, the JSON-LD format, and a corollary development of an ontology of web service types. These collaborators include the Alveo Project (Macquarie University, Australia) (Cassidy et al., 2014), the Language Grid project, and the Lider project29. We actively seek collaboration with others in order to move closer to achieving a “global laboratory” for language applications. 6 Conclusion In this paper, we have given a brief overview of the LAPPS Web Service Exchange Vocabulary (WSEV), which provides a terminology for a core of linguistic objects and features exchanged among NLP tools that consume and produce linguistically annotated data. The goal is to bring the field closer to achieving semantic interoperability among NLP data, tools, and services. We are actively working to both en</context>
</contexts>
<marker>Cassidy, Estival, Jones, Burnham, Burghold, 2014</marker>
<rawString>Steve Cassidy, Dominique Estival, Timothy Jones, Denis Burnham, and Jared Burghold. 2014. The Alveo Virtual Laboratory: A Web based Repository API. In Proceedings of the Ninth International Conference on Language Resources and Evaluation (LREC’14), Reykjavik, Iceland, may. European Language Resources Association (ELRA).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christopher Cieri</author>
<author>Denise DiPersio</author>
</authors>
<title>Intellectual property rights management with web services.</title>
<date>2014</date>
<booktitle>In Proceedings of the Workshop on Open Infrastructures and Analysis Frameworks for HLT,</booktitle>
<location>Dublin, Ireland,</location>
<marker>Cieri, DiPersio, 2014</marker>
<rawString>Christopher Cieri, Denise DiPersio, , and Jonathan Wright. 2014. Intellectual property rights management with web services. In Proceedings of the Workshop on Open Infrastructures and Analysis Frameworks for HLT, Dublin, Ireland, August.</rawString>
</citation>
<citation valid="false">
<authors>
<author>David Ferrucci</author>
<author>Eric Nyberg</author>
<author>James Allan</author>
<author>Ken Barker</author>
<author>Eric Brown</author>
<author>Jennifer Chu-Carroll</author>
<author>Arthur Ciccolo</author>
<author>Pablo Duboue</author>
<author>James Fan</author>
<author>David Gondek</author>
<author>Eduard Hovy</author>
<author>Boris Katz</author>
<author>Adam Lally</author>
<author>Michael McCord</author>
<author>Paul Morarescu</author>
<author>Bill Murdock</author>
<author>Bruce Porter</author>
<author>John Prager</author>
<author>Tomek Strzalkowski</author>
<author>Chris Welty</author>
<author>Wlodek Zadrozny</author>
</authors>
<title>Towards the Open Advancement of Question Answering Systems.</title>
<date>2009</date>
<tech>Technical report, IBM Research,</tech>
<location>Armonk, New York.</location>
<contexts>
<context position="7792" citStr="Ferrucci et al., 2009" startWordPosition="1093" endWordPosition="1096">rom servers around the globe, and enables users to easily add their own language resources, services, and even service grids to satisfy their particular needs. 9http://www.foaf-project.org 10http://langrid.nict 11http://langrid.portal.cs.ui.ac.id/langrid/ 12http://langrid.servicegrid-bangkok.org 13http://www.linguagrid.org/ 14http://www.panacea-lr.eu 15http://langrid.nict 16http://panacea-lr.eu/ 17http://www.linguagrid.org/ 18http://www.clarin.eu/ 35 The most distinctive innovation in the LAPPS Grid that is not included in other projects is the provision of an open advancement (OA) framework (Ferrucci et al., 2009a) for component- and application-based evaluation of NLP tools and pipelines. The availability of this type of evaluation service will provide an unprecedented tool for NLP development that could, in itself, take the field to a new level of productivity. OA involves evaluating multiple possible solutions to a problem, consisting of different configurations of component tools, resources, and evaluation data, to find the optimal solution among them, and enabling rapid identification of frequent error categories, together with an indication of which module(s) and error type(s) have the greatest </context>
</contexts>
<marker>Ferrucci, Nyberg, Allan, Barker, Brown, Chu-Carroll, Ciccolo, Duboue, Fan, Gondek, Hovy, Katz, Lally, McCord, Morarescu, Murdock, Porter, Prager, Strzalkowski, Welty, Zadrozny, 2009</marker>
<rawString>David Ferrucci, Eric Nyberg, James Allan, Ken Barker, Eric Brown, Jennifer Chu-Carroll, Arthur Ciccolo, Pablo Duboue, James Fan, David Gondek, Eduard Hovy, Boris Katz, Adam Lally, Michael McCord, Paul Morarescu, Bill Murdock, Bruce Porter, John Prager, Tomek Strzalkowski, Chris Welty, and Wlodek Zadrozny. 2009. Towards the Open Advancement of Question Answering Systems. Technical report, IBM Research, Armonk, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Ferrucci</author>
<author>Eric W Brown</author>
<author>Jennifer Chu-Carroll</author>
<author>James Fan</author>
<author>David Gondek</author>
<author>Aditya Kalyanpur</author>
<author>Adam Lally</author>
<author>J William Murdock</author>
<author>Eric Nyberg</author>
<author>John M Prager</author>
<author>Nico Schlaefer</author>
<author>Christopher A Welty</author>
</authors>
<title>Building Watson: An overview of the DeepQA project.</title>
<date>2010</date>
<journal>AI Magazine,</journal>
<volume>31</volume>
<issue>3</issue>
<contexts>
<context position="8753" citStr="Ferrucci et al., 2010" startWordPosition="1239" endWordPosition="1242">erent configurations of component tools, resources, and evaluation data, to find the optimal solution among them, and enabling rapid identification of frequent error categories, together with an indication of which module(s) and error type(s) have the greatest impact on overall performance. On this basis, enhancements and/or modifications can be introduced with an eye toward achieving the largest possible reduction in error rate (Ferrucci et al., 2009; Yang et al., 2013). OA was used in the development of IBM’s Watson to achieve steady performance gains over the four years of its development (Ferrucci et al., 2010); more recently, the open-source OAQA project has released software frameworks which provide general support for open advancement (Garduno et al., 2013; Yang et al., 2013), which has been used to rapidly develop information retrieval and question answering systems for bioinformatics (Yang et al., 2013; Patel et al., 2013). The fundamental system architecture of the LAPPS Grid is based on the Open Service Grid Initiative’s Service Grid Server Software19 developed by the National Institute of Information and Communications Technology (NICT) in Japan and used to implement Kyoto University’s Langu</context>
</contexts>
<marker>Ferrucci, Brown, Chu-Carroll, Fan, Gondek, Kalyanpur, Lally, Murdock, Nyberg, Prager, Schlaefer, Welty, 2010</marker>
<rawString>David A. Ferrucci, Eric W. Brown, Jennifer Chu-Carroll, James Fan, David Gondek, Aditya Kalyanpur, Adam Lally, J. William Murdock, Eric Nyberg, John M. Prager, Nico Schlaefer, and Christopher A. Welty. 2010. Building Watson: An overview of the DeepQA project. AI Magazine, 31(3):59–79.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Antske Fokkens</author>
<author>Marieke van Erp</author>
<author>Marten Postma</author>
<author>Ted Pedersen</author>
<author>Piek Vossen</author>
<author>Nuno Freire</author>
</authors>
<title>Offspring from reproduction problems: What replication failure teaches us.</title>
<date>2013</date>
<booktitle>In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),</booktitle>
<pages>1691--1701</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Sofia, Bulgaria,</location>
<marker>Fokkens, van Erp, Postma, Pedersen, Vossen, Freire, 2013</marker>
<rawString>Antske Fokkens, Marieke van Erp, Marten Postma, Ted Pedersen, Piek Vossen, and Nuno Freire. 2013. Offspring from reproduction problems: What replication failure teaches us. In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1691–1701, Sofia, Bulgaria, August. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Elmer Garduno</author>
<author>Zi Yang</author>
</authors>
<title>Avner Maiberg, Collin McCormack, Yan Fang, and Eric Nyberg.</title>
<date>2013</date>
<booktitle>CEUR Workshop Proceedings,</booktitle>
<pages>14--17</pages>
<editor>In Peter Klgl, Richard Eckart de Castilho, and Katrin Tomanek, editors, UIMA@GSCL,</editor>
<marker>Garduno, Yang, 2013</marker>
<rawString>Elmer Garduno, Zi Yang, Avner Maiberg, Collin McCormack, Yan Fang, and Eric Nyberg. 2013. CSE Framework: A UIMA-based Distributed System for Configuration Space Exploration Unstructured Information Management Architecture. In Peter Klgl, Richard Eckart de Castilho, and Katrin Tomanek, editors, UIMA@GSCL, CEUR Workshop Proceedings, pages 14–17. CEUR-WS.org.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sebastian Hellmann</author>
<author>Jens Lehmann</author>
<author>S¨oren Auer</author>
<author>Martin Br¨ummer</author>
</authors>
<title>Integrating nlp using linked data.</title>
<date>2013</date>
<booktitle>In 12th International Semantic Web Conference,</booktitle>
<pages>21--25</pages>
<location>Sydney, Australia.</location>
<marker>Hellmann, Lehmann, Auer, Br¨ummer, 2013</marker>
<rawString>Sebastian Hellmann, Jens Lehmann, S¨oren Auer, and Martin Br¨ummer. 2013. Integrating nlp using linked data. In 12th International Semantic Web Conference, 21-25 October 2013, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Ide</author>
<author>James Pustejovsky</author>
</authors>
<title>What Does Interoperability Mean, Anyway? Toward an Operational Definition of Interoperability.</title>
<date>2010</date>
<booktitle>In Proceedings of the Second International Conference on Global Interoperability for Language Resources. ICGL.</booktitle>
<contexts>
<context position="2172" citStr="Ide and Pustejovsky, 2010" startWordPosition="316" endWordPosition="319">ocessing tools that can and should interact with one another, in particular, by forming pipelines that can branch off in multiple directions to accomplish applicationspecific processing. While some progress has been made toward enabling syntactic interoperability via the development of standard representation formats (e.g., ISO LAF/GrAF (Ide and Suderman, 2014; ISO-24612, 2012), NLP Interchange Format (NIF) (Hellmann et al., 2013), UIMA2 Common Analysis System (CAS)) which, if not identical, can be trivially mapped to one another, semantic interoperability among NLP tools remains problematic (Ide and Pustejovsky, 2010). A few efforts to create repositories, type systems, and ontologies of linguistic terms (e.g., ISOCat3, OLiA4, various repositories for UIMA type systems5, GOLD6, NIF Core Ontology7) have been undertaken to enable (or provide) a mapping among linguistic terms, but none has yet proven to include all requisite terms and relations or be easy to use and reference. General repositories such as Dublin Core8, schema.org, and the Friend of a Friend This work is licensed under a Creative Commons Attribution 4.0 International License. Page numbers and proceedings footer are added by the organizers. Lic</context>
</contexts>
<marker>Ide, Pustejovsky, 2010</marker>
<rawString>Nancy Ide and James Pustejovsky. 2010. What Does Interoperability Mean, Anyway? Toward an Operational Definition of Interoperability. In Proceedings of the Second International Conference on Global Interoperability for Language Resources. ICGL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Ide</author>
<author>Keith Suderman</author>
</authors>
<title>The Linguistic Annotation Framework: A Standard for Annotation Interchange and Merging. Language Resources and Evaluation.</title>
<date>2014</date>
<contexts>
<context position="1908" citStr="Ide and Suderman, 2014" startWordPosition="279" endWordPosition="282">Introduction There is clearly a demand within the community for some sort of standard for exchanging annotated language data among tools.1 This has become particularly urgent with the emergence of web services, which has enabled the availability of language processing tools that can and should interact with one another, in particular, by forming pipelines that can branch off in multiple directions to accomplish applicationspecific processing. While some progress has been made toward enabling syntactic interoperability via the development of standard representation formats (e.g., ISO LAF/GrAF (Ide and Suderman, 2014; ISO-24612, 2012), NLP Interchange Format (NIF) (Hellmann et al., 2013), UIMA2 Common Analysis System (CAS)) which, if not identical, can be trivially mapped to one another, semantic interoperability among NLP tools remains problematic (Ide and Pustejovsky, 2010). A few efforts to create repositories, type systems, and ontologies of linguistic terms (e.g., ISOCat3, OLiA4, various repositories for UIMA type systems5, GOLD6, NIF Core Ontology7) have been undertaken to enable (or provide) a mapping among linguistic terms, but none has yet proven to include all requisite terms and relations or be</context>
</contexts>
<marker>Ide, Suderman, 2014</marker>
<rawString>Nancy Ide and Keith Suderman. 2014. The Linguistic Annotation Framework: A Standard for Annotation Interchange and Merging. Language Resources and Evaluation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Ide</author>
<author>James Pustejovsky</author>
<author>Nicoletta Calzolari</author>
<author>Claudia Soria</author>
</authors>
<title>The SILT and FlaReNet international collaboration for interoperability.</title>
<date>2009</date>
<booktitle>In Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP,</booktitle>
<contexts>
<context position="6354" citStr="Ide et al., 2009" startWordPosition="905" endWordPosition="908"> Grid provides a critical missing layer of functionality for NLP: although existing frameworks such as UIMA and GATE provide the capability to wrap, integrate, and deploy language services, they do not provide general support for service discovery, composition, and reuse. The LAPPS Grid is a collaborative effort among US partners Brandeis University, Vassar College, Carnegie-Mellon University, and the Linguistic Data Consortium at the University of Pennsylvania, and is funded by the US National Science Foundation (NSF). The project builds on the foundation laid in the NSF-funded project SILT (Ide et al., 2009), which established a set of needs for interoperability and developed standards and best practice guidelines to implement them. LAPPS is similar in its scope and goals to ongoing projects such as The Language Grid15, PANACEA/MetaNET16, LinguaGrid17, and CLARIN18, which also provide web service access to basic NLP processing tools and resources and enable pipelining these tools to create custom NLP applications and composite services such as question answering and machine translation, as well as access to language resources such as mono- and multilingual corpora and lexicons that support NLP. T</context>
</contexts>
<marker>Ide, Pustejovsky, Calzolari, Soria, 2009</marker>
<rawString>Nancy Ide, James Pustejovsky, Nicoletta Calzolari, and Claudia Soria. 2009. The SILT and FlaReNet international collaboration for interoperability. In Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP, August.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Nancy Ide</author>
<author>James Pustejovsky</author>
<author>Christopher Cieri</author>
<author>Eric Nyberg</author>
<author>Keith Suderman Di Wang</author>
<author>Marc Verhagen</author>
<author>Jonathan Wright</author>
</authors>
<title>The language application grid.</title>
<date>2014</date>
<journal>ISO</journal>
<booktitle>In Proceedings of the Ninth International Conference on Language Resources and Evaluation (LREC’14),</booktitle>
<pages>24612</pages>
<location>Reykjavik, Iceland,</location>
<marker>Ide, Pustejovsky, Cieri, Nyberg, Di Wang, Verhagen, Wright, 2014</marker>
<rawString>Nancy Ide, James Pustejovsky, Christopher Cieri, Eric Nyberg, Di Wang, Keith Suderman, Marc Verhagen, and Jonathan Wright. 2014. The language application grid. In Proceedings of the Ninth International Conference on Language Resources and Evaluation (LREC’14), Reykjavik, Iceland, may. European Language Resources Association (ELRA). ISO-24612. 2012. Language Resource Management - Linguistic Annotation Framework. ISO 24612.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alkesh Patel</author>
<author>Zi Yang</author>
<author>Eric Nyberg</author>
<author>Teruko Mitamura</author>
</authors>
<title>Building an optimal QA system automatically using configuration space exploration for QA4MRE’13 tasks.</title>
<date>2013</date>
<booktitle>In Proceedings of CLEF</booktitle>
<contexts>
<context position="9076" citStr="Patel et al., 2013" startWordPosition="1287" endWordPosition="1290"> modifications can be introduced with an eye toward achieving the largest possible reduction in error rate (Ferrucci et al., 2009; Yang et al., 2013). OA was used in the development of IBM’s Watson to achieve steady performance gains over the four years of its development (Ferrucci et al., 2010); more recently, the open-source OAQA project has released software frameworks which provide general support for open advancement (Garduno et al., 2013; Yang et al., 2013), which has been used to rapidly develop information retrieval and question answering systems for bioinformatics (Yang et al., 2013; Patel et al., 2013). The fundamental system architecture of the LAPPS Grid is based on the Open Service Grid Initiative’s Service Grid Server Software19 developed by the National Institute of Information and Communications Technology (NICT) in Japan and used to implement Kyoto University’s Language Grid, a service grid that supports multilingual communication and collaboration. Like the Language Grid, the LAPPS Grid provides three main functions: language service registration and deployment, language service search, and language service composition and execution. As noted above, the LAPPS Grid is instrumented to</context>
</contexts>
<marker>Patel, Yang, Nyberg, Mitamura, 2013</marker>
<rawString>Alkesh Patel, Zi Yang, Eric Nyberg, and Teruko Mitamura. 2013. Building an optimal QA system automatically using configuration space exploration for QA4MRE’13 tasks. In Proceedings of CLEF 2013.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Zi Yang</author>
<author>Elmer Garduno</author>
<author>Yan Fang</author>
<author>Avner Maiberg</author>
<author>Collin McCormack</author>
<author>Eric Nyberg</author>
</authors>
<title>Building optimal information systems automatically: Configuration space exploration for biomedical information systems.</title>
<date>2013</date>
<booktitle>In Proceedings of the CIKM’13.</booktitle>
<contexts>
<context position="8606" citStr="Yang et al., 2013" startWordPosition="1214" endWordPosition="1217">, in itself, take the field to a new level of productivity. OA involves evaluating multiple possible solutions to a problem, consisting of different configurations of component tools, resources, and evaluation data, to find the optimal solution among them, and enabling rapid identification of frequent error categories, together with an indication of which module(s) and error type(s) have the greatest impact on overall performance. On this basis, enhancements and/or modifications can be introduced with an eye toward achieving the largest possible reduction in error rate (Ferrucci et al., 2009; Yang et al., 2013). OA was used in the development of IBM’s Watson to achieve steady performance gains over the four years of its development (Ferrucci et al., 2010); more recently, the open-source OAQA project has released software frameworks which provide general support for open advancement (Garduno et al., 2013; Yang et al., 2013), which has been used to rapidly develop information retrieval and question answering systems for bioinformatics (Yang et al., 2013; Patel et al., 2013). The fundamental system architecture of the LAPPS Grid is based on the Open Service Grid Initiative’s Service Grid Server Softwar</context>
<context position="12287" citStr="Yang et al., 2013" startWordPosition="1738" endWordPosition="1741"> Engines map from commonly used formats to the JSON-LD interchange format; converters are automatically invoked as needed to meet the I/O requirements of pipelined services. Some LAPPS services are pre-wrapped to produce and consume JSON-LD. Thus, JSON-LD provides syntactic interoperability among services in the LAPPS Grid; semantic inter19http://servicegrid.net 20Our current user interface provides easy (re-)configuration of single pipelines; we are currently extending the interface to allow the user to specify an entire range of pipeline configurations using configuration descriptors (ECD; (Yang et al., 2013) to define a space of possible pipelines, where each step might be achieved by multiple components or services and each component or service may have configuration parameters with more than one possible value to be tested. The system will then automatically generate metrics measurements plus variance and statistical significance calculations for each possible pipeline, using a service-oriented version of the Configuration Space Exploration (CSE) algorithm (Yang et al., 2013). 21See (Cieri et al., 2014) for a description of how licensing 36 issues are handled in the LAPPS Grid. operability is p</context>
</contexts>
<marker>Yang, Garduno, Fang, Maiberg, McCormack, Nyberg, 2013</marker>
<rawString>Zi Yang, Elmer Garduno, Yan Fang, Avner Maiberg, Collin McCormack, and Eric Nyberg. 2013. Building optimal information systems automatically: Configuration space exploration for biomedical information systems. In Proceedings of the CIKM’13.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>