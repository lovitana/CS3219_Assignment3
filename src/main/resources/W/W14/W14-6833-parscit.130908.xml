<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000372">
<title confidence="0.94929">
NTOU Chinese Spelling Check System in CLP Bake-off 2014
</title>
<author confidence="0.994385">
Wei-Cheng Chu and Chuan-Jie Lin
</author>
<affiliation confidence="0.9938625">
Department of Computer Science and Engineering
National Taiwan Ocean University
</affiliation>
<address confidence="0.981738">
No 2, Pei-Ning Road, Keelung 202, Taiwan R.O.C.
</address>
<email confidence="0.998981">
{wcchu.cse, cjlin}@ntou.edu.tw
</email>
<sectionHeader confidence="0.994802" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999887461538462">
This paper describes details of NTOU Chinese
spelling check system participating in CLP-
2014 Bakeoff. Confusion sets were expanded
by using two language resources, Shuowen
and Four-Corner codes. A new method to find
spelling errors in legal multi-character words
was proposed. Comparison of sentence gen-
eration probabilities is the main information
for error detection and correction. A rule-
based classifier and a SVM-based classifier
were trained to identify spelling errors. Two
formal runs were submitted, and the rule-based
classifier achieved better performance.
</bodyText>
<sectionHeader confidence="0.998783" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999941469387755">
Automatic spell checking is a basic and impor-
tant technique in building NLP systems. It has
been studied since 1960s as Blair (1960) and
Damerau (1964) made the first attempt to solve
the spelling error problem in English. Spelling
errors in English can be grouped into two classes:
non-word spelling errors and real-word spelling
errors.
A non-word spelling error occurs when the
written string cannot be found in a dictionary,
such as in fly fron* Paris. The typical approach
is finding a list of candidates from a large dic-
tionary by edit distance or phonetic similarity
(Mitten, 1996; Deorowicz and Ciura, 2005; Carl-
son and Fette, 2007; Chen et al., 2007; Mitten
2008; Whitelaw et al., 2009).
A real-word spelling error occurs when one
word is mistakenly used for another word, such
as in fly form* Paris. Typical approaches in-
clude using confusion set (Golding and Roth,
1999; Carlson et al., 2001), contextual informa-
tion (Verberne, 2002; Islam and Inkpen, 2009),
and others (Pirinen and Linden, 2010; Amorim
and Zampieri, 2013).
Spelling error problem in Chinese is quite dif-
ferent. Because there is no word delimiter in a
Chinese sentence and almost every Chinese
character can be considered as a one-character
word, most of the errors are real-word errors.
On the other hand, there is also an illegal-
character error where a hand-written symbol is
not a legal Chinese character (thus not collected
in a dictionary). Such an error cannot happen in
a digital document because all characters in Chi-
nese character sets such as BIG5 or Unicode are
legal.
There have been many attempts to solve the
spelling error problem in Chinese (Chang, 1994;
Zhang et al., 2000; Cucerzan and Brill, 2004; Li
et al., 2006; Liu et al., 2008). Among them, lists
of visually and phonologically similar characters
play an important role in Chinese spelling check
(Liu et al., 2011).
This bake-off is the second Chinese spell
checking evaluation project. It includes two sub-
tasks: error detection and error correction. The
task is organized based on some research works
(Wu et al., 2010; Chen et al., 2011; Liu et al.,
2011).
</bodyText>
<sectionHeader confidence="0.924201" genericHeader="introduction">
2 Replacement and Filtering
</sectionHeader>
<bodyText confidence="0.9995932">
Figure 1 shows the architecture of our Chinese
spelling checking system. A sentence under
consideration is first word-segmented. Candi-
dates of spelling errors are replaced by similar
characters one by one. The newly created sen-
tences are word segmented again. They are
sorted according to sentence generation prob-
abilities measured by word or POS bigram model.
If a replacement results in a better sentence,
spelling error is reported.
</bodyText>
<page confidence="0.982128">
210
</page>
<note confidence="0.908864">
Proceedings of the Third CIPS-SIGHAN Joint Conference on Chinese Language Processing, pages 210–215,
Wuhan, China, 20-21 October 2014
</note>
<figureCaption confidence="0.956956">
Figure 1. Architecture of NTOU Chinese
Spelling Check System
</figureCaption>
<bodyText confidence="0.999866666666667">
In our experience, the confusion sets provided
by the organizers do not cover all the cases in the
development set. Two sources used to expend
confusion sets are described in Section 2.1.
There are two kinds of spelling-error candi-
dates in our system: one-character words and
multi-character words. Their replacement proce-
dures are different, as described in Section 2.2
and 2.3.
</bodyText>
<subsectionHeader confidence="0.994333">
2.1 Confusion set expansion
</subsectionHeader>
<bodyText confidence="0.9991934375">
In SIGHAN7 Bake-off 2013 Chinese Spelling
Check task (Wu et al., 2013), the organizers pro-
vided two kinds of confusion sets, phonologi-
cally similar characters and visually similar char-
acters. We adopted all these confusion sets ex-
cept the one consisting of characters having the
same radical and the same number of strokes,
because we do not think they are similar.
However, these confusion sets do not cover all
the spelling error cases in the training data. We
used two resources to expand the confusion sets.
One is Showen and the other is the Four-Corner
Encoding System.
Shuowen Jieji1 (說文解字) is a dictionary of
Chinese characters. Xu Shen (許慎), author of
this dictionary, analyzed the characters according
</bodyText>
<equation confidence="0.564661">
1 說文解字
http://zh.wikisource.org/wiki/說文解字
</equation>
<bodyText confidence="0.988912173913043">
to the six lexicographical categories (六書). One
major category is phono-semantic compound
characters (形聲), which were created by com-
bining a radical (形符) with a phonetic compo-
nent (聲符). We collect characters with same
phonetic components to expand confusion sets,
because they are by definition phonologically
and visually similar. For example, the following
characters share the same phonetic component
“寺” thus become confusion candidates (their
actual pronunciation are given in brackets):
侍[si4]持[chi2]恃[shi4]特[te4]時[shi2]...
The Four-Corner System2 (四角號碼) is an en-
coding system for Chinese characters. Digits
0~9 represent some typical shapes in character
strokes. A Chinese character is encoded into 4
digits which represent the shapes found in its 4
corners. We collect characters in the same Four-
Corner codes to expand confusion sets, because
they are by definition visually similar. For ex-
ample, the following characters are all encoded
as 6080 in the Four-Corner System:
只囚貝足炅是員異買圓圚
</bodyText>
<subsectionHeader confidence="0.98232">
2.2 One-character word replacement
</subsectionHeader>
<bodyText confidence="0.9938262">
After doing word segmentation on the original
sentence, every one-character word is considered
as candidate where error occurs. These candi-
dates are one-by-one replaced by similar charac-
ters in their confusion sets to see if a new sen-
tence is more acceptable.
Taking C1-1701-2 in the test set as an exam-
ple. The original sentence is
...嬰兒個數卻特續下滑...
and it is segmented as
</bodyText>
<equation confidence="0.840289">
...嬰兒 個數 卻 特 續 下滑...
</equation>
<bodyText confidence="0.998103">
“卻”, “特” and “續” are one-character words so
they are candidates of spelling errors. The con-
fusion set of the character “卻” includes 腳欲叩
卸... and the confusion set of the character “特”
includes 持時恃峙侍... Replacing these one-
character words with similar characters one-by-
one will produce the following new sentences.
...嬰兒個數腳特續下滑...
...嬰兒個數欲特續下滑...
</bodyText>
<page confidence="0.529545">
2 四腳號碼列表
</page>
<figure confidence="0.974153923076923">
http://code.web.idv.hk/misc/four.php
Word segmentation
Segmented org sent
Similar character
replacement
Replaced sentences
Word segmentation
Segmented rpl sent
Top 1 Result
Original sentence
Filtering rules;
N-gram probabilities
(words or POS)
</figure>
<page confidence="0.990383">
211
</page>
<bodyText confidence="0.9900955">
...嬰兒個數卻持續下滑...
...嬰兒個數卻時續下滑...
</bodyText>
<subsectionHeader confidence="0.984137">
2.3 Multi-character word replacement
</subsectionHeader>
<bodyText confidence="0.989650181818182">
Our observation on the training sets finds that
some errors occur in multi-character words,
which means that a string containing an incorrect
character is also a legal word. Examples are “身
手” (shen1-shou3, skills) versus “生手” (sheng1-
shou3, amateur), and “人員” (ren2-yuan2, mem-
ber) vs. “人緣” (ren2-yuan2, popularity).
To handle such kinds of spelling errors, we
created confusion sets for all known words by
the following method. The resource for creating
word-level confusion set is Academia Sinica
Balanced Corpus (ASBC for short hereafter, cf.
馬偉雲 et al., 2001).
For each word appearing in ASBC, each char-
acter in the word is substituted with its similar
characters one by one. If a newly created word
also appears in ASBC, it is collected into the
confusion set of this word. Take the word “人
員” as an example. After replacing “人” or “員”
with their similar characters, new strings 仁員,
壬員, ..., 人緣, and 人韻 are looked up in ASBC.
Among them, only 人緣, 人猿, 人文, and 人俑
are legal words thus collected in 人員’s confu-
sion set.
For each multi-character word, if it has a con-
fusion set, similar words in the set one-by-one
substitute the original word to see if a new sen-
tence is more acceptable.
Take ID=00058 in the Bakeoff 2013 CSC
Datasets as an example. The original sentence is
... 在教室裡只要人員好...
and it is segmented as
... 在 教室 裡 只要 人員 好...
where “教室”, “只要”, and “人員” are multi-
character words with confusion sets. By replac-
ing 教室 with 教士, 教師..., replacing 只要 with
祇要, 只有, and replacing 人員 with 人緣, 人
猿..., the following new sentences will be gener-
ated.
... 在教士裡只要人員好...
... 在教師裡只要人員好...
... 在教室裡祇要人員好...
... 在教室裡只要人緣好...
... 在教室裡只要人猿好...
</bodyText>
<subsectionHeader confidence="0.997353">
2.4 Filtering rules
</subsectionHeader>
<bodyText confidence="0.999644">
Two filter rules are applied before error detection
in order to discard apparently incorrect cases.
The rules are defined as follows.
</bodyText>
<note confidence="0.45505">
Rule 1: No error in person names
</note>
<bodyText confidence="0.999908111111111">
If a replacement results in a person name, dis-
card it. Our word segmentation system performs
named entity recognition at the same time. If the
replacing similar character can be considered as
a Chinese family name, the consequent charac-
ters might be merged into a person name. As
most of the spelling errors do not occur in per-
sonal names, we simply ignore these replace-
ments. Take C1-1701-2 as an example:
</bodyText>
<equation confidence="0.817648">
...每 位 產 齡 婦女...
</equation>
<bodyText confidence="0.935685666666667">
“魏” is phonologically similar to “位” and is a
Chinese family name. The newly created sen-
tence is segmented as
...每 魏產齡(PERSON) 婦女...
where “魏產齡” is recognized as a person name.
We will discard such a replacement.
</bodyText>
<subsectionHeader confidence="0.339173">
Rule 2: Stopword filtering
</subsectionHeader>
<bodyText confidence="0.999450571428572">
For the one-character replacement, if the re-
placed (original) character is a personal anaphora
(你 ‘you’ 我 ‘I’ 他 ‘he/she’) or numbers from 1
to 10 (一二三四五六七八九十), discard the re-
placement. We assume that a writer seldom mis-
spell such words. Take B1-0122-2 as an exam-
ple:
</bodyText>
<equation confidence="0.705256">
...我 會 在 二 號 出口 等 你...
</equation>
<bodyText confidence="0.946720333333333">
Although “二” is a one-character word, it is in
our stoplist therefore no replacement is per-
formed on this word.
</bodyText>
<sectionHeader confidence="0.994706" genericHeader="method">
3 Error Detection and Correction
</sectionHeader>
<bodyText confidence="0.999961">
In our system, error detection and correction
greatly rely on sentence generation probabilities.
Therefore, all the newly created sentences should
also be word segmented. If a new sentence re-
sults in a better word segmentation, it is very
likely that the original character is misused and
this replacement is correct. But if no replace-
ment is better than the original sentence, it is re-
ported as “no misspelling”.
Three language models were used to measure
sentence generation probabilities as described in
Section 3.1. Two formal runs were output of two
</bodyText>
<page confidence="0.996063">
212
</page>
<bodyText confidence="0.9936765">
different classifiers, SVM-based and rule-based
systems, as described in Section 3.2 and 3.3.
</bodyText>
<subsectionHeader confidence="0.993711">
3.1 N-gram probabilities
</subsectionHeader>
<bodyText confidence="0.999829363636364">
The possibility of a sequence of words can be
measured as sentence generation probability by
language models. We used smoothed word-
unigram, word-bigram and POS-bigram models
in our experiments. The training corpus used to
build language models is ASBC. As usual, we
use log probabilities instead.
A basic hypothesis is that a “better” sentence
often has higher probability than the original one.
We define preference scores to capture such kind
of features:
</bodyText>
<equation confidence="0.998261666666667">
log(ProbM (Sorg))
prefM(Snew,Sorg) = ) 1
− (E1)
log Prob ( )
( M new
S
</equation>
<bodyText confidence="0.999924285714286">
where M is the language model (word-unigram
model, etc.), Sorg is the original sentence, Snew is
the new sentence, and Prob(s) is the generation
probability of sentence s. By this definition, a
new sentence having higher probability than the
original one will have a preference score larger
than 0, and the higher the better.
</bodyText>
<subsectionHeader confidence="0.998697">
3.2 SVM-based classifier
</subsectionHeader>
<bodyText confidence="0.999852833333333">
6 features defined in Table 1 were used to train a
support vector machine classifier (Chang and Lin,
2011). Besides the preference scores of word-
unigram, word-bigram, and POS-bigram prob-
abilities, another kind of features reveals whether
a new sentence has the highest preference score
among all replacements.
Unfortunately, the developed classifier tends
to label all replacements as positive. So we de-
fine a threshold so that the replacement is ac-
cepted only when SVM thinks the probability of
assigning “positive” label is larger than 0.95.
</bodyText>
<table confidence="0.62292825">
# Feature definition
1 Preference score of word-unigram prob.
2 Preference score of word-bigram prob.
3 Preference score of POS-bigram prob.
</table>
<footnote confidence="0.745121333333333">
4 Is max of word-unigram prob. preference
5 Is max of word-bigram prob. preference
6 Is max of POS-bigram prob. preference
</footnote>
<tableCaption confidence="0.952645">
Table 1. Features for training SVM classifier
</tableCaption>
<subsectionHeader confidence="0.997793">
3.3 Rule-based classifier
</subsectionHeader>
<bodyText confidence="0.9997298125">
According to our hypothesis of error detection, a
correct sentence should have a positive prefer-
ence score since it has higher generation prob-
ability. Moreover, if many replacements have
positive preference scores, the correct one should
have the highest score.
However, in our observations, sometimes re-
placing with a frequently-seen word may result
in higher preference score, even if the replace-
ment is incorrect. Therefore, we define three
thresholds for each n-gram model, respectively,
for stricter error detection. Thresholds were
trained by using Bakeoff 2013 CSC Datasets
(Wu et al., 2013).
The rules of detecting and correcting errors are
defined as follows.
</bodyText>
<listItem confidence="0.903667642857143">
1. If no replacement has positive preference
scores, report “no error” in both error de-
tection and correction subtasks.
2. Sort the replacements first by their word-
bigram preference scores, and then by their
word-unigram preference scores, and then
by the POS-bigram preference scores.
3. If the top-1 replacement’s preference
scores are all larger than the thresholds
(0.004 for word-unigram, 0.03 for word-
bigram, and 0.001 for POS-bigram), report
“with error” and output the replacing char-
acter and its location in the sentence as
correction.
</listItem>
<sectionHeader confidence="0.978619" genericHeader="evaluation">
4 Performance
</sectionHeader>
<bodyText confidence="0.99990175">
There are two judging correctness in this bake-
off: detection level and correction level.
The metrics are evaluated in both levels by the
following metrics:
</bodyText>
<equation confidence="0.9649652">
False-Positive Rate = FP / (FP+TN)
Accuracy = (TP+TN) / (TP+TN+FP+FN)
Precision = TP / (TP+FP)
Recall = TP / (TP+FN)
F1-Score= 2* Precision * Recall)/(Precision + Recall)
</equation>
<bodyText confidence="0.999907111111111">
We submitted 2 formal runs based on two differ-
ent classifiers. The first run was output by the
rule-based classifier and the second run was out-
put by the SVM-based classifier.
Table 2 and 3 illustrate the evaluation results
of formal runs. As we can see, using the rule-
based classifier performed better than the SVM-
based classifier. Unfortunately none of them
could achieve acceptable performance.
</bodyText>
<page confidence="0.997416">
213
</page>
<table confidence="0.997669333333333">
Run FPAlarm Accuracy Precision Recall F1
Formalrun1_NTOU 0.258 0.4652 0.4219 0.1883 0.2604
Formalrun2_NTOU 0.9925 0.1045 0.1688 0.2015 0.1837
</table>
<tableCaption confidence="0.844187">
Table 2: Formal run performance in detection level.
</tableCaption>
<table confidence="0.999526333333333">
Run FPAlarm Accuracy Precision Recall F1
Formalrun1_NTOU 0.258 0.4557 0.3965 0.1695 0.2375
Formalrun2_NTOU 0.9925 0.0678 0.1143 0.1281 0.1208
</table>
<tableCaption confidence="0.998963">
Table 3: Formal run performance in correction level.
</tableCaption>
<sectionHeader confidence="0.996854" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999907230769231">
In this year, we tried to expand confusion sets in
order to obtain larger coverage of similar charac-
ters. We also proposed a new method to find
spelling errors in legal multi-character words.
We submitted 2 formal runs based on the output
of a rule-based classifier and a SVM-based clas-
sifier, respectively. The evaluation results
showed that the rule-based classifier outper-
formed the SVM-based classifier, but neither of
them achieved acceptable performance.
In the future, more features should be investi-
gated and more decision rules should be discov-
ered.
</bodyText>
<sectionHeader confidence="0.996674" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998843811594203">
R.C. de Amorim and M. Zampieri. 2013. “Effective
Spell Checking Methods Using Clustering Algo-
rithms,” Recent Advances in Natural Language
Processing, 7-13.
C. Blair. 1960. “A program for correcting spelling
errors,” Information and Control, 3:60-67.
A. Carlson, J. Rosen, and D. Roth. 2001. “Scaling up
context-sensitive text correction,” Proceedings of
the 13th Innovative Applications of Artificial Intel-
ligence Conference, 45-50.
A. Carlson and I. Fette. 2007. “Memory-Based Con-
text-Sensitive Spelling Correction at Web Scale,”
Proceedings of the 6th International Conference on
Machine Learning and Applications, 166-171.
C.C. Chang and C.J. Lin. 2011. “LIBSVM: a library
for support vector machines,” ACM Transactions
on Intelligent Systems and Technology, 2:27:1-27.
C.H. Chang. 1994. “A pilot study on automatic chi-
nese spelling error correction,” Journal of Chinese
Language and Computing, 4:143-149.
Q. Chen, M. Li, and M. Zhou. 2007. “Improving
Query Spelling Correction Using Web Search Re-
sults”, Proceedings of the 2007 Conference on
Empirical Methods in Natural Language (EMNLP-
2007), 181-189.
Y.Z. Chen, S.H. Wu, P.C. Yang, T. Ku, and G.D.
Chen. 2011. “Improve the detection of improperly
used Chinese characters in students’ essays with er-
ror model,” Int. J. Cont. Engineering Education
and Life-Long Learning, 21(1):103-116.
S. Cucerzan and E. Brill. 2004. “Spelling correction
as an iterative process that exploits the collective
knowledge of web users,” Proceedings of EMNLP,
293-300.
F. Damerau. 1964. “A technique for computer detec-
tion and correction of spelling errors.” Communi-
cations of the ACM, 7:171-176.
S. Deorowicz and M.G. Ciura. 2005. “Correcting
Spelling Errors by Modelling Their Causes,” Inter-
national Journal of Applied Mathematics and
Computer Science, 15(2):275-285.
A. Golding and D. Roth. 1999. “A winnow-based
approach to context-sensitive spelling correction,”
Machine Learning, 34(1-3):107-130.
A. Islam and D. Inkpen. 2009. “Real-word spelling
correction using googleweb 1t 3-grams,” Proceed-
ings of Empirical Methods in Natural Language
Processing (EMNLP-2009), 1241-1249.
M. Li, Y. Zhang, M.H. Zhu, and M. Zhou. 2006. “Ex-
ploring distributional similarity based models for
query spelling correction,” Proceedings of the 21st
International Conference on Computational Lin-
guistics and 44th Annual Meeting of the ACL,
1025-1032.
W. Liu, B. Allison, and L. Guthrie. 2008. “Professor
or screaming beast? Detecting words misuse in
Chinese,” The 6th edition of the Language Re-
sources and Evaluation Conference.
C.L. Liu, M.H. Lai, K.W. Tien, Y.H. Chuang, S.H.
Wu, and C.Y. Lee. 2011. “Visually and phonologi-
cally similar characters in incorrect Chinese words:
Analyses, identification, and applications,” ACM
Transactions on Asian Language Information
Processing, 10(2), 10:1-39.
R. Mitton. 1996. English Spelling and the Computer,
Harlow, Essex: Longman Group.
R. Mitton. 2008. “Ordering the Suggestions of a
Spellchecker Without Using Context,” Natural
Language Engineering, 15(2):173-192.
</reference>
<page confidence="0.984982">
214
</page>
<reference confidence="0.998908193548387">
T. Pirinen and K. Linden. 2010. “Creating and
weighting hunspell dictionaries as finite-state
automata,” Investigationes Linguisticae, 21.
S. Verberne. 2002. Context-sensitive spell checking
based on word trigram probabilities, Master thesis,
University of Nijmegen.
C. Whitelaw, B. Hutchinson, G.Y. Chung, and G.
Ellis. 2009. “Using the Web for Language Inde-
pendent Spellchecking and Autocorrection,” Pro-
ceedings Of Conference On Empirical Methods In
Natural Language Processing (EMNLP-2009),
890-899.
S.H. Wu, Y.Z. Chen, P.C. Yang, T. Ku, and C.L. Liu.
2010. “Reducing the False Alarm Rate of Chinese
Character Error Detection and Correction,” Pro-
ceedings of CIPS-SIGHAN Joint Conference on
Chinese Language Processing (CLP 2010), 54-61.
S.H. Wu, C.L. Liu, and L.H. Lee. 2013. “Chinese
Spelling Check Evaluation at SIGHAN Bake-off
2013,” Proceedings of the 7th SIGHAN Workshop
on Chinese Language Processing (SIGHAN&apos;13),
35-42.
L. Zhang, M. Zhou, C.N. Huang, and H.H. Pan. 2000.
“Automatic detecting/correcting errors in Chinese
text by an approximate word-matching algorithm,”
Proceedings of the 38th Annual Meeting on Asso-
ciation for Computational Linguistics, 248-254.
馬偉雲, 謝佑明, 楊昌樺, 陳克健. 2001. “中文語料
庫構建及管理系統設計,” Proceedings of the 14th
Conference on Computational Linguistics and
Speech Processing (ROCLING 14), 1-17.
</reference>
<page confidence="0.999125">
215
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.393945">
<title confidence="0.525075">NTOU Chinese Spelling Check System in CLP Bake-off 2014</title>
<author confidence="0.90305">Wei-Cheng Chu</author>
<author confidence="0.90305">Chuan-Jie</author>
<affiliation confidence="0.988094">Department of Computer Science and National Taiwan Ocean</affiliation>
<address confidence="0.901841">No 2, Pei-Ning Road, Keelung 202, Taiwan R.O.C.</address>
<email confidence="0.91769">wcchu.cse@ntou.edu.tw</email>
<email confidence="0.91769">cjlin@ntou.edu.tw</email>
<abstract confidence="0.996806785714286">This paper describes details of NTOU Chinese spelling check system participating in CLP- 2014 Bakeoff. Confusion sets were expanded by using two language resources, Shuowen and Four-Corner codes. A new method to find spelling errors in legal multi-character words was proposed. Comparison of sentence generation probabilities is the main information for error detection and correction. A rulebased classifier and a SVM-based classifier were trained to identify spelling errors. Two formal runs were submitted, and the rule-based classifier achieved better performance.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R C de Amorim</author>
<author>M Zampieri</author>
</authors>
<title>Effective Spell Checking Methods Using Clustering Algorithms,”</title>
<date>2013</date>
<booktitle>Recent Advances in Natural Language Processing,</booktitle>
<pages>7--13</pages>
<marker>de Amorim, Zampieri, 2013</marker>
<rawString>R.C. de Amorim and M. Zampieri. 2013. “Effective Spell Checking Methods Using Clustering Algorithms,” Recent Advances in Natural Language Processing, 7-13.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Blair</author>
</authors>
<title>A program for correcting spelling errors,”</title>
<date>1960</date>
<journal>Information and Control,</journal>
<pages>3--60</pages>
<contexts>
<context position="970" citStr="Blair (1960)" startWordPosition="140" endWordPosition="141">onfusion sets were expanded by using two language resources, Shuowen and Four-Corner codes. A new method to find spelling errors in legal multi-character words was proposed. Comparison of sentence generation probabilities is the main information for error detection and correction. A rulebased classifier and a SVM-based classifier were trained to identify spelling errors. Two formal runs were submitted, and the rule-based classifier achieved better performance. 1 Introduction Automatic spell checking is a basic and important technique in building NLP systems. It has been studied since 1960s as Blair (1960) and Damerau (1964) made the first attempt to solve the spelling error problem in English. Spelling errors in English can be grouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs w</context>
</contexts>
<marker>Blair, 1960</marker>
<rawString>C. Blair. 1960. “A program for correcting spelling errors,” Information and Control, 3:60-67.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Carlson</author>
<author>J Rosen</author>
<author>D Roth</author>
</authors>
<title>Scaling up context-sensitive text correction,”</title>
<date>2001</date>
<booktitle>Proceedings of the 13th Innovative Applications of Artificial Intelligence Conference,</booktitle>
<pages>45--50</pages>
<contexts>
<context position="1741" citStr="Carlson et al., 2001" startWordPosition="267" endWordPosition="270"> non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chi</context>
</contexts>
<marker>Carlson, Rosen, Roth, 2001</marker>
<rawString>A. Carlson, J. Rosen, and D. Roth. 2001. “Scaling up context-sensitive text correction,” Proceedings of the 13th Innovative Applications of Artificial Intelligence Conference, 45-50.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Carlson</author>
<author>I Fette</author>
</authors>
<title>Memory-Based Context-Sensitive Spelling Correction at Web Scale,”</title>
<date>2007</date>
<booktitle>Proceedings of the 6th International Conference on Machine Learning and Applications,</booktitle>
<pages>166--171</pages>
<contexts>
<context position="1477" citStr="Carlson and Fette, 2007" startWordPosition="221" endWordPosition="225">checking is a basic and important technique in building NLP systems. It has been studied since 1960s as Blair (1960) and Damerau (1964) made the first attempt to solve the spelling error problem in English. Spelling errors in English can be grouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the er</context>
</contexts>
<marker>Carlson, Fette, 2007</marker>
<rawString>A. Carlson and I. Fette. 2007. “Memory-Based Context-Sensitive Spelling Correction at Web Scale,” Proceedings of the 6th International Conference on Machine Learning and Applications, 166-171.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C C Chang</author>
<author>C J Lin</author>
</authors>
<title>LIBSVM: a library for support vector machines,”</title>
<date>2011</date>
<journal>ACM Transactions on Intelligent Systems and Technology,</journal>
<pages>2--27</pages>
<contexts>
<context position="11451" citStr="Chang and Lin, 2011" startWordPosition="1845" endWordPosition="1848">bility than the original one. We define preference scores to capture such kind of features: log(ProbM (Sorg)) prefM(Snew,Sorg) = ) 1 − (E1) log Prob ( ) ( M new S where M is the language model (word-unigram model, etc.), Sorg is the original sentence, Snew is the new sentence, and Prob(s) is the generation probability of sentence s. By this definition, a new sentence having higher probability than the original one will have a preference score larger than 0, and the higher the better. 3.2 SVM-based classifier 6 features defined in Table 1 were used to train a support vector machine classifier (Chang and Lin, 2011). Besides the preference scores of wordunigram, word-bigram, and POS-bigram probabilities, another kind of features reveals whether a new sentence has the highest preference score among all replacements. Unfortunately, the developed classifier tends to label all replacements as positive. So we define a threshold so that the replacement is accepted only when SVM thinks the probability of assigning “positive” label is larger than 0.95. # Feature definition 1 Preference score of word-unigram prob. 2 Preference score of word-bigram prob. 3 Preference score of POS-bigram prob. 4 Is max of word-unig</context>
</contexts>
<marker>Chang, Lin, 2011</marker>
<rawString>C.C. Chang and C.J. Lin. 2011. “LIBSVM: a library for support vector machines,” ACM Transactions on Intelligent Systems and Technology, 2:27:1-27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C H Chang</author>
</authors>
<title>A pilot study on automatic chinese spelling error correction,”</title>
<date>1994</date>
<journal>Journal of Chinese Language and Computing,</journal>
<pages>4--143</pages>
<contexts>
<context position="2485" citStr="Chang, 1994" startWordPosition="392" endWordPosition="393">Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is fi</context>
</contexts>
<marker>Chang, 1994</marker>
<rawString>C.H. Chang. 1994. “A pilot study on automatic chinese spelling error correction,” Journal of Chinese Language and Computing, 4:143-149.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Q Chen</author>
<author>M Li</author>
<author>M Zhou</author>
</authors>
<title>Improving Query Spelling Correction Using Web Search Results”,</title>
<date>2007</date>
<booktitle>Proceedings of the 2007 Conference on Empirical Methods in Natural Language (EMNLP2007),</booktitle>
<pages>181--189</pages>
<contexts>
<context position="1496" citStr="Chen et al., 2007" startWordPosition="226" endWordPosition="229">mportant technique in building NLP systems. It has been studied since 1960s as Blair (1960) and Damerau (1964) made the first attempt to solve the spelling error problem in English. Spelling errors in English can be grouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word </context>
</contexts>
<marker>Chen, Li, Zhou, 2007</marker>
<rawString>Q. Chen, M. Li, and M. Zhou. 2007. “Improving Query Spelling Correction Using Web Search Results”, Proceedings of the 2007 Conference on Empirical Methods in Natural Language (EMNLP2007), 181-189.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Z Chen</author>
<author>S H Wu</author>
<author>P C Yang</author>
<author>T Ku</author>
<author>G D Chen</author>
</authors>
<title>Improve the detection of improperly used Chinese characters in students’ essays with error model,”</title>
<date>2011</date>
<journal>Int. J. Cont. Engineering Education and Life-Long Learning,</journal>
<pages>21--1</pages>
<contexts>
<context position="2927" citStr="Chen et al., 2011" startWordPosition="464" endWordPosition="467">t because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. Candidates of spelling errors are replaced by similar characters one by one. The newly created sentences are word segmented again. They are sorted according to sentence generation probabilities measured by word or POS bigram model. If a replacement results in a better sentence, spelling error is reported. 210 Proceedings of the Third CIPS-SIGHAN Joint Conference on Chinese Language Processing, pages 210–215, Wuhan, Chi</context>
</contexts>
<marker>Chen, Wu, Yang, Ku, Chen, 2011</marker>
<rawString>Y.Z. Chen, S.H. Wu, P.C. Yang, T. Ku, and G.D. Chen. 2011. “Improve the detection of improperly used Chinese characters in students’ essays with error model,” Int. J. Cont. Engineering Education and Life-Long Learning, 21(1):103-116.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Cucerzan</author>
<author>E Brill</author>
</authors>
<title>Spelling correction as an iterative process that exploits the collective knowledge of web users,”</title>
<date>2004</date>
<booktitle>Proceedings of EMNLP,</booktitle>
<pages>293--300</pages>
<contexts>
<context position="2531" citStr="Cucerzan and Brill, 2004" startWordPosition="398" endWordPosition="401"> is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. Candidates of spelling err</context>
</contexts>
<marker>Cucerzan, Brill, 2004</marker>
<rawString>S. Cucerzan and E. Brill. 2004. “Spelling correction as an iterative process that exploits the collective knowledge of web users,” Proceedings of EMNLP, 293-300.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Damerau</author>
</authors>
<title>A technique for computer detection and correction of spelling errors.”</title>
<date>1964</date>
<journal>Communications of the ACM,</journal>
<pages>7--171</pages>
<contexts>
<context position="989" citStr="Damerau (1964)" startWordPosition="143" endWordPosition="144">e expanded by using two language resources, Shuowen and Four-Corner codes. A new method to find spelling errors in legal multi-character words was proposed. Comparison of sentence generation probabilities is the main information for error detection and correction. A rulebased classifier and a SVM-based classifier were trained to identify spelling errors. Two formal runs were submitted, and the rule-based classifier achieved better performance. 1 Introduction Automatic spell checking is a basic and important technique in building NLP systems. It has been studied since 1960s as Blair (1960) and Damerau (1964) made the first attempt to solve the spelling error problem in English. Spelling errors in English can be grouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mis</context>
</contexts>
<marker>Damerau, 1964</marker>
<rawString>F. Damerau. 1964. “A technique for computer detection and correction of spelling errors.” Communications of the ACM, 7:171-176.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Deorowicz</author>
<author>M G Ciura</author>
</authors>
<title>Correcting Spelling Errors by Modelling Their Causes,”</title>
<date>2005</date>
<journal>International Journal of Applied Mathematics and Computer Science,</journal>
<pages>15--2</pages>
<contexts>
<context position="1452" citStr="Deorowicz and Ciura, 2005" startWordPosition="217" endWordPosition="220">troduction Automatic spell checking is a basic and important technique in building NLP systems. It has been studied since 1960s as Blair (1960) and Damerau (1964) made the first attempt to solve the spelling error problem in English. Spelling errors in English can be grouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-chara</context>
</contexts>
<marker>Deorowicz, Ciura, 2005</marker>
<rawString>S. Deorowicz and M.G. Ciura. 2005. “Correcting Spelling Errors by Modelling Their Causes,” International Journal of Applied Mathematics and Computer Science, 15(2):275-285.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Golding</author>
<author>D Roth</author>
</authors>
<title>A winnow-based approach to context-sensitive spelling correction,”</title>
<date>1999</date>
<booktitle>Machine Learning,</booktitle>
<pages>34--1</pages>
<contexts>
<context position="1718" citStr="Golding and Roth, 1999" startWordPosition="263" endWordPosition="266">rouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document becaus</context>
</contexts>
<marker>Golding, Roth, 1999</marker>
<rawString>A. Golding and D. Roth. 1999. “A winnow-based approach to context-sensitive spelling correction,” Machine Learning, 34(1-3):107-130.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Islam</author>
<author>D Inkpen</author>
</authors>
<title>Real-word spelling correction using googleweb 1t 3-grams,”</title>
<date>2009</date>
<booktitle>Proceedings of Empirical Methods in Natural Language Processing (EMNLP-2009),</booktitle>
<pages>1241--1249</pages>
<contexts>
<context position="1806" citStr="Islam and Inkpen, 2009" startWordPosition="276" endWordPosition="279">word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have</context>
</contexts>
<marker>Islam, Inkpen, 2009</marker>
<rawString>A. Islam and D. Inkpen. 2009. “Real-word spelling correction using googleweb 1t 3-grams,” Proceedings of Empirical Methods in Natural Language Processing (EMNLP-2009), 1241-1249.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Li</author>
<author>Y Zhang</author>
<author>M H Zhu</author>
<author>M Zhou</author>
</authors>
<title>Exploring distributional similarity based models for query spelling correction,”</title>
<date>2006</date>
<booktitle>Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL,</booktitle>
<pages>1025--1032</pages>
<contexts>
<context position="2548" citStr="Li et al., 2006" startWordPosition="402" endWordPosition="405">se there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. Candidates of spelling errors are replaced </context>
</contexts>
<marker>Li, Zhang, Zhu, Zhou, 2006</marker>
<rawString>M. Li, Y. Zhang, M.H. Zhu, and M. Zhou. 2006. “Exploring distributional similarity based models for query spelling correction,” Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, 1025-1032.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Liu</author>
<author>B Allison</author>
<author>L Guthrie</author>
</authors>
<title>Professor or screaming beast? Detecting words misuse</title>
<date>2008</date>
<booktitle>in Chinese,” The 6th edition of the Language Resources and Evaluation Conference.</booktitle>
<contexts>
<context position="2567" citStr="Liu et al., 2008" startWordPosition="406" endWordPosition="409">rd delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. Candidates of spelling errors are replaced by similar characte</context>
</contexts>
<marker>Liu, Allison, Guthrie, 2008</marker>
<rawString>W. Liu, B. Allison, and L. Guthrie. 2008. “Professor or screaming beast? Detecting words misuse in Chinese,” The 6th edition of the Language Resources and Evaluation Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Liu</author>
<author>M H Lai</author>
<author>K W Tien</author>
<author>Y H Chuang</author>
<author>S H Wu</author>
<author>C Y Lee</author>
</authors>
<title>Visually and phonologically similar characters in incorrect Chinese words: Analyses, identification, and applications,”</title>
<date>2011</date>
<journal>ACM Transactions on Asian Language Information Processing,</journal>
<volume>10</volume>
<issue>2</issue>
<pages>10--1</pages>
<contexts>
<context position="2704" citStr="Liu et al., 2011" startWordPosition="427" endWordPosition="430">eal-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. Candidates of spelling errors are replaced by similar characters one by one. The newly created sentences are word segmented again. They are sorted according to sentence generation probabilities measu</context>
</contexts>
<marker>Liu, Lai, Tien, Chuang, Wu, Lee, 2011</marker>
<rawString>C.L. Liu, M.H. Lai, K.W. Tien, Y.H. Chuang, S.H. Wu, and C.Y. Lee. 2011. “Visually and phonologically similar characters in incorrect Chinese words: Analyses, identification, and applications,” ACM Transactions on Asian Language Information Processing, 10(2), 10:1-39.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Mitton</author>
</authors>
<title>English Spelling and the Computer,</title>
<date>1996</date>
<publisher>Longman Group.</publisher>
<location>Harlow, Essex:</location>
<marker>Mitton, 1996</marker>
<rawString>R. Mitton. 1996. English Spelling and the Computer, Harlow, Essex: Longman Group.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Mitton</author>
</authors>
<title>Ordering the Suggestions of a Spellchecker Without Using Context,” Natural Language Engineering,</title>
<date>2008</date>
<pages>15--2</pages>
<marker>Mitton, 2008</marker>
<rawString>R. Mitton. 2008. “Ordering the Suggestions of a Spellchecker Without Using Context,” Natural Language Engineering, 15(2):173-192.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Pirinen</author>
<author>K Linden</author>
</authors>
<title>Creating and weighting hunspell dictionaries as finite-state automata,”</title>
<date>2010</date>
<journal>Investigationes Linguisticae,</journal>
<volume>21</volume>
<contexts>
<context position="1844" citStr="Pirinen and Linden, 2010" startWordPosition="282" endWordPosition="285">ritten string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spell</context>
</contexts>
<marker>Pirinen, Linden, 2010</marker>
<rawString>T. Pirinen and K. Linden. 2010. “Creating and weighting hunspell dictionaries as finite-state automata,” Investigationes Linguisticae, 21.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Verberne</author>
</authors>
<title>Context-sensitive spell checking based on word trigram probabilities, Master thesis,</title>
<date>2002</date>
<institution>University of Nijmegen.</institution>
<contexts>
<context position="1781" citStr="Verberne, 2002" startWordPosition="274" endWordPosition="275">g errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unic</context>
</contexts>
<marker>Verberne, 2002</marker>
<rawString>S. Verberne. 2002. Context-sensitive spell checking based on word trigram probabilities, Master thesis, University of Nijmegen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Whitelaw</author>
<author>B Hutchinson</author>
<author>G Y Chung</author>
<author>G Ellis</author>
</authors>
<title>Using the Web for Language Independent Spellchecking and Autocorrection,”</title>
<date>2009</date>
<booktitle>Proceedings Of Conference On Empirical Methods In Natural Language Processing (EMNLP-2009),</booktitle>
<pages>890--899</pages>
<contexts>
<context position="1533" citStr="Whitelaw et al., 2009" startWordPosition="232" endWordPosition="235">LP systems. It has been studied since 1960s as Blair (1960) and Damerau (1964) made the first attempt to solve the spelling error problem in English. Spelling errors in English can be grouped into two classes: non-word spelling errors and real-word spelling errors. A non-word spelling error occurs when the written string cannot be found in a dictionary, such as in fly fron* Paris. The typical approach is finding a list of candidates from a large dictionary by edit distance or phonetic similarity (Mitten, 1996; Deorowicz and Ciura, 2005; Carlson and Fette, 2007; Chen et al., 2007; Mitten 2008; Whitelaw et al., 2009). A real-word spelling error occurs when one word is mistakenly used for another word, such as in fly form* Paris. Typical approaches include using confusion set (Golding and Roth, 1999; Carlson et al., 2001), contextual information (Verberne, 2002; Islam and Inkpen, 2009), and others (Pirinen and Linden, 2010; Amorim and Zampieri, 2013). Spelling error problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is a</context>
</contexts>
<marker>Whitelaw, Hutchinson, Chung, Ellis, 2009</marker>
<rawString>C. Whitelaw, B. Hutchinson, G.Y. Chung, and G. Ellis. 2009. “Using the Web for Language Independent Spellchecking and Autocorrection,” Proceedings Of Conference On Empirical Methods In Natural Language Processing (EMNLP-2009), 890-899.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S H Wu</author>
<author>Y Z Chen</author>
<author>P C Yang</author>
<author>T Ku</author>
<author>C L Liu</author>
</authors>
<title>Reducing the False Alarm Rate of Chinese Character Error Detection and Correction,”</title>
<date>2010</date>
<booktitle>Proceedings of CIPS-SIGHAN Joint Conference on Chinese Language Processing (CLP 2010),</booktitle>
<pages>54--61</pages>
<contexts>
<context position="2908" citStr="Wu et al., 2010" startWordPosition="460" endWordPosition="463">a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. Candidates of spelling errors are replaced by similar characters one by one. The newly created sentences are word segmented again. They are sorted according to sentence generation probabilities measured by word or POS bigram model. If a replacement results in a better sentence, spelling error is reported. 210 Proceedings of the Third CIPS-SIGHAN Joint Conference on Chinese Language Processing, pages </context>
</contexts>
<marker>Wu, Chen, Yang, Ku, Liu, 2010</marker>
<rawString>S.H. Wu, Y.Z. Chen, P.C. Yang, T. Ku, and C.L. Liu. 2010. “Reducing the False Alarm Rate of Chinese Character Error Detection and Correction,” Proceedings of CIPS-SIGHAN Joint Conference on Chinese Language Processing (CLP 2010), 54-61.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S H Wu</author>
<author>C L Liu</author>
<author>L H Lee</author>
</authors>
<title>Chinese Spelling Check Evaluation at SIGHAN Bake-off</title>
<date>2013</date>
<booktitle>Proceedings of the 7th SIGHAN Workshop on Chinese Language Processing (SIGHAN&apos;13),</booktitle>
<pages>35--42</pages>
<contexts>
<context position="4089" citStr="Wu et al., 2013" startWordPosition="645" endWordPosition="648">Chinese Language Processing, pages 210–215, Wuhan, China, 20-21 October 2014 Figure 1. Architecture of NTOU Chinese Spelling Check System In our experience, the confusion sets provided by the organizers do not cover all the cases in the development set. Two sources used to expend confusion sets are described in Section 2.1. There are two kinds of spelling-error candidates in our system: one-character words and multi-character words. Their replacement procedures are different, as described in Section 2.2 and 2.3. 2.1 Confusion set expansion In SIGHAN7 Bake-off 2013 Chinese Spelling Check task (Wu et al., 2013), the organizers provided two kinds of confusion sets, phonologically similar characters and visually similar characters. We adopted all these confusion sets except the one consisting of characters having the same radical and the same number of strokes, because we do not think they are similar. However, these confusion sets do not cover all the spelling error cases in the training data. We used two resources to expand the confusion sets. One is Showen and the other is the Four-Corner Encoding System. Shuowen Jieji1 (說文解字) is a dictionary of Chinese characters. Xu Shen (許慎), author of this dict</context>
<context position="12823" citStr="Wu et al., 2013" startWordPosition="2055" endWordPosition="2058">-based classifier According to our hypothesis of error detection, a correct sentence should have a positive preference score since it has higher generation probability. Moreover, if many replacements have positive preference scores, the correct one should have the highest score. However, in our observations, sometimes replacing with a frequently-seen word may result in higher preference score, even if the replacement is incorrect. Therefore, we define three thresholds for each n-gram model, respectively, for stricter error detection. Thresholds were trained by using Bakeoff 2013 CSC Datasets (Wu et al., 2013). The rules of detecting and correcting errors are defined as follows. 1. If no replacement has positive preference scores, report “no error” in both error detection and correction subtasks. 2. Sort the replacements first by their wordbigram preference scores, and then by their word-unigram preference scores, and then by the POS-bigram preference scores. 3. If the top-1 replacement’s preference scores are all larger than the thresholds (0.004 for word-unigram, 0.03 for wordbigram, and 0.001 for POS-bigram), report “with error” and output the replacing character and its location in the sentence</context>
</contexts>
<marker>Wu, Liu, Lee, 2013</marker>
<rawString>S.H. Wu, C.L. Liu, and L.H. Lee. 2013. “Chinese Spelling Check Evaluation at SIGHAN Bake-off 2013,” Proceedings of the 7th SIGHAN Workshop on Chinese Language Processing (SIGHAN&apos;13), 35-42.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Zhang</author>
<author>M Zhou</author>
<author>C N Huang</author>
<author>H H Pan</author>
</authors>
<title>Automatic detecting/correcting errors in Chinese text by an approximate word-matching algorithm,”</title>
<date>2000</date>
<booktitle>Proceedings of the 38th Annual Meeting on Association for Computational Linguistics,</booktitle>
<pages>248--254</pages>
<contexts>
<context position="2505" citStr="Zhang et al., 2000" startWordPosition="394" endWordPosition="397">r problem in Chinese is quite different. Because there is no word delimiter in a Chinese sentence and almost every Chinese character can be considered as a one-character word, most of the errors are real-word errors. On the other hand, there is also an illegalcharacter error where a hand-written symbol is not a legal Chinese character (thus not collected in a dictionary). Such an error cannot happen in a digital document because all characters in Chinese character sets such as BIG5 or Unicode are legal. There have been many attempts to solve the spelling error problem in Chinese (Chang, 1994; Zhang et al., 2000; Cucerzan and Brill, 2004; Li et al., 2006; Liu et al., 2008). Among them, lists of visually and phonologically similar characters play an important role in Chinese spelling check (Liu et al., 2011). This bake-off is the second Chinese spell checking evaluation project. It includes two subtasks: error detection and error correction. The task is organized based on some research works (Wu et al., 2010; Chen et al., 2011; Liu et al., 2011). 2 Replacement and Filtering Figure 1 shows the architecture of our Chinese spelling checking system. A sentence under consideration is first word-segmented. </context>
</contexts>
<marker>Zhang, Zhou, Huang, Pan, 2000</marker>
<rawString>L. Zhang, M. Zhou, C.N. Huang, and H.H. Pan. 2000. “Automatic detecting/correcting errors in Chinese text by an approximate word-matching algorithm,” Proceedings of the 38th Annual Meeting on Association for Computational Linguistics, 248-254.</rawString>
</citation>
<citation valid="true">
<title></title>
<date>2001</date>
<booktitle>Proceedings of the 14th Conference on Computational Linguistics and Speech Processing (ROCLING 14),</booktitle>
<pages>1--17</pages>
<marker>2001</marker>
<rawString>馬偉雲, 謝佑明, 楊昌樺, 陳克健. 2001. “中文語料 庫構建及管理系統設計,” Proceedings of the 14th Conference on Computational Linguistics and Speech Processing (ROCLING 14), 1-17.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>