<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000329">
<title confidence="0.989174">
Phrase-based Compressive Cross-Language Summarization
</title>
<author confidence="0.992532">
Jin-ge Yao Xiaojun Wan Jianguo Xiao
</author>
<affiliation confidence="0.953105">
Institute of Computer Science and Technology, Peking University, Beijing 100871, China
Key Laboratory of Computational Linguistic (Peking University), MOE, China
</affiliation>
<email confidence="0.963858">
{yaojinge, wanxiaojun, xiaojianguo}@pku.edu.cn
</email>
<sectionHeader confidence="0.997237" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9998209375">
The task of cross-language document
summarization is to create a summary in a
target language from documents in a dif-
ferent source language. Previous meth-
ods only involve direct extraction of au-
tomatically translated sentences from the
original documents. Inspired by phrase-
based machine translation, we propose
a phrase-based model to simultaneously
perform sentence scoring, extraction and
compression. We design a greedy algo-
rithm to approximately optimize the score
function. Experimental results show that
our methods outperform the state-of-the-
art extractive systems while maintaining
similar grammatical quality.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999874678571429">
The task of cross-language summarization is to
produce a summary in a target language from
documents written in a different source language.
This task is particularly useful for readers to
quickly get the main idea of documents written in
a source language that they are not familiar with.
Following Wan (2011), we focus on English-to-
Chinese summarization in this work.
The simplest and the most straightforward
way to perform cross-language summarization is
pipelining general summarization and machine
translation. Such systems either translate all the
documents before running generic summarization
algorithms on the translated documents, or sum-
marize from the original documents and then only
translate the produced summary into the target lan-
guage. Wan (2011) show that such pipelining ap-
proaches are inferior to methods that utilize in-
formation from both sides. In that work, the au-
thor proposes graph-based models and achieves
fair amount of improvement. However, to the best
of our knowledge, no previous work of this task
tries to focus on summarization beyond pure sen-
tence extraction.
On the other hand, cross-language summariza-
tion can be seen as a special kind of machine trans-
lation: translating the original documents into a
brief summary in a different language. Inspired by
phrase-based machine translation models (Koehn
et al., 2003), we propose a phrase-based scoring
scheme for cross-language summarization in this
work.
Since our framework is based on phrases, we
are not limited to produce extractive summaries.
We can use the scoring scheme to perform joint
sentence selection and compression. Unlike typi-
cal sentence compression methods, our proposed
algorithm does not require additional syntactic
preprocessing such as part-of-speech tagging or
syntactic parsing. We only utilize information
from translated texts with phrase alignments. The
scoring function consists of a submodular term of
compressed sentences and a bounded distortion
penalty term. We design a greedy procedure to
efficiently get approximate solutions.
For experimental evaluation, we use the
DUC2001 dataset with manually translated refer-
ence Chinese summaries. Results based on the
ROUGE metrics show the effectiveness of our pro-
posed methods. We also conduct manual evalua-
tion and the results suggest that the linguistic qual-
ity of produced summaries is not decreased by too
much, compared with extractive counterparts. In
some cases, the grammatical smoothness can even
be improved by compression.
The contributions of this paper include:
</bodyText>
<listItem confidence="0.999438">
• Utilizing the phrase alignment information,
we design a scoring scheme for the cross-
language document summarization task.
• We design an efficient greedy algorithm to
generate summaries. The greedy algorithm is
</listItem>
<page confidence="0.952487">
118
</page>
<note confidence="0.98518">
Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 118–127,
Lisbon, Portugal, 17-21 September 2015. c�2015 Association for Computational Linguistics.
</note>
<bodyText confidence="0.999467333333333">
partially submodular and has a provable con-
stant approximation factor to the optimal so-
lution up to a small constant.
</bodyText>
<listItem confidence="0.654462833333333">
• We achieve state-of-the-art results using the
extractive counterpart of our compressive
summarization framework. Performance in
terms of ROUGE metrics can be significantly
improved when simultaneously performing
extraction and compression.
</listItem>
<sectionHeader confidence="0.991951" genericHeader="introduction">
2 Background
</sectionHeader>
<bodyText confidence="0.999870076923077">
Document summarization can be treated as a spe-
cial kind of translation process: translating from a
bunch of related source documents to a short tar-
get summary. This analogy also holds for cross-
language document summarization, with the only
difference that the languages of source documents
and the target summary are different.
Our design of sentence scoring function for
cross-language document summarization purpose
is inspired by phrase-based machine translation
models. Here we briefly describe the general idea
of phrase-based translation. One may refer to
Koehn (2009) for more detailed description.
</bodyText>
<subsectionHeader confidence="0.984279">
2.1 Phrase-based Machine Translation
</subsectionHeader>
<bodyText confidence="0.999453041666667">
Phrase-based machine translation models are cur-
rently giving state-of-the-art translations for many
pairs of languages and dominating modern statis-
tical machine translation. Classical word-based
IBM models cannot capture local contextual in-
formation and local reordering very well. Phrase-
based translation models operate on lexical entries
with more than one word on the source language
and the target language. The allowance of multi-
word expressions is believed to be the main rea-
son for the improvements that phrase-based mod-
els give. Note that these multi-word expressions,
typically addressed as phrases in machine transla-
tion literature, are essentially continuous n-grams
and do not need to be linguistically integrate and
meaningful constituents.
Define y as a phrase-based derivation, or
more precisely a finite sequence of phrases
p1,p2, . . . ,pL. For any derivation y we use e(y)
to refer to the target-side translation text defined
by y. This translation is derived by concatenat-
ing the strings e(p1), e(p2), ... , e(pL). The scor-
ing scheme for a phrase-based derivation y from
the source sentence to the target sentence e(y) is:
</bodyText>
<equation confidence="0.998224666666667">
L
f(y) _ g(pk) + LM(e(y))
k=1
L−1� q|start(pk+1) − 1 − end(pk)|
+
k=1
</equation>
<bodyText confidence="0.999799888888889">
where LM(·) is the target-side language model
score, g(·) is the score function of phrases, q &lt; 0
is the distortion parameter for penalizing the dis-
tance between neighboring phrases in the deriva-
tion. Note that the phrases addressed here are
typically continuous n-grams and need not to be
grammatical linguistic phrasal units. Later we will
directly use phrases provided by modern machine
translation systems.
Searching for the best translation under this
score definition is difficult in general. Thus
approximate decoding algorithms such as beam
search should be applied. Meanwhile, several con-
straints should be satisfied during the decoding
process. The most important one is to set a con-
stant limit of the distortion term |start(pk+1) −
1 − end(pk) |≤ S to exhibit derivations with dis-
tant phrase translations.
</bodyText>
<sectionHeader confidence="0.979168" genericHeader="method">
3 Phrase-based Cross-Language
Summarization
</sectionHeader>
<bodyText confidence="0.9995325">
Inspired by the general idea of phrase-based
machine translation, we describe our proposed
phrase-based model for cross-language summa-
rization in this section.
</bodyText>
<subsectionHeader confidence="0.999761">
3.1 Phrase-based Sentence Scoring
</subsectionHeader>
<bodyText confidence="0.999270538461538">
In the context of cross-language summarization,
here we assume that we can also have phrases
in both source and target languages along with
phrase alignments between the two sides. For
summarization purposes, we may wish to se-
lect sentences containing more important phrases.
Then it is plausible to measure the scores of these
aligned phrases via importance weighing.
Inspired by phrase-based translation models, we
can assign phrase-based scores to sentences from
the translated documents for summarization pur-
poses. We define our scoring function for each
sentence s as:
</bodyText>
<equation confidence="0.965805333333333">
F(s) _ � d0g(p) + bg(s)
p∈s
+q dist(y(s))
</equation>
<page confidence="0.990597">
119
</page>
<bodyText confidence="0.995711205882353">
Here in the first term g(·) is the score of phrase p,
which can be simply set to document frequency.
The phrase score is penalized with a constant
damping factor d0 to decay scores for repeated
phrases. The second term bg(s) is the bigram
score of sentence s. It is used here to simu-
late the effect of language models in phrase-based
translation models. Denoting y(s) as the phrase-
based derivation (as mentioned earlier in the previ-
ous section) of sentence s, the last distortion term
dist(y(s)) = ELk=1 |start(pk+1) − 1 − end(pk)|
is exactly the same as the distortion penalty term
in phrase-based translation models. This term can
be used as a reflection of complexity of the trans-
lation. All the above terms can be derived from
bilingual sentence pairs with phrase alignments.
Meanwhile, we may also wish to exclude unim-
portant phrases and badly translated phrases. Our
definition can also be used to guide sentence com-
pression by trying to remove redundant phrase.
Based on the definition over sentences, we de-
fine our summary scoring measure over a sum-
mary S:
� dist(y(s))
+q
s∈S
where d is a predefined constant damping factor to
penalize repeated occurrences of the same phrases,
count(p, S) is the number of occurrences in the
summary S for phrase p. All other terms are in-
herited from the sentence score definition.
In the next section we describe our framework
to efficiently utilize this scoring function for cross-
language summarization.
</bodyText>
<subsectionHeader confidence="0.999965">
3.2 A Greedy Algorithm for Compressed
Sentence Selection
</subsectionHeader>
<bodyText confidence="0.999750727272727">
Utilizing the phrase-based score definition of sen-
tences, we can use greedy algorithms to simulta-
neously perform sentence selection and sentence
compression. Assuming that we have a predefined
budget B (e.g. total number of Chinese charac-
ters allowed) to restrict the total length of a gen-
erated summary. We use C(S) to denote the cost
of a summary S, measured by the number of Chi-
nese characters contained in total. The greedy al-
gorithm we will use for our compressive summa-
rization is listed in Algorithm 1.
</bodyText>
<listItem confidence="0.849128466666667">
Algorithm 1 A greedy algorithm for phrase-based
summarization
1: S + -0
2: i +- 1
3: single best = argmaxs∈U,C({s})≤B F({s})
4: while U =� 0 do
F(Si−1∪{s})−F (Si−1)
5: si = argmaxs∈U C({s})r
6: if C(Si−1 U {s}) &lt; B then
7: Si +- Si−1 U {s}
8: i + -i + 1
9: end if
10: U+-U\{si}
11: end while
12: return S∗ = argmaxS∈{single best,Si} F(S)
</listItem>
<bodyText confidence="0.99989924137931">
The space U denotes the set of all possible com-
pressed sentences. In each iteration, the algorithm
tries to find the compressed sentence with maxi-
mum gain-cost ratio (Line 5, where we will fol-
low previous work to set r = 1), and merge it to
the summary set at the current iteration (denoted
as Si). The target is to find the compression with
maximum gain-cost ratio. This will be discussed
in the next section. Note that the algorithm is also
naturally applicable to extractive summarization.
For extractive summarization, Line 5 corresponds
to direct calculations of sentence scores based on
our proposed phrase-based function and U will de-
note all full sentences from the original translated
documents.
The outline of this algorithm is very similar to
the greedy algorithm used by Morita et al. (2013)
for subtree extraction, except that in our context
the increase of cost function when adding a sen-
tence is exactly the cost of that sentence.
When the distortion term is ignored (q = 0), the
scoring function is clearly submodular 1 (Lin and
Bilmes, 2010) in terms of the set of compressed
sentences, since the score now only consists of
functional gains of phrases along with bigrams
of a compressed sentence. Morita et al. (2013)
have proved that when r = 1, this greedy algo-
rithm will achieve a constant approximation factor
2(1 − e−1) to the optimal solution. Note that this
</bodyText>
<equation confidence="0.491928">
1
</equation>
<bodyText confidence="0.98339">
only gives us the worst case guarantee. What we
can achieve in practice is usually far better.
On the other hand, setting q &lt; 0 will not affect
</bodyText>
<construct confidence="0.7114775">
1A set function F : 2U --+ R defined over subsets of
a universe set U is said to be submodular iff it satisfies the
diminishing returns property: VS C_ T C_ U \ u, we have
F(S U {u}) − F(S) &gt; F(T U {u}) − F(T).
</construct>
<equation confidence="0.997642714285714">
count(p,S)
�
p∈S i=1
di−1g(p) + � bg(s)
s∈S
�
F(S) =
</equation>
<page confidence="0.880579">
120
</page>
<bodyText confidence="0.978955888888889">
the performance guarantee too much. Intuitively
this is because in most phrase-based translation
models a distortion limit constraint |start(pk+1)−
1 − end(pk) |≤ δ will be applied on distor-
tion terms, while performing sentence compres-
sion can never increase distortion. The main con-
clusion is formulated as:
Theorem 1. If Algorithm 1 outputs Sgreedy while
the optimal solution is OPT, we have
</bodyText>
<equation confidence="0.801139">
F(Sgreedy) ≥ 12(1 − e−1)F(OPT) + 12ηγ.
</equation>
<bodyText confidence="0.999776272727273">
Here γ &gt; 0 is a constant controlled by distor-
tion difference between sentences, which is rel-
atively small in practice compared with phrase
scores. η &lt; 0 is the distortion parameter. Note
that when η is set to be 0, the scoring function is
submodular and then we recover the 12(1 − e−1)
approximation factor as studied by Morita et al.
(2013). We leave the proof of Theorem 1 to sup-
plementary materials due to space limit. The sub-
modularity term in the score plays an important
role in the proof.
</bodyText>
<subsectionHeader confidence="0.9534205">
3.3 Finding the Maximum Density
Compression
</subsectionHeader>
<bodyText confidence="0.999975571428571">
In Algorithm 1, the most important part is the
greedy selection process (Line 5). The greedy se-
lection criteria here is to maximize the gain-cost
ratio. For compressive summarization, we are try-
ing to compress each unselected sentence s to ˜s,
aiming at maximizing the gain-cost ratio, where
the gain corresponds to
</bodyText>
<equation confidence="0.9953645">
F(Si−1 ∪ {s}) − F(Si−1)
di−1g(p) + bg(s) + ηdist(s),
</equation>
<bodyText confidence="0.987683291666667">
and then add the compressed sentence s˜ with max-
imum gain-cost ratio to the summary. We will also
address the compression process for each sentence
as finding the maximum density compression. The
whole framework forms a joint selection and com-
pression process.
In our phrase-based scoring for sentences, al-
though there exist no apparent optimal substruc-
ture available for exact dynamic programming
due to nonlocal distortion penalty, we can have a
tractable approximate procedure since the search
space is only defined by local decisions on
whether a phrase should be kept or dropped.
Our compression process for each sentence s is
displayed in Algorithm 2. It gradually expands the
set of phrases to be kept in the final compression,
from the initial set of large density phrases (Line 4,
assuming that phrases with large scores and small
costs will always be kept), we can recover the
compression with maximum density. The function
dist(·, ·) is the unit distortion penalty defined as
dist(a, b) = |start(b) − 1 − end(a)|. We define
p.score to be the sum of damped phrase score for
phrase p, i.e. p.score = �count(p,Si−1) di−1g(p),
</bodyText>
<equation confidence="0.860692">
i=1
</equation>
<bodyText confidence="0.998902166666667">
when the current partial summary is Si−1. There-
fore during each iteration of the greedy selection
process, the compression procedure will also be
affected by sentences that have already been in-
cluded. Define p.cost as the number of words p
contains.
</bodyText>
<listItem confidence="0.8892122">
Algorithm 2 A growing algorithm for finding the
maximum density compressed sentence
1: function GET MAX DENSITY COMPRESSION(s, Si−1)
2: queue Q +- 0, kept +- 0
3: for each phrase p in s.phrases do
4: if p.score/p.cost &gt; 1 then
5: kept +- kept U{p}
6: Q.enqueue(p)
7: end if
8: end for
9: while Q =� 0 do
10: p +- Q.deque()
11: ppv +- p.previous phrase, pnx +- p.next phrase
if ppv.score+bg(ppv,p)+ηdist(ppv,p)
12: &gt; 1 then
</listItem>
<bodyText confidence="0.999908533333333">
Empirically we find this procedure gives al-
most the same results with exhaustive search while
maintaining efficiency. Assuming that sentence
length is no more than L, then the asymptotic com-
plexity of Algorithm 2 will be O(L) since the al-
gorithm requires two passes of all phrases. There-
fore the whole framework requires O(kNL) time
for a document cluster containing N sentences in
total to generate a summary with k sentences.
In the final compressed sentence we just leave
the selected phrases continuously as they are, rely-
ing on bigram scores to ensure local smoothness.
The task is after all a summarization task, where
bigram scores play a role of not only controlling
grammaticality but keeping main information of
</bodyText>
<figure confidence="0.577473266666667">
�= count(p,S)
p∈s �
i=1
ppv.cost+p.cost
13: Q.enqueue(ppv), kept +- kept U{ppv}
14: end if
if pnx.score+bg(pnx,p)+ηdist(p,pnx)
15: &gt; 1 then
p.cost+pnx.cost
16: Q.enqueue(pnx), kept +- kept U{pnx}
17: end if
18: end while
19: return s˜ = kept, ratio = F(Si−1u{˜s})−F(Si−1)
˜s.cost
20: end function
</figure>
<page confidence="0.985376">
121
</page>
<bodyText confidence="0.998637857142857">
the original documents.
Later we will see that this compression process
will not hurt grammatical fluency of translated
sentences in general. In many cases it may even
improve fluency by deleting redundant parenthe-
ses or removing incorrectly reordered (unimpor-
tant) phrases.
</bodyText>
<sectionHeader confidence="0.99968" genericHeader="method">
4 Experiments
</sectionHeader>
<subsectionHeader confidence="0.932432">
4.1 Data
</subsectionHeader>
<bodyText confidence="0.999663769230769">
Currently there are not so many available datasets
for our particular setting of the cross-language
summarization task. Hence we only evaluate our
method on the same dataset used by Wan (2011).
The dataset is created by manually translating the
reference summaries into Chinese from the origi-
nal DUC 2001 dataset in English. We will refer to
this dataset as the DUC 2001 dataset in this paper.
There are 30 English document sets in the DUC
2001 dataset for multi-document summarization.
Each set contains several documents related to the
same topic. Three generic reference English sum-
maries are provided by NIST annotators for each
document set. All these English summaries have
been translated to Chinese by native Chinese an-
notators.
All the English sentences in the original docu-
ments have been automatically translated into Chi-
nese using Google Translate. We also collect the
phrase alignment information from the responses
of Google Translate (stored in JSON format) along
with the translated texts. We use the Stanford Chi-
nese Word Segmenter 2 for Chinese word segmen-
tation.
The parameters in the algorithms are simply set
tober= 1,d = 0.5,η = −0.5.
</bodyText>
<subsectionHeader confidence="0.918975">
4.2 Evaluation
</subsectionHeader>
<bodyText confidence="0.997917">
We will report the performance of our compres-
sive solution, denoted as PBCS (for Phrase-Based
Compressive Summarization), with comparisons
of the following systems:
</bodyText>
<listItem confidence="0.9991175">
• PBES: The acronym comes from Phrase-
Based Extractive Summarization. It is the
extractive counterpart of our solution without
calling Algorithm 2.
• Baseline (EN): This baseline relies on
merely the English-side information for En-
</listItem>
<footnote confidence="0.895997">
2http://nlp.stanford.edu/software/
segmenter.shtml
</footnote>
<bodyText confidence="0.997665">
glish sentence ranking in the original doc-
uments. The scoring function is designed
to be document frequencies of English bi-
grams, which is similar to the second term
in our proposed sentence scoring function in
Section 3.1 and is submodular. 3 The ex-
tracted English summary is finally automati-
cally translated into the corresponding Chi-
nese summary. This is also known as the
summary translation scheme.
</bodyText>
<listItem confidence="0.999473923076923">
• Baseline (CN): This baseline relies on
merely the Chinese-side information for Chi-
nese sentence ranking. The scoring function
is similarly defined by document frequency
of Chinese bigrams. The Chinese summary
sentences are then directly extracted from the
translated Chinese documents. This is also
known as the document translation scheme.
• CoRank: We reimplement the graph-based
CoRank algorithm, which gives the state-of-
the-art performance on the same DUC 2001
dataset for comparison.
• Baseline (ENcomp): This is a compressive
</listItem>
<bodyText confidence="0.979787708333333">
baseline where the extracted English sen-
tences in Baseline (EN) will be compressed
before being translated to Chinese. The com-
pression process follows from an integer lin-
ear program as described by Clarke and La-
pata (2008). This baseline gives strong per-
formance as we have found on English DUC
2001 dataset as well as other monolingual
datasets.
We experiment with two kinds of summary bud-
gets for comparative study. The first one is limit-
ing the summary length to be no more than five
sentences. The second one is limiting the total
number of Chinese characters of each produced
summary to be no more than 300. They will be
addressed as Sentence Budgeting and Character
Budgeting in the experimental results respectively.
Similar to traditional summarization tasks, we
use the ROUGE metrics for automatic evalua-
tion of all systems in comparison. The ROUGE
metrics measure summary quality by counting
overlapping word units (e.g. n-grams) between
the candidate summary and the reference sum-
mary. Following previous work in the same
</bodyText>
<footnote confidence="0.989607333333333">
3In our experiments this method gives similar perfor-
mance compared with graph-based pipelining baselines im-
plemented in previous work.
</footnote>
<page confidence="0.996875">
122
</page>
<bodyText confidence="0.999970821428572">
task, we report the following ROUGE F-measure
scores: ROUGE-1 (unigrams), ROUGE-2 (bi-
grams), ROUGE-W (weighted longest common
subsequence; weight=1.2), ROUGE-L (longest
common subsequences), and ROUGE-SU4 (skip
bigrams with a maximum distance of 4). Here
we investigate two kinds of ROUGE metrics for
Chinese: ROUGE metrics based on words (after
Chinese word segmentation) and ROUGE metrics
based on singleton Chinese characters. The latter
metrics will not suffer from the problem of word
segmentation inconsistency.
To compare our method with extractive base-
lines in terms of information loss and grammati-
cal quality, we also ask three native Chinese stu-
dents as annotators to carry out manual evalua-
tion. The aspects considered during evaluation
include Grammaticality (GR), Non-Redundancy
(NR), Referential Clarity (RC), Topical Focus
(TF) and Structural Coherence (SC). Each aspect
is rated with scores from 1 (poor) to 5 (good) 4.
This evaluation is performed on the same random
sample of 10 document sets from the DUC 2001
dataset. One group of the gold-standard sum-
maries is left out for evaluation of human-level
performance. The other two groups are shown to
the annotators, giving them a sense of topics talked
about in the document sets.
</bodyText>
<subsectionHeader confidence="0.936825">
4.3 Results and Discussion
</subsectionHeader>
<bodyText confidence="0.99947525">
Table 1 and Table 2 display the ROUGE results for
our proposed methods and the baseline methods,
including both word-based and character-based
evaluation. We also conduct pairwise t-test and
find that almost all the differences between PBCS
and other systems are statistically significant with
p « 0.01 5 except for the ROUGE-W metric.
We have the same observations with previous
work on the inferiority of using information from
only one-side, while using Chinese-side infor-
mation only is more beneficial than English-side
only. The CoRank algorithm utilizes both sides
of information together and achieves significantly
better performance over Baseline(EN) and Base-
line(CN). Our compressive system outperforms
the CoRank algorithm 6 in all metrics.
</bodyText>
<footnote confidence="0.992590833333333">
4Fractional numbers are allowed for cases where the an-
notators feel uncertain about.
5The significance level holds after Bonferroni adjustment,
for the purpose of multiple testing.
6There exists ignorable difference between the results of
our reimplemented version of CoRank and those reported by
</footnote>
<bodyText confidence="0.998592039215687">
Also our system overperforms the compressive
pipelining system (Baseline(ENcomp)) as well.
Note that the latter only considers information
from the source language side. Meanwhile sen-
tence compression may sometimes causes worse
translations compared with translating the full
original sentence.
For manual evaluation, the average score and
standard deviation for each metric is displayed
in Table 3. From the comparison between com-
pressive summarization and the extractive ver-
sion, there exist slight improvements of non-
redundancy. This exactly matches what we can
expect from sentence compression that keeps only
important part and drop redundancy. We also ob-
serve certain amount of improvements on refer-
ential clarity. This may be a result of deletions
of some phrases containing pronouns, such as he
said. Most of such phrases are semantically unim-
portant and will be dropped during the process of
finding the maximum density compression.
Despite not directly using syntactic informa-
tion, our compressive summaries do not suffer too
much loss of grammaticality. This suggest that
bigrams can be treated as good indicators of lo-
cal grammatical smoothness. We reckon that sen-
tences describing the same events may partially
share descriptive bigram patterns, thus sentences
selected by the algorithm will consist of mostly
important patterns that appear repeatedly in the
original document cluster. Only those words that
are neither semantically important nor syntacti-
cally pivotal will be deleted.
Figure 1 lists the summaries for the first docu-
ment set D04 in the DUC 2001 dataset produced
by the proposed compressive system. The Chi-
nese side sentences have been split with spaces ac-
cording to phrase alignment results. Phrases that
have been compressed are grayed out. We also
include original English sentences for reference,
with deletions according to word alignments from
the Chinese sentences. We can observe that our
compressive system tries to compress sentences by
removing relatively unimportant phrases. The ef-
fect of translation errors (e.g. the word watch in on
storm watch has been incorrectly translated in the
example) can also be reduced since those incor-
rectly translated words will be dropped for having
low information gains. In some cases the gram-
Wan (2011). We believe that this comes from different ma-
chine translation results output by Google Translate.
</bodyText>
<page confidence="0.998158">
123
</page>
<table confidence="0.9999208">
Sentence Budgeting ROUGE-1 ROUGE-2 ROUGE-W ROUGE-L ROUGE-SU4
Baseline(EN) 0.23655 0.03550 0.05324 0.12559 0.06410
Baseline(CN) 0.23454 0.03858 0.05753 0.13120 0.06962
PBES 0.25313 0.04073 0.06103 0.13583 0.06970
CoRank (reported) N/A 0.04282 0.06158 0.14521 0.07805
CoRank (reimplemented) 0.24257 0.04115 0.06076 0.13717 0.07453
Baseline(ENcomp) 0.24879 0.04441 0.05865 0.13233 0.07543
PBCS 0.26872 0.04815 0.06425 0.14607 0.08065
Character Budgeting ROUGE-1 ROUGE-2 ROUGE-W ROUGE-L ROUGE-SU4
Baseline(EN) 0.21460 0.03494 0.05150 0.12343 0.06278
Baseline(CN) 0.21589 0.03732 0.05420 0.12867 0.06405
PBES 0.22825 0.04037 0.05527 0.12856 0.06894
CoRank (reimplemented) 0.22593 0.04069 0.05887 0.12818 0.07241
Baseline(ENcomp) 0.23663 0.04245 0.06134 0.13070 0.07365
PBCS 0.24917 0.04632 0.06252 0.13591 0.07953
</table>
<tableCaption confidence="0.998938">
Table 1: Results of word-based ROUGE evaluation
</tableCaption>
<table confidence="0.999969357142857">
Sentence Budgeting ROUGE-1 ROUGE-2 ROUGE-W ROUGE-L ROUGE-SU4
Baseline(EN) 0.34842 0.11823 0.05505 0.15665 0.12320
Baseline(CN) 0.34901 0.12015 0.05664 0.15942 0.12625
PBES 0.36618 0.12281 0.05913 0.16018 0.11317
CoRank (reimplemented) 0.37601 0.12570 0.06088 0.17350 0.13352
Baseline(ENcomp) 0.36982 0.13001 0.06906 0.16233 0.13543
PBCS 0.37890 0.13549 0.07102 0.17632 0.14098
Character Budgeting ROUGE-1 ROUGE-2 ROUGE-W ROUGE-L ROUGE-SU4
Baseline(EN) 0.33602 0.10546 0.05263 0.15437 0.12161
Baseline(CN) 0.34075 0.12012 0.05678 0.15736 0.11981
PBES 0.35483 0.11902 0.05642 0.15899 0.11205
CoRank (reimplemented) 0.36147 0.12305 0.05847 0.16962 0.13364
Baseline(ENcomp) 0.36654 0.12960 0.06503 0.15987 0.13421
PBCS 0.37842 0.13441 0.07005 0.16928 0.13985
</table>
<tableCaption confidence="0.984251">
Table 2: Results of character-based ROUGE evaluation
</tableCaption>
<table confidence="0.999592">
System GR NR RC TF SC
CoRank 3.00±0.75 3.35±0.57 3.55±0.82 3.90±0.79 3.55±0.74
PBES 2.90±0.89 3.25±0.70 3.50±0.87 3.96±0.80 3.45±0.50
PBCS 2.90±0.83 3.60±0.49 3.75±0.82 3.93±0.68 3.40±0.58
Human 4.60±0.49 4.15±0.73 4.35±0.73 4.93±0.25 3.90±0.94
</table>
<tableCaption confidence="0.999386">
Table 3: Manual evaluation results
</tableCaption>
<bodyText confidence="0.997870107142857">
matical fluency can even be improved from sen-
tence compression, as redundant parentheses may
sometimes be removed. We leave the output sum-
maries from all systems for the same document set
to supplementary materials.
In our experiments, we also study the influ-
ence of relevant parameter settings. Figure 2a de-
picts the variation of ROUGE-2 F-measure when
changing the damping factor d from different val-
ues in 11, 2−1, 3−1, 4−1, 5−11, while q = −0.5
being fixed. We can see that under proper range
the value of d does not effect the result for too
much. No damping or too much damping will
severely decrease the performance. Figure 2b
shows the performance change under different set-
tings of the distortion parameter q taking values
from 10, −0.2, −0.5, −1, −31, while fixing d =
0.5. The results suggest that, for our purposes of
summarization, the difference of considering dis-
tortion penalty or not is obvious. At certain level,
the effect brought by different values distortion pa-
rameter becomes stable.
We also empirically study the effect of approx-
imation. The compressive summarization frame-
work proposed in this paper can be trivially cast
into an integer linear program (ILP), with the
number of variables being too large to make the
problem tractable 7. In this experiment, we use
</bodyText>
<footnote confidence="0.9908754">
7By casting decisions on whether to select a certain phrase
or bigram as binary variables, with additional linear con-
straints on phrase/bigram selection consistency, we get an
ILP with essentially the same objective function and a linear
budget constraint. This is conceptually equivalent to solving
</footnote>
<page confidence="0.975303">
124
</page>
<equation confidence="0.987433">
凯特 女士 硬朗 , 紧急服务 在佛罗里达州 的 戴德 县, 承担了 风暴 的冲击
任 估计, 安德鲁 已经 造成 150亿 美元 到 200亿 美元 的损害 ( 75亿 英镑 ,
100亿 英镑 ) 。
</equation>
<bodyText confidence="0.931282166666667">
Ms Kate Hale, director of emergency services in Florida&apos;s Dade County, which bore the brunt
of the storm, estimated that Andrew had already caused Dollars 15bn to Dollars 20bn
(Pounds 7.5bn-Pounds 10bn) of damage.
雨果飓风 , 袭击 东海岸 在 1989年9月 , 花费了 保险业 约 42亿 美元 。
Hurricane Hugo, which hit the east coast in September 1989, cost the insurance industry
about Dollars 4.2bn.
</bodyText>
<equation confidence="0.982743">
美国城市 沿 墨西哥湾的 阿拉巴马州 到得克萨斯州 东部 是 在 风暴 手表 昨晚
德鲁 飓风 向西 横跨 佛罗里达州南部 席卷 后 ,造成 至少 八人死亡 和严重的
产损失 。
</equation>
<bodyText confidence="0.966184">
US CITIES along the Gulf of Mexico from Alabama to eastern Texas were on storm watch
last night as Hurricane Andrew headed west after sweeping across southern Florida, causing
at least eight deaths and severe property damage.
</bodyText>
<equation confidence="0.996278666666667">
过去的 严重 飓风 美国 ,雨果 , 袭击 南卡罗来纳州 于1989年 , 耗资 从 保险
损失 行业 42亿 美元 ,但 造成的 总伤害 的 估计 60亿 美元 和 100亿 美元 之间
不等 。
</equation>
<bodyText confidence="0.97236275">
The last serious US hurricane, Hugo, which struck South Carolina in 1989, cost the industry
Dollars 4.2bn from insured losses, though estimates of the total damage caused ranged
between Dollars 6bn and Dollars 10bn.
最初的 报道称, 至少有一人 已经 死亡 , 75 人受伤 ,数千 取得 沿着 路易斯安
那州海岸 无家可归 , 14 证实 在佛罗里达州和 死亡 三 巴哈马群岛 后 。
Initial reports said at least one person had died, 75 been injured and thousands made
homeless along the Louisiana coast, after 14 confirmed deaths in Florida and three in the
Bahamas.
</bodyText>
<figureCaption confidence="0.999522">
Figure 1: Example compressive summary
</figureCaption>
<bodyText confidence="0.999917625">
lp solve package 8 as the ILP solver to ob-
tain an exact solution on the first document cluster
(D04) in DUC 2001 dataset. In Figure 2c, we de-
pict the objective value achieved by ILP as exact
solution, comparing with results from sentences
which are gradually selected and compressed by
our greedy algorithm. We can see that the approx-
imation is close.
</bodyText>
<sectionHeader confidence="0.999923" genericHeader="method">
5 Related Work
</sectionHeader>
<bodyText confidence="0.99960185">
The task focused in this paper is cross-language
document summarization. Several pilot studies
have investigated this task. Before Wan (2011)’s
work that explicitly utilizes bilingual information
in a graph-based framework, earlier methods often
use information only from one language (de Chal-
endar et al., 2005; Pingali et al., 2007; Orasan and
Chiorean, 2008; Litvak et al., 2010).
This work is closely related to greedy algo-
rithms for budgeted submodular maximization.
Many studies have formalized text summarization
tasks as submodular maximization problems (Lin
and Bilmes, 2010; Lin and Bilmes, 2011; Morita
et al., 2013). A more recent work (Dasgupta
et al., 2013) discussed the problem of maximiz-
ing a function with a submodular part and a non-
submodular dispersion term, which may appear to
be closer to our scoring functions.
In recent years, some research has made
progress beyond extractive summarization, espe-
</bodyText>
<footnote confidence="0.753261333333333">
the original maximization problem with pruned brute-force
enumeration and therefore exactly optimal but too costly.
8http://lpsolve.sourceforge.net/
</footnote>
<bodyText confidence="0.999820594594594">
cially in the context of compressive summariza-
tion. Zajic et al. (2006) tries a pipeline strat-
egy with heuristics to generate multiple candidate
compressions and extract from this compressed
sentences. Berg-Kirkpatrick et al. (2011) cre-
ate linear models of weights learned by struc-
tural SVMs for different components and tried
to jointly formulate sentence selection and syntax
tree trimming in integer linear programs. Wood-
send and Lapata (2012) propose quasi tree sub-
stitution grammars for multiple rewriting oper-
ations. All these methods involve integer lin-
ear programming solvers to generate compressed
summaries, which is time-consuming for multi-
document summarization tasks. Almeida and
Martins (2013) form the compressive summariza-
tion problem in a more efficient dual decomposi-
tion framework. Models for sentence compression
and extractive summarization are trained by multi-
task learning techniques. Wang et al. (2013) ex-
plore different types of compression on constituent
parse trees for query-focused summarization. Li
et al. (2013) propose a guided sentence compres-
sion model with ILP-based summary sentence se-
lection. Their following work (Li et al., 2014) in-
corporate various constraints on constituent parse
trees to improve the linguistic quality of the com-
pressed sentences. In these studies, the best-
performing systems require supervised learning
for different subtasks. More recent work tries to
formulate document summarization tasks as opti-
mization problems and use their solutions to guide
sentence compression(Li et al., 2015; Yao et al.,
2015). Bing et al. (2015) employ integer linear
programming for conducting phrase selection and
merging simultaneously to form compressed sen-
tences after phrase extraction.
</bodyText>
<sectionHeader confidence="0.998278" genericHeader="conclusions">
6 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.997989666666667">
In this paper we propose a phrase-based frame-
work for the task of cross-language document
summarization. The proposed scoring scheme can
be naturally operated on compressive summariza-
tion. We use efficient greedy procedure to ap-
proximately optimize the scoring function. Exper-
imental results show improvements of our com-
pressive solution over state-of-the-art systems.
Even though we do not explicitly use any syntactic
information, the generated summaries of our sys-
tem do not lose much grammaticality and fluency.
The scoring function in our framework is in-
</bodyText>
<page confidence="0.987832">
125
</page>
<figure confidence="0.999850318181818">
0.05
0.045
ROUGE-2F
0.04
0.035
0.03
0.025
0.02
-1
-3
0 -0.2 -0.5
d
1 1/2 1/3 1/4 1/5 1/10
(a) Effect of damping factor d
0.049
0.0485
0.048
0.0475
0.047
0.0465
0.046
0.0455
0.045
0.0445
0.044
0.0435
(b) Effect of distortion parameter η
0
η
160
140
120
100
80
60
objective value
40
20
Greedy
Exact
1 2 3 4 5
number of sentences
(c) Comparison with exact solution
ROUGE-2F
</figure>
<figureCaption confidence="0.999914">
Figure 2: Experimental analysis
</figureCaption>
<bodyText confidence="0.999929631578947">
spired by earlier phrase-based machine translation
models. Our next step is to try more fine-grained
scoring schemes using similar techniques from
modern approaches of statistical machine transla-
tion. To further improve grammaticality of gener-
ated summaries, we may try to sacrifice the time
efficiency for a little bit and use syntactic informa-
tion provided by syntactic parsers.
Our framework currently uses only the single
best translation. It will be more powerful to inte-
grate machine translation and summarization, uti-
lizing multiple possible translations.
Currently many successful statistical machine
translation systems are phrase-based with align-
ment information provided and we utilize this fact
in this work. It is interesting to explore how will
the performance be affected if we are only pro-
vided with parallel sentences and then alignments
can only be derived using an independent aligner.
</bodyText>
<sectionHeader confidence="0.99863" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999829222222222">
We thank all the anonymous reviewers for help-
ful comments and suggestions. This work was
supported by National Hi-Tech Research and
Development Program (863 Program) of China
(2015AA015403, 2014AA015102) and National
Natural Science Foundation of China (61170166,
61331011). The contact author of this paper, ac-
cording to the meaning given to this role by Peking
University, is Xiaojun Wan.
</bodyText>
<sectionHeader confidence="0.997902" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.991931823529411">
Miguel Almeida and Andre Martins. 2013. Fast
and robust compressive summarization with dual de-
composition and multi-task learning. In Proceed-
ings of the 51st Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 196–206, Sofia, Bulgaria, August. As-
sociation for Computational Linguistics.
Taylor Berg-Kirkpatrick, Dan Gillick, and Dan Klein.
2011. Jointly learning to extract and compress. In
Proceedings of the 49th Annual Meeting of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies, pages 481–490, Portland, Ore-
gon, USA, June. Association for Computational Lin-
guistics.
Lidong Bing, Piji Li, Yi Liao, Wai Lam, Weiwei Guo,
and Rebecca Passonneau. 2015. Abstractive multi-
document summarization via phrase selection and
merging. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing (Volume 1: Long Papers),
pages 1587–1597, Beijing, China, July. Association
for Computational Linguistics.
James Clarke and Mirella Lapata. 2008. Global in-
ference for sentence compression: An integer linear
programming approach. Journal ofArtificial Intelli-
gence Research, 31:273–381.
Anirban Dasgupta, Ravi Kumar, and Sujith Ravi. 2013.
Summarization through submodularity and disper-
sion. In Proceedings of the 51st Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), pages 1014–1022, Sofia, Bul-
garia, August. Association for Computational Lin-
guistics.
Ga¨el de Chalendar, Romaric Besanc¸on, Olivier Ferret,
Gregory Grefenstette, and Olivier Mesnard. 2005.
Crosslingual summarization with thematic extrac-
tion, syntactic sentence simplification, and bilin-
gual generation. In Workshop on Crossing Barri-
ers in Text Summarization Research, 5th Interna-
tional Conference on Recent Advances in Natural
Language Processing (RANLP2005).
Philipp Koehn, Franz Josef Och, and Marcu Daniel.
2003. Statistical phrase-based translation. In Hu-
man Language Technologies: The 2003 Annual
Conference of the North American Chapter of the
Association for Computational Linguistics, pages
48–54, Edmonton, May-June. Association for Com-
putational Linguistics.
Philipp Koehn. 2009. Statistical Machine Translation.
Cambridge University Press.
</reference>
<page confidence="0.983132">
126
</page>
<reference confidence="0.999856654761905">
Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013.
Document summarization via guided sentence com-
pression. In Proceedings of the 2013 Conference on
Empirical Methods in Natural Language Process-
ing, pages 490–500, Seattle, Washington, USA, Oc-
tober. Association for Computational Linguistics.
Chen Li, Yang Liu, Fei Liu, Lin Zhao, and Fuliang
Weng. 2014. Improving multi-documents summa-
rization by sentence compression based on expanded
constituent parse trees. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 691–701, Doha,
Qatar, October. Association for Computational Lin-
guistics.
Piji Li, Lidong Bing, Wai Lam, Hang Li, and Yi Liao.
2015. Reader-aware multi-document summariza-
tion via sparse coding. In IJCAI.
Hui Lin and Jeff Bilmes. 2010. Multi-document sum-
marization via budgeted maximization of submod-
ular functions. In Human Language Technologies:
The 2010 Annual Conference of the North American
Chapter of the Association for Computational Lin-
guistics, pages 912–920, Los Angeles, California,
June. Association for Computational Linguistics.
Hui Lin and Jeff Bilmes. 2011. A class of submodu-
lar functions for document summarization. In Pro-
ceedings of the 49th Annual Meeting of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, pages 510–520, Portland, Ore-
gon, USA, June. Association for Computational Lin-
guistics.
Marina Litvak, Mark Last, and Menahem Friedman.
2010. A new approach to improving multilingual
summarization using a genetic algorithm. In Pro-
ceedings of the 48th Annual Meeting of the Associa-
tion for Computational Linguistics, pages 927–936,
Uppsala, Sweden, July. Association for Computa-
tional Linguistics.
Hajime Morita, Ryohei Sasano, Hiroya Takamura, and
Manabu Okumura. 2013. Subtree extractive sum-
marization via submodular maximization. In Pro-
ceedings of the 51st Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 1: Long
Papers), pages 1023–1032, Sofia, Bulgaria, August.
Association for Computational Linguistics.
Constantin Orasan and Oana Andreea Chiorean. 2008.
Evaluation of a cross-lingual romanian-english
multi-document summariser. In LREC.
Prasad Pingali, Jagadeesh Jagarlamudi, and Vasudeva
Varma. 2007. Experiments in cross language query
focused multi-document summarization. In Work-
shop on Cross Lingual Information Access Address-
ing the Information Need of Multilingual Societies
in IJCAI2007. Citeseer.
Xiaojun Wan. 2011. Using bilingual information for
cross-language document summarization. In Pro-
ceedings of the 49th Annual Meeting of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, pages 1546–1555, Portland,
Oregon, USA, June. Association for Computational
Linguistics.
Lu Wang, Hema Raghavan, Vittorio Castelli, Radu Flo-
rian, and Claire Cardie. 2013. A sentence com-
pression based framework to query-focused multi-
document summarization. In Proceedings of the
51st Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
1384–1394, Sofia, Bulgaria, August. Association for
Computational Linguistics.
Kristian Woodsend and Mirella Lapata. 2012. Mul-
tiple aspect summarization using integer linear pro-
gramming. In Proceedings of the 2012 Joint Con-
ference on Empirical Methods in Natural Language
Processing and Computational Natural Language
Learning, pages 233–243. Association for Compu-
tational Linguistics.
Jin-ge Yao, Xiaojun Wan, and Jianguo Xiao. 2015.
Compressive document summarization via sparse
optimization. In IJCAI.
David M Zajic, Bonnie Dorr, Jimmy Lin, and Richard
Schwartz. 2006. Sentence compression as a compo-
nent of a multi-document summarization system. In
Proceedings of the 2006 Document Understanding
Workshop, New York.
</reference>
<page confidence="0.997326">
127
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.829838">
<title confidence="0.99919">Phrase-based Compressive Cross-Language Summarization</title>
<author confidence="0.979047">Jin-ge Yao Xiaojun Wan Jianguo Xiao</author>
<affiliation confidence="0.970341">Institute of Computer Science and Technology, Peking University, Beijing 100871, China</affiliation>
<address confidence="0.883731">Key Laboratory of Computational Linguistic (Peking University), MOE, China</address>
<email confidence="0.99413">wanxiaojun,</email>
<abstract confidence="0.999021117647059">The task of cross-language document summarization is to create a summary in a target language from documents in a different source language. Previous methods only involve direct extraction of automatically translated sentences from the original documents. Inspired by phrasebased machine translation, we propose a phrase-based model to simultaneously perform sentence scoring, extraction and compression. We design a greedy algorithm to approximately optimize the score function. Experimental results show that our methods outperform the state-of-theart extractive systems while maintaining similar grammatical quality.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Miguel Almeida</author>
<author>Andre Martins</author>
</authors>
<title>Fast and robust compressive summarization with dual decomposition and multi-task learning.</title>
<date>2013</date>
<booktitle>In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),</booktitle>
<pages>196--206</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Sofia, Bulgaria,</location>
<contexts>
<context position="31951" citStr="Almeida and Martins (2013)" startWordPosition="5050" endWordPosition="5053">ipeline strategy with heuristics to generate multiple candidate compressions and extract from this compressed sentences. Berg-Kirkpatrick et al. (2011) create linear models of weights learned by structural SVMs for different components and tried to jointly formulate sentence selection and syntax tree trimming in integer linear programs. Woodsend and Lapata (2012) propose quasi tree substitution grammars for multiple rewriting operations. All these methods involve integer linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarization tasks. Almeida and Martins (2013) form the compressive summarization problem in a more efficient dual decomposition framework. Models for sentence compression and extractive summarization are trained by multitask learning techniques. Wang et al. (2013) explore different types of compression on constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies</context>
</contexts>
<marker>Almeida, Martins, 2013</marker>
<rawString>Miguel Almeida and Andre Martins. 2013. Fast and robust compressive summarization with dual decomposition and multi-task learning. In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 196–206, Sofia, Bulgaria, August. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Taylor Berg-Kirkpatrick</author>
<author>Dan Gillick</author>
<author>Dan Klein</author>
</authors>
<title>Jointly learning to extract and compress.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>481--490</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Portland, Oregon, USA,</location>
<contexts>
<context position="31476" citStr="Berg-Kirkpatrick et al. (2011)" startWordPosition="4980" endWordPosition="4983">discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics to generate multiple candidate compressions and extract from this compressed sentences. Berg-Kirkpatrick et al. (2011) create linear models of weights learned by structural SVMs for different components and tried to jointly formulate sentence selection and syntax tree trimming in integer linear programs. Woodsend and Lapata (2012) propose quasi tree substitution grammars for multiple rewriting operations. All these methods involve integer linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarization tasks. Almeida and Martins (2013) form the compressive summarization problem in a more efficient dual decomposition framework. Models for sentence compression</context>
</contexts>
<marker>Berg-Kirkpatrick, Gillick, Klein, 2011</marker>
<rawString>Taylor Berg-Kirkpatrick, Dan Gillick, and Dan Klein. 2011. Jointly learning to extract and compress. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 481–490, Portland, Oregon, USA, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Lidong Bing</author>
<author>Piji Li</author>
<author>Yi Liao</author>
<author>Wai Lam</author>
<author>Weiwei Guo</author>
<author>Rebecca Passonneau</author>
</authors>
<title>Abstractive multidocument summarization via phrase selection and merging.</title>
<date>2015</date>
<booktitle>In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long Papers),</booktitle>
<pages>1587--1597</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Beijing, China,</location>
<contexts>
<context position="32830" citStr="Bing et al. (2015)" startWordPosition="5182" endWordPosition="5185"> constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies, the bestperforming systems require supervised learning for different subtasks. More recent work tries to formulate document summarization tasks as optimization problems and use their solutions to guide sentence compression(Li et al., 2015; Yao et al., 2015). Bing et al. (2015) employ integer linear programming for conducting phrase selection and merging simultaneously to form compressed sentences after phrase extraction. 6 Conclusion and Future Work In this paper we propose a phrase-based framework for the task of cross-language document summarization. The proposed scoring scheme can be naturally operated on compressive summarization. We use efficient greedy procedure to approximately optimize the scoring function. Experimental results show improvements of our compressive solution over state-of-the-art systems. Even though we do not explicitly use any syntactic inf</context>
</contexts>
<marker>Bing, Li, Liao, Lam, Guo, Passonneau, 2015</marker>
<rawString>Lidong Bing, Piji Li, Yi Liao, Wai Lam, Weiwei Guo, and Rebecca Passonneau. 2015. Abstractive multidocument summarization via phrase selection and merging. In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), pages 1587–1597, Beijing, China, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Clarke</author>
<author>Mirella Lapata</author>
</authors>
<title>Global inference for sentence compression: An integer linear programming approach.</title>
<date>2008</date>
<journal>Journal ofArtificial Intelligence Research,</journal>
<pages>31--273</pages>
<contexts>
<context position="19197" citStr="Clarke and Lapata (2008)" startWordPosition="3076" endWordPosition="3080">imilarly defined by document frequency of Chinese bigrams. The Chinese summary sentences are then directly extracted from the translated Chinese documents. This is also known as the document translation scheme. • CoRank: We reimplement the graph-based CoRank algorithm, which gives the state-ofthe-art performance on the same DUC 2001 dataset for comparison. • Baseline (ENcomp): This is a compressive baseline where the extracted English sentences in Baseline (EN) will be compressed before being translated to Chinese. The compression process follows from an integer linear program as described by Clarke and Lapata (2008). This baseline gives strong performance as we have found on English DUC 2001 dataset as well as other monolingual datasets. We experiment with two kinds of summary budgets for comparative study. The first one is limiting the summary length to be no more than five sentences. The second one is limiting the total number of Chinese characters of each produced summary to be no more than 300. They will be addressed as Sentence Budgeting and Character Budgeting in the experimental results respectively. Similar to traditional summarization tasks, we use the ROUGE metrics for automatic evaluation of a</context>
</contexts>
<marker>Clarke, Lapata, 2008</marker>
<rawString>James Clarke and Mirella Lapata. 2008. Global inference for sentence compression: An integer linear programming approach. Journal ofArtificial Intelligence Research, 31:273–381.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anirban Dasgupta</author>
<author>Ravi Kumar</author>
<author>Sujith Ravi</author>
</authors>
<title>Summarization through submodularity and dispersion.</title>
<date>2013</date>
<booktitle>In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),</booktitle>
<pages>1014--1022</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Sofia, Bulgaria,</location>
<contexts>
<context position="30845" citStr="Dasgupta et al., 2013" startWordPosition="4890" endWordPosition="4893">document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics to generate multiple candidate compressions and extract from this compressed sentences.</context>
</contexts>
<marker>Dasgupta, Kumar, Ravi, 2013</marker>
<rawString>Anirban Dasgupta, Ravi Kumar, and Sujith Ravi. 2013. Summarization through submodularity and dispersion. In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1014–1022, Sofia, Bulgaria, August. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Romaric Besanc¸on Ga¨el de Chalendar</author>
<author>Olivier Ferret</author>
<author>Gregory Grefenstette</author>
<author>Olivier Mesnard</author>
</authors>
<title>Crosslingual summarization with thematic extraction, syntactic sentence simplification, and bilingual generation.</title>
<date>2005</date>
<booktitle>In Workshop on Crossing Barriers in Text Summarization Research, 5th International Conference on Recent Advances in Natural Language Processing (RANLP2005).</booktitle>
<marker>Ga¨el de Chalendar, Ferret, Grefenstette, Mesnard, 2005</marker>
<rawString>Ga¨el de Chalendar, Romaric Besanc¸on, Olivier Ferret, Gregory Grefenstette, and Olivier Mesnard. 2005. Crosslingual summarization with thematic extraction, syntactic sentence simplification, and bilingual generation. In Workshop on Crossing Barriers in Text Summarization Research, 5th International Conference on Recent Advances in Natural Language Processing (RANLP2005).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Franz Josef Och</author>
<author>Marcu Daniel</author>
</authors>
<title>Statistical phrase-based translation. In Human Language Technologies: The</title>
<date>2003</date>
<booktitle>Annual Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>48--54</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Edmonton, May-June.</location>
<contexts>
<context position="2294" citStr="Koehn et al., 2003" startWordPosition="329" endWordPosition="332"> the target language. Wan (2011) show that such pipelining approaches are inferior to methods that utilize information from both sides. In that work, the author proposes graph-based models and achieves fair amount of improvement. However, to the best of our knowledge, no previous work of this task tries to focus on summarization beyond pure sentence extraction. On the other hand, cross-language summarization can be seen as a special kind of machine translation: translating the original documents into a brief summary in a different language. Inspired by phrase-based machine translation models (Koehn et al., 2003), we propose a phrase-based scoring scheme for cross-language summarization in this work. Since our framework is based on phrases, we are not limited to produce extractive summaries. We can use the scoring scheme to perform joint sentence selection and compression. Unlike typical sentence compression methods, our proposed algorithm does not require additional syntactic preprocessing such as part-of-speech tagging or syntactic parsing. We only utilize information from translated texts with phrase alignments. The scoring function consists of a submodular term of compressed sentences and a bounde</context>
</contexts>
<marker>Koehn, Och, Daniel, 2003</marker>
<rawString>Philipp Koehn, Franz Josef Och, and Marcu Daniel. 2003. Statistical phrase-based translation. In Human Language Technologies: The 2003 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 48–54, Edmonton, May-June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
</authors>
<title>Statistical Machine Translation.</title>
<date>2009</date>
<publisher>Cambridge University Press.</publisher>
<contexts>
<context position="4839" citStr="Koehn (2009)" startWordPosition="700" endWordPosition="701">raction and compression. 2 Background Document summarization can be treated as a special kind of translation process: translating from a bunch of related source documents to a short target summary. This analogy also holds for crosslanguage document summarization, with the only difference that the languages of source documents and the target summary are different. Our design of sentence scoring function for cross-language document summarization purpose is inspired by phrase-based machine translation models. Here we briefly describe the general idea of phrase-based translation. One may refer to Koehn (2009) for more detailed description. 2.1 Phrase-based Machine Translation Phrase-based machine translation models are currently giving state-of-the-art translations for many pairs of languages and dominating modern statistical machine translation. Classical word-based IBM models cannot capture local contextual information and local reordering very well. Phrasebased translation models operate on lexical entries with more than one word on the source language and the target language. The allowance of multiword expressions is believed to be the main reason for the improvements that phrase-based models </context>
</contexts>
<marker>Koehn, 2009</marker>
<rawString>Philipp Koehn. 2009. Statistical Machine Translation. Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chen Li</author>
<author>Fei Liu</author>
<author>Fuliang Weng</author>
<author>Yang Liu</author>
</authors>
<title>Document summarization via guided sentence compression.</title>
<date>2013</date>
<booktitle>In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>490--500</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Seattle, Washington, USA,</location>
<contexts>
<context position="32286" citStr="Li et al. (2013)" startWordPosition="5099" endWordPosition="5102">nd and Lapata (2012) propose quasi tree substitution grammars for multiple rewriting operations. All these methods involve integer linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarization tasks. Almeida and Martins (2013) form the compressive summarization problem in a more efficient dual decomposition framework. Models for sentence compression and extractive summarization are trained by multitask learning techniques. Wang et al. (2013) explore different types of compression on constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies, the bestperforming systems require supervised learning for different subtasks. More recent work tries to formulate document summarization tasks as optimization problems and use their solutions to guide sentence compression(Li et al., 2015; Yao et al., 2015). Bing et al. (2015) employ integer linear programming for conducting phrase</context>
</contexts>
<marker>Li, Liu, Weng, Liu, 2013</marker>
<rawString>Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013. Document summarization via guided sentence compression. In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 490–500, Seattle, Washington, USA, October. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chen Li</author>
<author>Yang Liu</author>
<author>Fei Liu</author>
<author>Lin Zhao</author>
<author>Fuliang Weng</author>
</authors>
<title>Improving multi-documents summarization by sentence compression based on expanded constituent parse trees.</title>
<date>2014</date>
<booktitle>In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP),</booktitle>
<pages>691--701</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Doha, Qatar,</location>
<contexts>
<context position="32412" citStr="Li et al., 2014" startWordPosition="5119" endWordPosition="5122">eger linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarization tasks. Almeida and Martins (2013) form the compressive summarization problem in a more efficient dual decomposition framework. Models for sentence compression and extractive summarization are trained by multitask learning techniques. Wang et al. (2013) explore different types of compression on constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies, the bestperforming systems require supervised learning for different subtasks. More recent work tries to formulate document summarization tasks as optimization problems and use their solutions to guide sentence compression(Li et al., 2015; Yao et al., 2015). Bing et al. (2015) employ integer linear programming for conducting phrase selection and merging simultaneously to form compressed sentences after phrase extraction. 6 Conclusion and Future Work In th</context>
</contexts>
<marker>Li, Liu, Liu, Zhao, Weng, 2014</marker>
<rawString>Chen Li, Yang Liu, Fei Liu, Lin Zhao, and Fuliang Weng. 2014. Improving multi-documents summarization by sentence compression based on expanded constituent parse trees. In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 691–701, Doha, Qatar, October. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Piji Li</author>
<author>Lidong Bing</author>
<author>Wai Lam</author>
<author>Hang Li</author>
<author>Yi Liao</author>
</authors>
<title>Reader-aware multi-document summarization via sparse coding.</title>
<date>2015</date>
<booktitle>In IJCAI.</booktitle>
<contexts>
<context position="32791" citStr="Li et al., 2015" startWordPosition="5174" endWordPosition="5177">re different types of compression on constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies, the bestperforming systems require supervised learning for different subtasks. More recent work tries to formulate document summarization tasks as optimization problems and use their solutions to guide sentence compression(Li et al., 2015; Yao et al., 2015). Bing et al. (2015) employ integer linear programming for conducting phrase selection and merging simultaneously to form compressed sentences after phrase extraction. 6 Conclusion and Future Work In this paper we propose a phrase-based framework for the task of cross-language document summarization. The proposed scoring scheme can be naturally operated on compressive summarization. We use efficient greedy procedure to approximately optimize the scoring function. Experimental results show improvements of our compressive solution over state-of-the-art systems. Even though we </context>
</contexts>
<marker>Li, Bing, Lam, Li, Liao, 2015</marker>
<rawString>Piji Li, Lidong Bing, Wai Lam, Hang Li, and Yi Liao. 2015. Reader-aware multi-document summarization via sparse coding. In IJCAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hui Lin</author>
<author>Jeff Bilmes</author>
</authors>
<title>Multi-document summarization via budgeted maximization of submodular functions.</title>
<date>2010</date>
<booktitle>In Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>912--920</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Los Angeles, California,</location>
<contexts>
<context position="11207" citStr="Lin and Bilmes, 2010" startWordPosition="1749" endWordPosition="1752"> also naturally applicable to extractive summarization. For extractive summarization, Line 5 corresponds to direct calculations of sentence scores based on our proposed phrase-based function and U will denote all full sentences from the original translated documents. The outline of this algorithm is very similar to the greedy algorithm used by Morita et al. (2013) for subtree extraction, except that in our context the increase of cost function when adding a sentence is exactly the cost of that sentence. When the distortion term is ignored (q = 0), the scoring function is clearly submodular 1 (Lin and Bilmes, 2010) in terms of the set of compressed sentences, since the score now only consists of functional gains of phrases along with bigrams of a compressed sentence. Morita et al. (2013) have proved that when r = 1, this greedy algorithm will achieve a constant approximation factor 2(1 − e−1) to the optimal solution. Note that this 1 only gives us the worst case guarantee. What we can achieve in practice is usually far better. On the other hand, setting q &lt; 0 will not affect 1A set function F : 2U --+ R defined over subsets of a universe set U is said to be submodular iff it satisfies the diminishing re</context>
<context position="30757" citStr="Lin and Bilmes, 2010" startWordPosition="4874" endWordPosition="4877">proximation is close. 5 Related Work The task focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics</context>
</contexts>
<marker>Lin, Bilmes, 2010</marker>
<rawString>Hui Lin and Jeff Bilmes. 2010. Multi-document summarization via budgeted maximization of submodular functions. In Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 912–920, Los Angeles, California, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hui Lin</author>
<author>Jeff Bilmes</author>
</authors>
<title>A class of submodular functions for document summarization.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>510--520</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Portland, Oregon, USA,</location>
<contexts>
<context position="30779" citStr="Lin and Bilmes, 2011" startWordPosition="4878" endWordPosition="4881">5 Related Work The task focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics to generate multiple </context>
</contexts>
<marker>Lin, Bilmes, 2011</marker>
<rawString>Hui Lin and Jeff Bilmes. 2011. A class of submodular functions for document summarization. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 510–520, Portland, Oregon, USA, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marina Litvak</author>
<author>Mark Last</author>
<author>Menahem Friedman</author>
</authors>
<title>A new approach to improving multilingual summarization using a genetic algorithm.</title>
<date>2010</date>
<booktitle>In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>927--936</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Uppsala, Sweden,</location>
<contexts>
<context position="30556" citStr="Litvak et al., 2010" startWordPosition="4846" endWordPosition="4849">re 2c, we depict the objective value achieved by ILP as exact solution, comparing with results from sentences which are gradually selected and compressed by our greedy algorithm. We can see that the approximation is close. 5 Related Work The task focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enu</context>
</contexts>
<marker>Litvak, Last, Friedman, 2010</marker>
<rawString>Marina Litvak, Mark Last, and Menahem Friedman. 2010. A new approach to improving multilingual summarization using a genetic algorithm. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 927–936, Uppsala, Sweden, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hajime Morita</author>
<author>Ryohei Sasano</author>
<author>Hiroya Takamura</author>
<author>Manabu Okumura</author>
</authors>
<title>Subtree extractive summarization via submodular maximization.</title>
<date>2013</date>
<booktitle>In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),</booktitle>
<pages>1023--1032</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Sofia, Bulgaria,</location>
<contexts>
<context position="10952" citStr="Morita et al. (2013)" startWordPosition="1704" endWordPosition="1707"> will follow previous work to set r = 1), and merge it to the summary set at the current iteration (denoted as Si). The target is to find the compression with maximum gain-cost ratio. This will be discussed in the next section. Note that the algorithm is also naturally applicable to extractive summarization. For extractive summarization, Line 5 corresponds to direct calculations of sentence scores based on our proposed phrase-based function and U will denote all full sentences from the original translated documents. The outline of this algorithm is very similar to the greedy algorithm used by Morita et al. (2013) for subtree extraction, except that in our context the increase of cost function when adding a sentence is exactly the cost of that sentence. When the distortion term is ignored (q = 0), the scoring function is clearly submodular 1 (Lin and Bilmes, 2010) in terms of the set of compressed sentences, since the score now only consists of functional gains of phrases along with bigrams of a compressed sentence. Morita et al. (2013) have proved that when r = 1, this greedy algorithm will achieve a constant approximation factor 2(1 − e−1) to the optimal solution. Note that this 1 only gives us the w</context>
<context position="12719" citStr="Morita et al. (2013)" startWordPosition="2028" endWordPosition="2031">d(pk) |≤ δ will be applied on distortion terms, while performing sentence compression can never increase distortion. The main conclusion is formulated as: Theorem 1. If Algorithm 1 outputs Sgreedy while the optimal solution is OPT, we have F(Sgreedy) ≥ 12(1 − e−1)F(OPT) + 12ηγ. Here γ &gt; 0 is a constant controlled by distortion difference between sentences, which is relatively small in practice compared with phrase scores. η &lt; 0 is the distortion parameter. Note that when η is set to be 0, the scoring function is submodular and then we recover the 12(1 − e−1) approximation factor as studied by Morita et al. (2013). We leave the proof of Theorem 1 to supplementary materials due to space limit. The submodularity term in the score plays an important role in the proof. 3.3 Finding the Maximum Density Compression In Algorithm 1, the most important part is the greedy selection process (Line 5). The greedy selection criteria here is to maximize the gain-cost ratio. For compressive summarization, we are trying to compress each unselected sentence s to ˜s, aiming at maximizing the gain-cost ratio, where the gain corresponds to F(Si−1 ∪ {s}) − F(Si−1) di−1g(p) + bg(s) + ηdist(s), and then add the compressed sent</context>
<context position="30801" citStr="Morita et al., 2013" startWordPosition="4882" endWordPosition="4885">k focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics to generate multiple candidate compressions</context>
</contexts>
<marker>Morita, Sasano, Takamura, Okumura, 2013</marker>
<rawString>Hajime Morita, Ryohei Sasano, Hiroya Takamura, and Manabu Okumura. 2013. Subtree extractive summarization via submodular maximization. In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1023–1032, Sofia, Bulgaria, August. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Constantin Orasan</author>
<author>Oana Andreea Chiorean</author>
</authors>
<title>Evaluation of a cross-lingual romanian-english multi-document summariser.</title>
<date>2008</date>
<booktitle>In LREC.</booktitle>
<contexts>
<context position="30534" citStr="Orasan and Chiorean, 2008" startWordPosition="4842" endWordPosition="4845">n DUC 2001 dataset. In Figure 2c, we depict the objective value achieved by ILP as exact solution, comparing with results from sentences which are gradually selected and compressed by our greedy algorithm. We can see that the approximation is close. 5 Related Work The task focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with </context>
</contexts>
<marker>Orasan, Chiorean, 2008</marker>
<rawString>Constantin Orasan and Oana Andreea Chiorean. 2008. Evaluation of a cross-lingual romanian-english multi-document summariser. In LREC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Prasad Pingali</author>
<author>Jagadeesh Jagarlamudi</author>
<author>Vasudeva Varma</author>
</authors>
<title>Experiments in cross language query focused multi-document summarization.</title>
<date>2007</date>
<booktitle>In Workshop on Cross Lingual Information Access Addressing the Information Need of Multilingual Societies in IJCAI2007. Citeseer.</booktitle>
<contexts>
<context position="30507" citStr="Pingali et al., 2007" startWordPosition="4838" endWordPosition="4841">cument cluster (D04) in DUC 2001 dataset. In Figure 2c, we depict the objective value achieved by ILP as exact solution, comparing with results from sentences which are gradually selected and compressed by our greedy algorithm. We can see that the approximation is close. 5 Related Work The task focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original</context>
</contexts>
<marker>Pingali, Jagarlamudi, Varma, 2007</marker>
<rawString>Prasad Pingali, Jagadeesh Jagarlamudi, and Vasudeva Varma. 2007. Experiments in cross language query focused multi-document summarization. In Workshop on Cross Lingual Information Access Addressing the Information Need of Multilingual Societies in IJCAI2007. Citeseer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaojun Wan</author>
</authors>
<title>Using bilingual information for cross-language document summarization.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>1546--1555</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Portland, Oregon, USA,</location>
<contexts>
<context position="1253" citStr="Wan (2011)" startWordPosition="172" endWordPosition="173"> simultaneously perform sentence scoring, extraction and compression. We design a greedy algorithm to approximately optimize the score function. Experimental results show that our methods outperform the state-of-theart extractive systems while maintaining similar grammatical quality. 1 Introduction The task of cross-language summarization is to produce a summary in a target language from documents written in a different source language. This task is particularly useful for readers to quickly get the main idea of documents written in a source language that they are not familiar with. Following Wan (2011), we focus on English-toChinese summarization in this work. The simplest and the most straightforward way to perform cross-language summarization is pipelining general summarization and machine translation. Such systems either translate all the documents before running generic summarization algorithms on the translated documents, or summarize from the original documents and then only translate the produced summary into the target language. Wan (2011) show that such pipelining approaches are inferior to methods that utilize information from both sides. In that work, the author proposes graph-ba</context>
<context position="16611" citStr="Wan (2011)" startWordPosition="2678" endWordPosition="2679">+- kept U{pnx} 17: end if 18: end while 19: return s˜ = kept, ratio = F(Si−1u{˜s})−F(Si−1) ˜s.cost 20: end function 121 the original documents. Later we will see that this compression process will not hurt grammatical fluency of translated sentences in general. In many cases it may even improve fluency by deleting redundant parentheses or removing incorrectly reordered (unimportant) phrases. 4 Experiments 4.1 Data Currently there are not so many available datasets for our particular setting of the cross-language summarization task. Hence we only evaluate our method on the same dataset used by Wan (2011). The dataset is created by manually translating the reference summaries into Chinese from the original DUC 2001 dataset in English. We will refer to this dataset as the DUC 2001 dataset in this paper. There are 30 English document sets in the DUC 2001 dataset for multi-document summarization. Each set contains several documents related to the same topic. Three generic reference English summaries are provided by NIST annotators for each document set. All these English summaries have been translated to Chinese by native Chinese annotators. All the English sentences in the original documents hav</context>
<context position="24752" citStr="Wan (2011)" startWordPosition="3934" endWordPosition="3936"> with spaces according to phrase alignment results. Phrases that have been compressed are grayed out. We also include original English sentences for reference, with deletions according to word alignments from the Chinese sentences. We can observe that our compressive system tries to compress sentences by removing relatively unimportant phrases. The effect of translation errors (e.g. the word watch in on storm watch has been incorrectly translated in the example) can also be reduced since those incorrectly translated words will be dropped for having low information gains. In some cases the gramWan (2011). We believe that this comes from different machine translation results output by Google Translate. 123 Sentence Budgeting ROUGE-1 ROUGE-2 ROUGE-W ROUGE-L ROUGE-SU4 Baseline(EN) 0.23655 0.03550 0.05324 0.12559 0.06410 Baseline(CN) 0.23454 0.03858 0.05753 0.13120 0.06962 PBES 0.25313 0.04073 0.06103 0.13583 0.06970 CoRank (reported) N/A 0.04282 0.06158 0.14521 0.07805 CoRank (reimplemented) 0.24257 0.04115 0.06076 0.13717 0.07453 Baseline(ENcomp) 0.24879 0.04441 0.05865 0.13233 0.07543 PBCS 0.26872 0.04815 0.06425 0.14607 0.08065 Character Budgeting ROUGE-1 ROUGE-2 ROUGE-W ROUGE-L ROUGE-SU4 Bas</context>
<context position="30315" citStr="Wan (2011)" startWordPosition="4811" endWordPosition="4812"> after 14 confirmed deaths in Florida and three in the Bahamas. Figure 1: Example compressive summary lp solve package 8 as the ILP solver to obtain an exact solution on the first document cluster (D04) in DUC 2001 dataset. In Figure 2c, we depict the objective value achieved by ILP as exact solution, comparing with results from sentences which are gradually selected and compressed by our greedy algorithm. We can see that the approximation is close. 5 Related Work The task focused in this paper is cross-language document summarization. Several pilot studies have investigated this task. Before Wan (2011)’s work that explicitly utilizes bilingual information in a graph-based framework, earlier methods often use information only from one language (de Chalendar et al., 2005; Pingali et al., 2007; Orasan and Chiorean, 2008; Litvak et al., 2010). This work is closely related to greedy algorithms for budgeted submodular maximization. Many studies have formalized text summarization tasks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part</context>
</contexts>
<marker>Wan, 2011</marker>
<rawString>Xiaojun Wan. 2011. Using bilingual information for cross-language document summarization. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 1546–1555, Portland, Oregon, USA, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lu Wang</author>
<author>Hema Raghavan</author>
<author>Vittorio Castelli</author>
<author>Radu Florian</author>
<author>Claire Cardie</author>
</authors>
<title>A sentence compression based framework to query-focused multidocument summarization.</title>
<date>2013</date>
<booktitle>In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers),</booktitle>
<pages>1384--1394</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Sofia, Bulgaria,</location>
<contexts>
<context position="32170" citStr="Wang et al. (2013)" startWordPosition="5082" endWordPosition="5085">mponents and tried to jointly formulate sentence selection and syntax tree trimming in integer linear programs. Woodsend and Lapata (2012) propose quasi tree substitution grammars for multiple rewriting operations. All these methods involve integer linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarization tasks. Almeida and Martins (2013) form the compressive summarization problem in a more efficient dual decomposition framework. Models for sentence compression and extractive summarization are trained by multitask learning techniques. Wang et al. (2013) explore different types of compression on constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies, the bestperforming systems require supervised learning for different subtasks. More recent work tries to formulate document summarization tasks as optimization problems and use their solutions to guide sentence compre</context>
</contexts>
<marker>Wang, Raghavan, Castelli, Florian, Cardie, 2013</marker>
<rawString>Lu Wang, Hema Raghavan, Vittorio Castelli, Radu Florian, and Claire Cardie. 2013. A sentence compression based framework to query-focused multidocument summarization. In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1384–1394, Sofia, Bulgaria, August. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristian Woodsend</author>
<author>Mirella Lapata</author>
</authors>
<title>Multiple aspect summarization using integer linear programming.</title>
<date>2012</date>
<booktitle>In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning,</booktitle>
<pages>233--243</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="31690" citStr="Woodsend and Lapata (2012)" startWordPosition="5013" endWordPosition="5017"> extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics to generate multiple candidate compressions and extract from this compressed sentences. Berg-Kirkpatrick et al. (2011) create linear models of weights learned by structural SVMs for different components and tried to jointly formulate sentence selection and syntax tree trimming in integer linear programs. Woodsend and Lapata (2012) propose quasi tree substitution grammars for multiple rewriting operations. All these methods involve integer linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarization tasks. Almeida and Martins (2013) form the compressive summarization problem in a more efficient dual decomposition framework. Models for sentence compression and extractive summarization are trained by multitask learning techniques. Wang et al. (2013) explore different types of compression on constituent parse trees for query-focused summarization. Li et al. (2013) pro</context>
</contexts>
<marker>Woodsend, Lapata, 2012</marker>
<rawString>Kristian Woodsend and Mirella Lapata. 2012. Multiple aspect summarization using integer linear programming. In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 233–243. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jin-ge Yao</author>
<author>Xiaojun Wan</author>
<author>Jianguo Xiao</author>
</authors>
<title>Compressive document summarization via sparse optimization.</title>
<date>2015</date>
<booktitle>In IJCAI.</booktitle>
<contexts>
<context position="32810" citStr="Yao et al., 2015" startWordPosition="5178" endWordPosition="5181">s of compression on constituent parse trees for query-focused summarization. Li et al. (2013) propose a guided sentence compression model with ILP-based summary sentence selection. Their following work (Li et al., 2014) incorporate various constraints on constituent parse trees to improve the linguistic quality of the compressed sentences. In these studies, the bestperforming systems require supervised learning for different subtasks. More recent work tries to formulate document summarization tasks as optimization problems and use their solutions to guide sentence compression(Li et al., 2015; Yao et al., 2015). Bing et al. (2015) employ integer linear programming for conducting phrase selection and merging simultaneously to form compressed sentences after phrase extraction. 6 Conclusion and Future Work In this paper we propose a phrase-based framework for the task of cross-language document summarization. The proposed scoring scheme can be naturally operated on compressive summarization. We use efficient greedy procedure to approximately optimize the scoring function. Experimental results show improvements of our compressive solution over state-of-the-art systems. Even though we do not explicitly u</context>
</contexts>
<marker>Yao, Wan, Xiao, 2015</marker>
<rawString>Jin-ge Yao, Xiaojun Wan, and Jianguo Xiao. 2015. Compressive document summarization via sparse optimization. In IJCAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David M Zajic</author>
<author>Bonnie Dorr</author>
<author>Jimmy Lin</author>
<author>Richard Schwartz</author>
</authors>
<title>Sentence compression as a component of a multi-document summarization system.</title>
<date>2006</date>
<booktitle>In Proceedings of the</booktitle>
<location>New York.</location>
<contexts>
<context position="31315" citStr="Zajic et al. (2006)" startWordPosition="4958" endWordPosition="4961">sks as submodular maximization problems (Lin and Bilmes, 2010; Lin and Bilmes, 2011; Morita et al., 2013). A more recent work (Dasgupta et al., 2013) discussed the problem of maximizing a function with a submodular part and a nonsubmodular dispersion term, which may appear to be closer to our scoring functions. In recent years, some research has made progress beyond extractive summarization, espethe original maximization problem with pruned brute-force enumeration and therefore exactly optimal but too costly. 8http://lpsolve.sourceforge.net/ cially in the context of compressive summarization. Zajic et al. (2006) tries a pipeline strategy with heuristics to generate multiple candidate compressions and extract from this compressed sentences. Berg-Kirkpatrick et al. (2011) create linear models of weights learned by structural SVMs for different components and tried to jointly formulate sentence selection and syntax tree trimming in integer linear programs. Woodsend and Lapata (2012) propose quasi tree substitution grammars for multiple rewriting operations. All these methods involve integer linear programming solvers to generate compressed summaries, which is time-consuming for multidocument summarizati</context>
</contexts>
<marker>Zajic, Dorr, Lin, Schwartz, 2006</marker>
<rawString>David M Zajic, Bonnie Dorr, Jimmy Lin, and Richard Schwartz. 2006. Sentence compression as a component of a multi-document summarization system. In Proceedings of the 2006 Document Understanding Workshop, New York.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>