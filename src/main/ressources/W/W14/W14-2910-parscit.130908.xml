<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001503">
<title confidence="0.987868">
Evaluation for Partial Event Coreference
</title>
<author confidence="0.990925">
Jun Araki Eduard Hovy Teruko Mitamura
</author>
<affiliation confidence="0.897624">
Language Technologies Institute
Carnegie Mellon University
Pittsburgh, PA 15213, USA
</affiliation>
<email confidence="0.99621">
junaraki@cs.cmu.edu, hovy@cmu.edu, teruko@cs.cmu.edu
</email>
<sectionHeader confidence="0.997388" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999353066666667">
This paper proposes an evaluation scheme
to measure the performance of a system
that detects hierarchical event structure for
event coreference resolution. We show
that each system output is represented as
a forest of unordered trees, and introduce
the notion of conceptual event hierarchy to
simplify the evaluation process. We enu-
merate the desiderata for a similarity met-
ric to measure the system performance.
We examine three metrics along with the
desiderata, and show that metrics extended
from MUC and BLANC are more ade-
quate than a metric based on Simple Tree
Matching.
</bodyText>
<sectionHeader confidence="0.999514" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998822">
Event coreference resolution is the task to de-
termine whether two event mentions refer to the
same event. This task is important since resolved
event coreference is useful in various tasks such as
topic detection and tracking, information extrac-
tion, question answering, textual entailment, and
contradiction detection.
A key challenge for event coreference resolu-
tion is that one can define several relations be-
tween two events, where some of them exhibit
subtle deviation from perfect event identity. For
clarification, we refer to perfect event identity
as full (event) coreference in this paper. To ad-
dress the subtlety in event identity, Hovy et al.
(2013) focused on two types of partial event iden-
tity: subevent and membership. Subevent relations
form a stereotypical sequence of events, or a script
(Schank and Abelson, 1977; Chambers and Juraf-
sky, 2008). Membership relations represent in-
stances of an event collection. We refer to both
as partial (event) coreference in this paper. Fig-
ure 1 shows some examples of the subevent and
membership relations in the illustrative text be-
low, taken from the Intelligence Community do-
main of violent events. Unlike full coreference,
partial coreference is a directed relation, and forms
hierarchical event structure, as shown in Figure 1.
Detecting partial coreference itself is an important
task because the resulting event structures are ben-
eficial to text comprehension. In addition, such
structures are also useful as background knowl-
edge information to resolve event coreference.
A car bomb that police said was set by Shining Path
guerrillas ripped off(E4) the front of a Lima police
station before dawn Thursday, wounding(E5) 25 peo-
ple. The attack(E6) marked the return to the spotlight
of the feared Maoist group, recently overshadowed by
a smaller rival band of rebels. The pre-dawn bomb-
ing(E7) destroyed(E8) part of the police station and
a municipal office in Lima’s industrial suburb of Ate-
Vitarte, wounding(E9) 8 police officers, one seriously,
Interior Minister Cesar Saucedo told reporters. The
bomb collapsed(E11) the roof of a neighboring hospi-
tal, injuring(E12) 15, and blew out(E13) windows and
doors in a public market, wounding(E14) two guards.
</bodyText>
<figureCaption confidence="0.916261">
Figure 1: Examples of subevent and member-
</figureCaption>
<bodyText confidence="0.921058714285714">
ship relations. Solid and dashed arrows represent
subevent and membership relations respectively,
with the direction from a parent to its subevent
or member. For example, we say that E4 is a
subevent of E6. Solid lines without any arrow
heads represent full coreference.
In this paper, we address the problem of evalu-
</bodyText>
<page confidence="0.990976">
68
</page>
<note confidence="0.849711">
Proceedings of the 2nd Workshop on EVENTS: Definition, Detection, Coreference, and Representation, pages 68–76,
Baltimore, Maryland, USA, June 22-27, 2014. c�2014 Association for Computational Linguistics
</note>
<bodyText confidence="0.99967252173913">
ating the performance of a system that detects par-
tial coreference in the context of event coreference
resolution. This problem is important because, as
with other tasks, a good evaluation method for par-
tial coreference will facilitate future research on
the task in a consistent and comparable manner.
When one introduces a certain evaluation metric
to such a new complex task as partial event coref-
erence, it is often unclear what metric is suitable
to what evaluation scheme for the task under what
assumptions. It is also obscure how effectively and
readily existing algorithms or tools, if any, can be
used in a practical setting of the evaluation. In or-
der to resolve these sub-problems for partial coref-
erence evaluation, we need to formulate an evalu-
ation scheme that defines assumptions to be made
regarding the evaluation, specifies some desider-
ata that an ideal metric should satisfy for the task,
and examines how adequately particular metrics
can satisfy them. For this purpose, we specifi-
cally investigate three existing algorithms MUC,
BLANC, and Simple Tree Matching (STM).
The contributions of this work are as follows:
</bodyText>
<listItem confidence="0.99700625">
• We introduce a conceptual tree hierarchy that
simplifies the evaluation process for partial
event coreference.
• We present a way to extend MUC, BLANC,
and STM for the case of unordered trees.
Those metrics are generic and flexible
enough to be used in evaluations involving
data structures based on unordered trees.
• Our experimental results indicate that the ex-
tended MUC and BLANC are better than
Simple Tree Matching for evaluating partial
coreference.
</listItem>
<sectionHeader confidence="0.999648" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999910862745098">
Recent studies on both entity and event coref-
erence resolution use several metrics to evaluate
system performance (Bejan and Harabagiu, 2010;
Lee et al., 2012; Durrett et al., 2013; Lassalle and
Denis, 2013) since there is no agreement on a sin-
gle metric. Currently, five metrics are widely used:
MUC (Vilain et al., 1995), B-CUBED (Bagga and
Baldwin, 1998), two CEAF metrics CEAF-03 and
CEAF-04 (Luo, 2005), and BLANC (Recasens
and Hovy, 2011). We can divide these metrics
into two groups: cluster-based metrics, e.g., B-
CUBED and CEAF, and link-based metrics, e.g.,
MUC and BLANC. The former group is not ap-
plicable to evaluate partial coreference because it
is unclear how to define a cluster. The latter is
not readily applicable to the evaluation because it
is unclear how to penalize incorrect directions of
links. We discuss these aspects in Section 4.1 and
Section 4.2.
Tree Edit Distance (TED) is one of the tradi-
tional algorithms for measuring tree similarity. It
has a long history of theoretical studies (Tai, 1979;
Zhang and Shasha, 1989; Klein, 1998; Bille, 2005;
Demaine et al., 2009; Pawlik and Augsten, 2011).
It is also widely studied in many applications, in-
cluding Natural Language Processing (NLP) tasks
(Mehdad, 2009; Wang and Manning, 2010; Heil-
man and Smith, 2010; Yao et al., 2013). However,
TED has a disadvantage: we need to predefine ap-
propriate costs for basic tree-edit operations. In
addition, an implementation of TED for unordered
trees is fairly complex.
Another tree similarity metric is Simple Tree
Matching (STM) (Yang, 1991). STM measures
the similarity of two trees by counting the max-
imum match with dynamic programming. Al-
though this algorithm was also originally devel-
oped for ordered trees, the underlying idea of the
algorithm is simple, making it relatively easy to
extend the algorithm for unordered trees.
Tree kernels have been also widely studied and
applied to NLP tasks, more specifically, to cap-
ture the similarity between parse trees (Collins and
Duffy, 2001; Moschitti et al., 2008) or between
dependency trees (Croce et al., 2011; Srivastava
et al., 2013). This method is based on a super-
vised learning model with training data; hence we
need a number of pairs of trees and associated nu-
meric similarity values between these trees as in-
put. Thus, it is not appropriate for an evaluation
setting.
</bodyText>
<sectionHeader confidence="0.977067" genericHeader="method">
3 Evaluation Scheme
</sectionHeader>
<bodyText confidence="0.999654111111111">
When one formulates an evaluation scheme for a
new task, it is important to define assumptions for
the evaluation and desiderata that an ideal metric
should satisfy. In this section, we first describe as-
sumptions for partial coreference evaluation, and
introduce the notion of conceptual event hierarchy
to address the challenge posed by one of the as-
sumptions. We then enumerate the desiderata for
a metric.
</bodyText>
<page confidence="0.998456">
69
</page>
<subsectionHeader confidence="0.999605">
3.1 Assumptions on Partial Coreference
</subsectionHeader>
<bodyText confidence="0.999940797297297">
We make the following three assumptions to eval-
uate partial coreference.
Twinless mentions: Twinless mentions (Stoyanov
et al., 2009) are the mentions that exist in the gold
standard but do not in a system response, or vice
versa. In reality, twinless mentions often happen
since an end-to-end system might produce them in
the process of detecting mentions. The assump-
tion regarding twinless mentions has been inves-
tigated in research on entity coreference resolu-
tion. Cluster-based metrics such as B-CUBED and
CEAF assume that a system is given true men-
tions without any twinless mentions in the gold
standard, and then resolves full coreference on
them. Researchers have made different assump-
tions about this issue. Early work such as (Ji et
al., 2005) and (Bengtson and Roth, 2008) simply
ignored such mentions. Rahman and Ng (2009)
removed twinless mentions that are singletons in a
system response. Cai and Strube (2010) proposed
two variants of B-CUBED and CEAF that can deal
with twinless mentions in order to make the evalu-
ation of end-to-end coreference resolution system
consistent.
In evaluation of partial coreference where twin-
less mentions can also exist, we believe that the
value of making evaluation consistent and compa-
rable is the most important, and hypothesize that
it is possible to effectively create a metric to mea-
sure the performance of partial coreference while
dealing with twinless mentions. A potential prob-
lem of making a single metric handle twinless
mentions is that the metric would not be informa-
tive enough to show whether a system is good at
identifying coreference links but poor at identify-
ing mentions, or vice versa (Recasens and Hovy,
2011). However, our intuition is that the prob-
lem is avoidable by showing the performance of
mention identification with metrics such as pre-
cision, recall, and the F-measure simultaneously
with the performance of link identification. In this
work, therefore, we assume that a metric for par-
tial coreference should be able to handle twinless
mentions.
Intransitivity: As described earlier, partial coref-
erence is a directed relation. We assume that par-
tial coreference is not transitive. To illustrate the
intransitivity, let ez -&apos;-q+ ej denote a subevent rela-
tion that ej is a subevent of ez. In Figure 1, we
have E7 *�&apos;9 E8 and E8 *�&apos;9 E9. In this case,
E9 is not a subevent of E7 due to the intransi-
tivity of subevent relations. One could argue that
the event ‘wounding(E9)’ is one of stereotypical
events triggered by the event ‘bombing(E7)’, and
thus E7 *�&apos;9 E9. However, if we allow transitiv-
ity of partial coreference, then we have to measure
all implicit partial coreference links (e.g., the one
between E7 and E9) from hierarchical event struc-
tures. Consequently, this evaluation policy could
result in an unfair scoring scheme biased toward
large event hierarchy.
Link propagation: We assume that partial coref-
erence links can be propagated due to a combi-
nation of full coreference links with them. To il-
lustrate the phenomenon, let ez &lt;---&gt; ej denote full
coreference between ez and ej. In Figure 1, we
have E6 &lt;---&gt; E7 and E7 &apos;9 &apos; E8. In this case, E8
is also a subevent of E6, i.e., E6 *�&apos;9 E8. The
rationale behind this assumption is that if a sys-
tem identifies E6 *1 E8 instead of E7 *�&apos;9 E8,
then there is no reason to argue that the identified
subevent relation is incorrect given that E6 &lt;---&gt; E7
and E7 *� &apos;9E8. The discussion here also applies
to membership relations.
</bodyText>
<subsectionHeader confidence="0.998737">
3.2 Conceptual Event Hierarchy
</subsectionHeader>
<bodyText confidence="0.99996084">
The assumption of link propagation poses a chal-
lenge in measuring the performance of partial
coreference. We illustrate the challenge with the
example in the discussion on link propagation
above. We focus only on subevent relations to de-
scribe our idea, but one can apply the same dis-
cussion to membership relations. Suppose that a
system detects a subevent link E7 *�&apos;9 E8, but not
E6 *� &apos;9E8. Then, is it reasonable to give the
system a double reward for two links E7 *�&apos;9 E8
and E6 *� &apos;9E8 due to link propagation, or should
one require a system to perform such link propa-
gation and detect E7 *�&apos;9 E8 as well for the system
to achieve the double reward? In the evaluation
scheme based on event trees whose nodes repre-
sent event mentions, we need to predefine how to
deal with link propagation of full and partial coref-
erence in evaluation. In particular, we must pay at-
tention to the potential risk of overcounting partial
corefrence links due to link propagation.
To address the complexity of link propagation,
we introduce a conceptual event tree where each
node represents a conceptual event rather than an
event mention. Figure 2 shows an example of
a conceptual subevent tree constructed from full
</bodyText>
<page confidence="0.987972">
70
</page>
<bodyText confidence="0.9983532">
coreference and subevent relations in Figure 1.
Using set notation, each node of the tree represents
an abstract event. For instance, node {E6, E7}
represents an “attacking” event which both event
mentions E6 and E7 refer to.
</bodyText>
<figureCaption confidence="0.999996333333333">
Figure 2: A conceptual subevent tree constructed
from the full coreference and subevent relations in
Figure 1.
</figureCaption>
<bodyText confidence="0.99986796875">
The notion of a conceptual event tree obviates
the need to cope with link propagation, thereby
simplifying the evaluation for partial coreference.
Given a conceptual event tree, an evaluation met-
ric is basically just required to measure how many
links in the tree a system successfully detects.
When comparing two conceptual event trees, a
link in a tree is identical to one in the other tree
if there is at least one event mention shared in par-
ent nodes of those links and at least one shared
in child nodes of those links. For example, sup-
pose that system A identifies E6 →−s E8, system
B E7 →− sE8, system C both, and all the systems
identify E6 ⇔ E7 in Figure 1. In this case, they
gain the same score since the subevent links that
they identify correspond to one correct subevent
link {E6, E7} →−s {E8} in Figure 2. It is pos-
sible to construct the conceptual event hierarchy
for membership relations in the same way as de-
scribed above. This means that the conceptual
event hierarchy allows us to show the performance
of a system on each type of partial coreference
separately, which leads to more informative evalu-
ation output.
One additional note is that the conceptual event
tree representing partial coreference is an un-
ordered tree, as illustrated in Figure 2. Although
we could represent a subevent tree with an or-
dered tree because of the stereotypical sequence of
subevents given by definition, partial coreference
is in general represented with a forest of unordered
trees1.
</bodyText>
<footnote confidence="0.968826">
1For example, it is impossible to intuitively define a se-
</footnote>
<subsectionHeader confidence="0.90671">
3.3 Desiderata for Metrics
</subsectionHeader>
<bodyText confidence="0.9996459">
In general, a system output of partial event coref-
erence in a document is represented not by a sin-
gle tree but by a forest, i.e., a set of disjoint trees
whose nodes are event mentions that appear in the
document. Let T be a tree, and let F be a forest
F = {TZ}. Let sim(Fg, Fr) E [0, 1] denote a sim-
ilarity score between the gold standard forest Fg
and a system response forest Fr. We define the
following properties that an ideal evaluation met-
ric for partial event coreference should satisfy.
</bodyText>
<listItem confidence="0.989432333333333">
P1. Identity: sim(F1, F1) = 1.
P2. Symmetricity: sim(F1, F2) = sim(F2, F1).
P3. Zero: sim(F1, F2) = 0 if F1 and F2 are to-
tally different forests.
P4. Monotonicity: The metric score should in-
crease from 0 to 1 monotonically as two to-
tally different forests approach the identical
one.
P5. Linearity: The metric score should increase
linearly as each single individual correct
piece of information is added to a system re-
sponse.
</listItem>
<bodyText confidence="0.980603777777778">
The first three properties are relatively intuitive.
P4 is important because otherwise a higher score
by the metric does not necessarily mean higher
quality of partial event coreference output. In P5, a
correct piece of information is the addition of one
correct link or the deletion of one incorrect link.
This property is useful for tracking performance
progress over a certain period of time. If the met-
ric score increases nonlinearly, then it is difficult to
compare performance progress such as a 0.1 gain
last year and a 0.1 gain this year, for example.
In addition, one can think of another property
with respect to structural consistency. The moti-
vation for the property is that one might want to
give more reward to partial coreference links that
form hierarchical structures, since they implicitly
form sibling relations among child nodes. For in-
stance, suppose that system A detects two links
{E6, E7} →−s {E8} and {E6, E7} →−s {E11}, and
system B two links {E8} →−s {E9} and {E11} →−s
{E12} in Figure 2. We can think that system A
performs better since the system successfully de-
tects an implicit subevent sibling relation between
{E8} and {E11} as well. Due to space limita-
tions, however, we do not explore the property in
this work, and leave it for future work.
quence of child nodes in a membership event tree in Figure 1.
</bodyText>
<page confidence="0.997709">
71
</page>
<sectionHeader confidence="0.999003" genericHeader="method">
4 Evaluation Metrics
</sectionHeader>
<bodyText confidence="0.999687">
In this section, we examine three evaluation met-
rics based on MUC, BLANC, and STM respec-
tively under the evaluation scheme described in
Section 3.
</bodyText>
<subsectionHeader confidence="0.985166">
4.1 B-CUBED and CEAF
</subsectionHeader>
<bodyText confidence="0.9835623125">
B-CUBED regards a coreference chain as a set of
mentions, and examines the presence and absence
of mentions in a system response that are relative
to each of their corresponding mentions in the gold
standard (Bagga and Baldwin, 1998). Let us call
such set a mention cluster. A problem in applying
B-CUBED to partial coreference is that it is diffi-
cult to properly form a mention cluster for partial
coreference. In Figure 2, for example, we could
form a gold standard cluster containing all nodes
in the tree. We could then form a system response
cluster, given a certain system output. The prob-
lem is that B-CUBED’s way of counting mentions
overlapped in those clusters cannot capture parent-
child relations between the mentions in a cluster.
It is also difficult to extend the counting algorithm
to incorporate such relations in an intuitive man-
ner. Therefore, we observe that B-CUBED is not
appropriate for evaluating partial coreference.
We see the basically same reason for the inade-
quacy of CEAF. It also regards a coreference chain
as a set of mentions, and measures how many men-
tions two clusters share using two similarity met-
rics 03(R, S) = |R n S |and 04(R, S) = 2|R∩S|
|R|+|S|,
given two clusters R and S. One can extend CEAF
for partial coreference by selecting the most ap-
propriate tree similarity algorithm for 0 that works
well with the algorithm to compute maximum bi-
partite matching in CEAF. However, that is an-
other line of work, and due to space limitations
we leave it for future work.
</bodyText>
<subsectionHeader confidence="0.995589">
4.2 Extension to MUC and BLANC
</subsectionHeader>
<bodyText confidence="0.999965527777778">
MUC relies on the minimum number of links
needed when mapping a system response to the
gold standard (Vilain et al., 1995). Given a set of
key entities K and a set of response entities R, pre-
cision of MUC is defined as the number of com-
mon links between entities in K and R divided by
the number of links in R, whereas recall of MUC
is defined as the number of common links between
entities in K and R divided by the number of links
in K. After finding a set of mention clusters by re-
solving full coreference, we can compute the num-
ber of correct links by counting all links spanning
in those mention clusters that matched the gold
standard. It is possible to apply the idea of MUC
to the case of partial coreference simply by chang-
ing the definition of a correct link. In the partial
coreference case, we define a correct link as a link
matched with the gold standard including its di-
rection. Let MUCp denote such extension to MUC
for partial coreference.
Similarly, it is also possible to define an ex-
tension to BLANC. Let BLANCp denote the ex-
tension. BLANC computes precision, recall,
and F1 scores for both coreference and non-
coreference links, and average them for the final
score (Recasens and Hovy, 2011). As with MUCp,
BLANCp defines a correct link as a link matched
with the gold standard including its direction. An-
other difference between BLANC and BLANCp is
the total number of mention pairs, denoted as L. In
the original BLANC, L = N(N − 1)/2 where N
is the total number of mentions in a document. We
use Lp = N(N − 1) instead for BLANCp since
we consider two directed links in partial corefer-
ence with respect to each undirected link in full
coreference.
</bodyText>
<subsectionHeader confidence="0.996786">
4.3 Extension to Simple Tree Matching
</subsectionHeader>
<bodyText confidence="0.99998175">
The underlying idea of STM is that if two trees
have more node-matching, then they are more sim-
ilar. The original STM uses a dynamic program-
ming approach to perform recursive node-level
matching in a top-down fashion. In the case of
partial coreference, we cannot readily use the ap-
proach because partial coreference is represented
with unordered trees, and thus time complexity of
node-matching is the exponential order with re-
spect to the number of child nodes. However, par-
tial event coreference is normally given in a small
hierarchy with three levels or less. Taking ad-
vantage of this fact and assuming that each event
mention is uniquely identified in a tree, we ex-
tend STM for the case of unordered trees by using
greedy search. Algorithm 1 shows an extension to
the STM algorithm for unordered trees.
We can also naturally extend STM to take
forests as input. Figure 3 shows how one can con-
vert a forest into a single tree whose subtrees are
the trees in the forest by introducing an additional
dummy root node on top of those tree. The result-
ing tree is also an unordered tree, and thus we can
apply Algorithm 1 to that tree to measure the sim-
</bodyText>
<page confidence="0.990776">
72
</page>
<figure confidence="0.6908744">
Algorithm 1 Extended simple tree matching for
unordered trees.
Input: two unordered trees A and B
Output: score
1: procedure SimpleTreeMatching(A, B)
</figure>
<listItem confidence="0.8284142">
2: if the roots of A and B have different elements then
3: return 0
4: else
5: s := 1 &gt; The initial score for the root match.
6: m := the number of first-level sub-trees of A
7: n := the number of first-level sub-trees of B
8: for i = 1 → m do
9: for j = 1 → n do
10: if Ai and Bj have the same element then
11: s = s + SimpleTreeMatching(Ai, Bj)
</listItem>
<figureCaption confidence="0.9288775">
Figure 3: Conversion from a forest to a single tree
with an additional dummy root.
</figureCaption>
<bodyText confidence="0.999728666666667">
ilarity of two forests comprising unordered trees.
Let STMp denote the extended STM. Finally, we
normalize STMp. Let NSTMp be a normalized
version of STMp as follows: N5TMp(F1, F2) =
5TMp(F1,F2)/max(|F1|,|F2|) where |F |de-
notes the number of nodes in F.
</bodyText>
<subsectionHeader confidence="0.999579">
4.4 Flexibility of Metrics
</subsectionHeader>
<bodyText confidence="0.999973738095238">
Making assumptions on evaluation for a particular
task and defining desiderata for a metric determine
what evaluation scheme we are going to formulate.
However, this kind of effort tends to make result-
ing evaluation metrics too restrictive to be reusable
in other tasks. Such metrics might be adequate
for that task, but we also value the flexibility of
a metric that can be directly used or be easily ex-
tended to other tasks. To investigate the flexibil-
ity of MUCp, BLANCp and STMp, we will exam-
ine these metrics without making the assumptions
of twinless mentions and intransitivity of partial
coreference against each metric. We consider that
the assumption of link propagation is more funda-
mental and regard it as a basic premise, and thus
we will continue to make that assumption.
MUC was originally designed to deal with re-
sponse links spanning mentions that even key links
do not reach. Thus, it is able to handle twinless
mentions. If we do not assume intransitivity of
partial coreference, we do not see any difficulty in
changing the definition of correct links in MUCp
and making it capture transitive relations. There-
fore, MUCp does not require both assumptions of
twinless mentions and intransitivity.
In contrast, BLANC was originally designed to
handle true mentions in the gold standard. Since
BLANCp does not make any modifications on this
aspect, it cannot deal with twinless mentions ei-
ther. As for intransitivity, it is possible to easily
change the definition of correct and incorrect links
in BLANCp to detect transitive relations. Thus,
BLANCp does not require intransitivity but does
require the assumption of no twinless mentions.
Since STMp simply matches elements in nodes
as shown in Algorithm 1, it does not require the as-
sumption of twinless mentions. With respect to in-
transitivity, we can extend STMp by adding extra
edges from a parent to grandchild nodes or others
and applying Algorithm 1 to the modified trees.
Hence, it does not require the assumption of in-
transitivity.
</bodyText>
<sectionHeader confidence="0.998981" genericHeader="method">
5 Experiments
</sectionHeader>
<bodyText confidence="0.999721222222222">
To empirically examine the three metrics de-
scribed in Section 4.2 and Section 4.3, we con-
ducted an experiment using the artificial data
shown in Table 1. Since BLANCp cannot han-
dle twinless mentions, we removed twinless men-
tions. We first created the gold standard shown in
the first row of the table. It contains fifty events,
twenty one singleton events, and seven event trees
with three levels or less. We believe this distri-
bution of partial coreference is representative of
that of real data. We then created several system
responses that are ordered toward two extremes.
One extreme is all singletons in which they do not
have correct links. The other is a single big tree
that merges all event trees including singletons in
the gold standard.
Figure 4 shows how the three metrics behave
in two cases: (a) we increase the number of cor-
rect links from all singletons to the perfect output
(equal to the gold standard), and (b) we increase
the incorrect links from the perfect output to a sin-
gle tree merging all trees in the gold standard. In
the former case, we started with System 3 in Ta-
ble 1. Next we added one correct link 28 →−s 29
shown in System 2. This way, we added cor-
rect links up to the perfect output one by one in
a bottom-up fashion. In the latter case, we started
</bodyText>
<page confidence="0.973322">
73
</page>
<equation confidence="0.959211">
Response Output
(1(2(6))(3(7))(4)(5)) (8(9(11)(12))(10)) (13(14)(15)(16)(17)(18)) (19(20(21))(22)) (23(24)(25))
Gold standard (26(27)) (28(29)) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45) (46)
(47) (48) (49) (50)
(1(4)(5)(2(6))(3(7))) (8(9(11)(12))(10)) (13(18)(14)(15)(16)(17)) (19(22)(20(21))) (23(24)(25))
System 1 (26(27)) (28(29)) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45) (46)
(47) (48) (49(50))
(1) (2) (3) (4) (5) (6) (7) (8) (9) (10) (11) (12) (13) (14) (15) (16) (17) (18) (19) (20) (21) (22) (23) (24)
System 2 (25) (26) (27) (28(29)) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45)
(46) (47) (48) (49) (50)
(1) (2) (3) (4) (5) (6) (7) (8) (9) (10) (11) (12) (13) (14) (15) (16) (17) (18) (19) (20) (21) (22) (23) (24)
System 3 (25) (26) (27) (28) (29) (30) (31) (32) (33) (34) (35) (36) (37) (38) (39) (40) (41) (42) (43) (44) (45)
(46) (47) (48) (49) (50)
</equation>
<tableCaption confidence="0.882894">
Table 1: Examples of a system response against a gold standard partial coreference. Each event tree is
</tableCaption>
<bodyText confidence="0.9750610625">
shown in the bold font and in the Newick standard format with parentheses.
with the perfect output, and then added one incor-
rect link 49 →−s 50 shown in System 1. In a manner
similar to case (a), we added incorrect links up to
the merged tree one by one in a bottom-up fashion.
The results indicate that MUCp and BLANCp
meet the desiderata defined in Section 3.3 more
adequately than NSTMp. The curve of MUCp and
BLANCp in Figure 4 are close to the linearity,
which is practically useful as a metric. In contrast,
NSTMp fails to meet P4 and P5 in case (a), and
fails to meet P5 in case (b). This is because STM
first checks whether root nodes of two trees have
the same element, and if the root nodes have dif-
ferent elements, STM stops searching the rest of
nodes in the trees.
</bodyText>
<sectionHeader confidence="0.998414" genericHeader="method">
6 Discussion
</sectionHeader>
<bodyText confidence="0.999904647058824">
In Section 4.4, we observed that MUCp and STMp
are more flexible than BLANCp because they can
measure the performance coreference in the case
of twinless mentions as well. The experimental re-
sults in Section 5 show that MUCp and BLANCp
more adequate in terms of the five properties de-
fined in Section 3.3. Putting these together, MUCp
seems the best metric for partial event coreference.
However, MUC has two disadvantages that (1) it
prefers systems that have more mentions per en-
tity (event), and (2) it ignores recall for singletons
(Pradhan et al., 2011). MUCp also has these disad-
vantages. Thus, BLANCp might be the best choice
for partial coreference if we could assume that a
system is given true mentions in the gold standard.
Although STMp fails to satisfy P4 and P5, it
has potential power to capture structural proper-
</bodyText>
<figure confidence="0.984234375">
0 20 40 60 80 100
Ratio of correct links [%]
(a) The number of correct links increases from singletons to
the perfect output (the gold standard) one by one.
0 20 40 60 80 100
Ratio of incorrect links [%]
(b) The number of incorrect links increases from the perfect
output to a single tree merging all trees one by one.
</figure>
<figureCaption confidence="0.997331">
Figure 4: Score comparison among MUCp,
BLANCp, and NSTMp.
</figureCaption>
<figure confidence="0.99783085">
Score
100
40
80
60
20
0
MUCp
BLANCp
NSTMp
Score
100
40
80
60
20
0
MUCp
BLANCp
NSTMp
</figure>
<page confidence="0.993896">
74
</page>
<bodyText confidence="0.999449">
ties of partial coreference described in Section 3.3.
This is because STM’s recursive fashion of node-
counting can be easily extend to counting the num-
ber of correct sibling relations.
</bodyText>
<sectionHeader confidence="0.998439" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.9999516">
We proposed an evaluation scheme for partial
event coreference with conceptual event hierar-
chy constructed from mention-based event trees.
We discussed possible assumptions that one can
make, and examined extensions to three existing
metrics. Our experimental results indicate that the
extensions to MUC and BLANC are more ade-
quate than the extension to STM. To our knowl-
edge, this is the first work to argue an evaluation
scheme for partial event coreference. Neverthe-
less, we believe that our scheme is generic and
flexible enough to be applicable to other directed
relations of events (e.g., causality and entailment)
or other related tasks to compare hierarchical data
based on unordered trees (e.g., ontology compari-
son). One future work is to improve the metrics
by incorporating structural consistency of event
trees as an additional property and implementing
the metrics from the perspective of broad contexts
beyond local evaluation by link-based counting.
</bodyText>
<sectionHeader confidence="0.998665" genericHeader="acknowledgments">
8 Acknowledgements
</sectionHeader>
<bodyText confidence="0.99989175">
This research was supported in part by DARPA
grant FA8750-12-2-0342 funded under the DEFT
program. Any opinions, findings, and conclusion
or recommendations expressed in this material are
those of the authors and do not necessarily reflect
the view of the DARPA or the US government. We
would like to thank anonymous reviewers for their
helpful comments.
</bodyText>
<sectionHeader confidence="0.99885" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999288890625">
Amit Bagga and Breck Baldwin. 1998. Algorithms
for Scoring Coreference Chains. In Proceedings of
LREC 1998 Workshop on Linguistics Coreference,
pages 563–566.
Cosmin Bejan and Sanda Harabagiu. 2010. Unsuper-
vised Event Coreference Resolution with Rich Lin-
guistic Features. In Proceedings ofACL 2010, pages
1412–1422.
Eric Bengtson and Dan Roth. 2008. Understanding
the Value of Features for Coreference Resolution. In
Proceedings of EMNLP 2008, pages 294–303.
Philip Bille. 2005. A Survey on Tree Edit Distance and
Related Problems. Theoretical Computer Science,
337(1-3):217–239.
Jie Cai and Michael Strube. 2010. Evaluation Metrics
For End-to-End Coreference Resolution Systems. In
Proceedings of SIGDIAL 2010, pages 28–36.
Nathanael Chambers and Dan Jurafsky. 2008. Un-
supervised Learning of Narrative Event Chains. In
Proceedings ofACL-HLT 2008, pages 789–797.
Michael Collins and Nigel Duffy. 2001. Convolution
Kernels for Natural Language. In Proceedings of
NIPS 2001, pages 625–632.
Danilo Croce, Alessandro Moschitti, and Roberto
Basili. 2011. Structured Lexical Similarity via Con-
volution Kernels on Dependency Trees. In Proceed-
ings of EMNLP 2011, pages 1034–1046.
Erik D. Demaine, Shay Mozes, Benjamin Rossman,
and Oren Weimann. 2009. An Optimal Decomposi-
tion Algorithm for Tree Edit Distance. ACM Trans-
actions on Algorithms (TALG), 6(1):2:1–2:19.
Greg Durrett, David Hall, and Dan Klein. 2013. De-
centralized Entity-Level Modeling for Coreference
Resolution. In Proceedings of ACL 2013, pages
114–124.
Michael Heilman and Noah A. Smith. 2010. Tree Edit
Models for Recognizing Textual Entailments, Para-
phrases, and Answers to Questions. In Proceedings
of NAACL-HLT 2013, pages 1011–1019.
Eduard Hovy, Teruko Mitamura, Felisa Verdejo, Jun
Araki, and Andrew Philpot. 2013. Events are Not
Simple: Identity, Non-Identity, and Quasi-Identity.
In Proceedings of NAACL-HLT 2013 Workshop on
Events: Definition, Detection, Coreference, and
Representation, pages 21–28.
Heng Ji, David Westbrook, and Ralph Grishman. 2005.
Using Semantic Relations to Refine Coreference
Decisions. In Proceedings of EMNLP/HLT 2005,
pages 17–24.
Philip N. Klein. 1998. Computing the Edit-Distance
Between Unrooted Ordered Trees. In Proceed-
ings of the 6th European Symposium on Algorithms
(ESA), pages 91–102.
Emmanuel Lassalle and Pascal Denis. 2013. Im-
proving pairwise coreference models through fea-
ture space hierarchy learning. In Proceedings of
ACL 2013, pages 497–506.
Heeyoung Lee, Marta Recasens, Angel Chang, Mi-
hai Surdeanu, and Dan Jurafsky. 2012. Joint En-
tity and Event Coreference Resolution across Doc-
uments. In Proceedings of the Conference on
Empirical Methods in Natural Language Process-
ing and Computational Natural Language Learning
(EMNLP-CoNLL), pages 489–500.
</reference>
<page confidence="0.979362">
75
</page>
<reference confidence="0.999901095238095">
Xiaoqiang Luo. 2005. On Coreference Resolution Per-
formance Metrics. In Proceedings of EMNLP 2005,
pages 25–32.
Yashar Mehdad. 2009. Automatic Cost Estimation for
Tree Edit Distance Using Particle Swarm Optimiza-
tion. In Proceedings of ACL-IJCNLP 2009, pages
289–292.
Alessandro Moschitti, Daniele Pighin, and Roberto
Basili. 2008. Tree Kernels for Semantic Role La-
beling. Computational Linguistics, 34(2):193–224.
Mateusz Pawlik and Nikolaus Augsten. 2011. RTED:
A Robust Algorithm for the Tree Edit Distance.
Proceedings of the VLDB Endowment (PVLDB),
5(4):334–345.
Sameer Pradhan, Lance Ramshaw, Mitchell Marcus,
Martha Palmer, Ralph Weischedel, and Nianwen
Xue. 2011. CoNLL-2011 Shared Task: Modeling
Unrestricted Coreference in OntoNotes. In Proceed-
ings of CoNLL Shared Task 2011, pages 1–27.
Altaf Rahman and Vincent Ng. 2009. Supervised
Models for Coreference Resolution. In Proceedings
of EMNLP 2009, pages 968–977.
Marta Recasens and Eduard Hovy. 2011. BLANC:
Implementing the Rand index for coreference eval-
uation. Natural Language Engineering, 17(4):485–
510.
Roger C. Schank and Robert P. Abelson. 1977. Scripts,
Plans, Goals, and Understanding: An Inquiry into
Human Knowledge Structures. Lawrence Erlbaum
Associates.
Shashank Srivastava, Dirk Hovy, and Eduard Hovy.
2013. A Walk-Based Semantically Enriched Tree
Kernel Over Distributed Word Representations. In
Proceedings of EMNLP 2013, pages 1411–1416.
Veselin Stoyanov, Nathan Gilbert, Claire Cardie, and
Ellen Riloff. 2009. Conundrums in Noun Phrase
Coreference Resolution: Making Sense of the State-
of-the-Art. In Proceedings of ACL/IJCNLP 2009,
pages 656–664.
Kuo-Chung Tai. 1979. The Tree-to-Tree Correction
Problem. Journal of the ACM (JACM), 26(3):422–
433.
Marc Vilain, John Burger, John Aberdeen, Dennis Con-
nolly, and Lynette Hirschman. 1995. A Model-
Theoretic Coreference Scoring Scheme. In Pro-
ceedings of the 6th Message Understanding Confer-
ence (MUC), pages 45–52.
Mengqiu Wang and Christopher D. Manning. 2010.
Probabilistic Tree-Edit Models with Structured La-
tent Variables for Textual Entailment and Question
Answering. In Proceedings of COLING 2010, pages
1164–1172.
Wuu Yang. 1991. Identifying Syntactic Differences
Between Two Programs. Software: Practice and
Experience, 21(7):739–755.
Xuchen Yao, Benjamin Van Durme, Chris Callison-
burch, and Peter Clark. 2013. Answer Extraction
as Sequence Tagging with Tree Edit Distance. In
Proceedings of NAACL-HLT 2013, pages 858–867.
Kaizhong Zhang and Dennis Shasha. 1989. Simple
Fast Algorithms for the Editing Distance Between
Trees and Related Problems. SIAM J. Comput.,
18(6):1245–1262.
</reference>
<page confidence="0.991702">
76
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.374571">
<title confidence="0.997497">Evaluation for Partial Event Coreference</title>
<author confidence="0.923521">Jun Araki Eduard Hovy Teruko</author>
<affiliation confidence="0.884762">Language Technologies Carnegie Mellon</affiliation>
<address confidence="0.99616">Pittsburgh, PA 15213,</address>
<email confidence="0.999382">junaraki@cs.cmu.edu,hovy@cmu.edu,teruko@cs.cmu.edu</email>
<abstract confidence="0.985165066666667">This paper proposes an evaluation scheme to measure the performance of a system that detects hierarchical event structure for event coreference resolution. We show that each system output is represented as a forest of unordered trees, and introduce the notion of conceptual event hierarchy to simplify the evaluation process. We enumerate the desiderata for a similarity metric to measure the system performance. We examine three metrics along with the desiderata, and show that metrics extended from MUC and BLANC are more adequate than a metric based on Simple Tree</abstract>
<intro confidence="0.653816">Matching.</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Amit Bagga</author>
<author>Breck Baldwin</author>
</authors>
<title>Algorithms for Scoring Coreference Chains.</title>
<date>1998</date>
<booktitle>In Proceedings of LREC 1998 Workshop on Linguistics Coreference,</booktitle>
<pages>563--566</pages>
<contexts>
<context position="5570" citStr="Bagga and Baldwin, 1998" startWordPosition="867" endWordPosition="870"> are generic and flexible enough to be used in evaluations involving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree</context>
<context position="17335" citStr="Bagga and Baldwin, 1998" startWordPosition="2867" endWordPosition="2870">en {E8} and {E11} as well. Due to space limitations, however, we do not explore the property in this work, and leave it for future work. quence of child nodes in a membership event tree in Figure 1. 71 4 Evaluation Metrics In this section, we examine three evaluation metrics based on MUC, BLANC, and STM respectively under the evaluation scheme described in Section 3. 4.1 B-CUBED and CEAF B-CUBED regards a coreference chain as a set of mentions, and examines the presence and absence of mentions in a system response that are relative to each of their corresponding mentions in the gold standard (Bagga and Baldwin, 1998). Let us call such set a mention cluster. A problem in applying B-CUBED to partial coreference is that it is difficult to properly form a mention cluster for partial coreference. In Figure 2, for example, we could form a gold standard cluster containing all nodes in the tree. We could then form a system response cluster, given a certain system output. The problem is that B-CUBED’s way of counting mentions overlapped in those clusters cannot capture parentchild relations between the mentions in a cluster. It is also difficult to extend the counting algorithm to incorporate such relations in an </context>
</contexts>
<marker>Bagga, Baldwin, 1998</marker>
<rawString>Amit Bagga and Breck Baldwin. 1998. Algorithms for Scoring Coreference Chains. In Proceedings of LREC 1998 Workshop on Linguistics Coreference, pages 563–566.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cosmin Bejan</author>
<author>Sanda Harabagiu</author>
</authors>
<title>Unsupervised Event Coreference Resolution with Rich Linguistic Features.</title>
<date>2010</date>
<booktitle>In Proceedings ofACL 2010,</booktitle>
<pages>1412--1422</pages>
<contexts>
<context position="5353" citStr="Bejan and Harabagiu, 2010" startWordPosition="829" endWordPosition="832"> follows: • We introduce a conceptual tree hierarchy that simplifies the evaluation process for partial event coreference. • We present a way to extend MUC, BLANC, and STM for the case of unordered trees. Those metrics are generic and flexible enough to be used in evaluations involving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the </context>
</contexts>
<marker>Bejan, Harabagiu, 2010</marker>
<rawString>Cosmin Bejan and Sanda Harabagiu. 2010. Unsupervised Event Coreference Resolution with Rich Linguistic Features. In Proceedings ofACL 2010, pages 1412–1422.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eric Bengtson</author>
<author>Dan Roth</author>
</authors>
<title>Understanding the Value of Features for Coreference Resolution.</title>
<date>2008</date>
<booktitle>In Proceedings of EMNLP</booktitle>
<pages>294--303</pages>
<contexts>
<context position="8818" citStr="Bengtson and Roth, 2008" startWordPosition="1397" endWordPosition="1400">t in the gold standard but do not in a system response, or vice versa. In reality, twinless mentions often happen since an end-to-end system might produce them in the process of detecting mentions. The assumption regarding twinless mentions has been investigated in research on entity coreference resolution. Cluster-based metrics such as B-CUBED and CEAF assume that a system is given true mentions without any twinless mentions in the gold standard, and then resolves full coreference on them. Researchers have made different assumptions about this issue. Early work such as (Ji et al., 2005) and (Bengtson and Roth, 2008) simply ignored such mentions. Rahman and Ng (2009) removed twinless mentions that are singletons in a system response. Cai and Strube (2010) proposed two variants of B-CUBED and CEAF that can deal with twinless mentions in order to make the evaluation of end-to-end coreference resolution system consistent. In evaluation of partial coreference where twinless mentions can also exist, we believe that the value of making evaluation consistent and comparable is the most important, and hypothesize that it is possible to effectively create a metric to measure the performance of partial coreference w</context>
</contexts>
<marker>Bengtson, Roth, 2008</marker>
<rawString>Eric Bengtson and Dan Roth. 2008. Understanding the Value of Features for Coreference Resolution. In Proceedings of EMNLP 2008, pages 294–303.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philip Bille</author>
</authors>
<title>A Survey on Tree Edit Distance and Related Problems.</title>
<date>2005</date>
<journal>Theoretical Computer Science,</journal>
<pages>337--1</pages>
<contexts>
<context position="6288" citStr="Bille, 2005" startWordPosition="988" endWordPosition="989">e metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this a</context>
</contexts>
<marker>Bille, 2005</marker>
<rawString>Philip Bille. 2005. A Survey on Tree Edit Distance and Related Problems. Theoretical Computer Science, 337(1-3):217–239.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jie Cai</author>
<author>Michael Strube</author>
</authors>
<title>Evaluation Metrics For End-to-End Coreference Resolution Systems.</title>
<date>2010</date>
<booktitle>In Proceedings of SIGDIAL</booktitle>
<pages>28--36</pages>
<contexts>
<context position="8959" citStr="Cai and Strube (2010)" startWordPosition="1419" endWordPosition="1422">ht produce them in the process of detecting mentions. The assumption regarding twinless mentions has been investigated in research on entity coreference resolution. Cluster-based metrics such as B-CUBED and CEAF assume that a system is given true mentions without any twinless mentions in the gold standard, and then resolves full coreference on them. Researchers have made different assumptions about this issue. Early work such as (Ji et al., 2005) and (Bengtson and Roth, 2008) simply ignored such mentions. Rahman and Ng (2009) removed twinless mentions that are singletons in a system response. Cai and Strube (2010) proposed two variants of B-CUBED and CEAF that can deal with twinless mentions in order to make the evaluation of end-to-end coreference resolution system consistent. In evaluation of partial coreference where twinless mentions can also exist, we believe that the value of making evaluation consistent and comparable is the most important, and hypothesize that it is possible to effectively create a metric to measure the performance of partial coreference while dealing with twinless mentions. A potential problem of making a single metric handle twinless mentions is that the metric would not be i</context>
</contexts>
<marker>Cai, Strube, 2010</marker>
<rawString>Jie Cai and Michael Strube. 2010. Evaluation Metrics For End-to-End Coreference Resolution Systems. In Proceedings of SIGDIAL 2010, pages 28–36.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nathanael Chambers</author>
<author>Dan Jurafsky</author>
</authors>
<title>Unsupervised Learning of Narrative Event Chains.</title>
<date>2008</date>
<booktitle>In Proceedings ofACL-HLT</booktitle>
<pages>789--797</pages>
<contexts>
<context position="1681" citStr="Chambers and Jurafsky, 2008" startWordPosition="251" endWordPosition="255">tion extraction, question answering, textual entailment, and contradiction detection. A key challenge for event coreference resolution is that one can define several relations between two events, where some of them exhibit subtle deviation from perfect event identity. For clarification, we refer to perfect event identity as full (event) coreference in this paper. To address the subtlety in event identity, Hovy et al. (2013) focused on two types of partial event identity: subevent and membership. Subevent relations form a stereotypical sequence of events, or a script (Schank and Abelson, 1977; Chambers and Jurafsky, 2008). Membership relations represent instances of an event collection. We refer to both as partial (event) coreference in this paper. Figure 1 shows some examples of the subevent and membership relations in the illustrative text below, taken from the Intelligence Community domain of violent events. Unlike full coreference, partial coreference is a directed relation, and forms hierarchical event structure, as shown in Figure 1. Detecting partial coreference itself is an important task because the resulting event structures are beneficial to text comprehension. In addition, such structures are also </context>
</contexts>
<marker>Chambers, Jurafsky, 2008</marker>
<rawString>Nathanael Chambers and Dan Jurafsky. 2008. Unsupervised Learning of Narrative Event Chains. In Proceedings ofACL-HLT 2008, pages 789–797.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
<author>Nigel Duffy</author>
</authors>
<title>Convolution Kernels for Natural Language.</title>
<date>2001</date>
<booktitle>In Proceedings of NIPS</booktitle>
<pages>625--632</pages>
<contexts>
<context position="7223" citStr="Collins and Duffy, 2001" startWordPosition="1136" endWordPosition="1139">c tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kernels have been also widely studied and applied to NLP tasks, more specifically, to capture the similarity between parse trees (Collins and Duffy, 2001; Moschitti et al., 2008) or between dependency trees (Croce et al., 2011; Srivastava et al., 2013). This method is based on a supervised learning model with training data; hence we need a number of pairs of trees and associated numeric similarity values between these trees as input. Thus, it is not appropriate for an evaluation setting. 3 Evaluation Scheme When one formulates an evaluation scheme for a new task, it is important to define assumptions for the evaluation and desiderata that an ideal metric should satisfy. In this section, we first describe assumptions for partial coreference eva</context>
</contexts>
<marker>Collins, Duffy, 2001</marker>
<rawString>Michael Collins and Nigel Duffy. 2001. Convolution Kernels for Natural Language. In Proceedings of NIPS 2001, pages 625–632.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Danilo Croce</author>
<author>Alessandro Moschitti</author>
<author>Roberto Basili</author>
</authors>
<title>Structured Lexical Similarity via Convolution Kernels on Dependency Trees.</title>
<date>2011</date>
<booktitle>In Proceedings of EMNLP 2011,</booktitle>
<pages>1034--1046</pages>
<contexts>
<context position="7296" citStr="Croce et al., 2011" startWordPosition="1148" endWordPosition="1151">ees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kernels have been also widely studied and applied to NLP tasks, more specifically, to capture the similarity between parse trees (Collins and Duffy, 2001; Moschitti et al., 2008) or between dependency trees (Croce et al., 2011; Srivastava et al., 2013). This method is based on a supervised learning model with training data; hence we need a number of pairs of trees and associated numeric similarity values between these trees as input. Thus, it is not appropriate for an evaluation setting. 3 Evaluation Scheme When one formulates an evaluation scheme for a new task, it is important to define assumptions for the evaluation and desiderata that an ideal metric should satisfy. In this section, we first describe assumptions for partial coreference evaluation, and introduce the notion of conceptual event hierarchy to addres</context>
</contexts>
<marker>Croce, Moschitti, Basili, 2011</marker>
<rawString>Danilo Croce, Alessandro Moschitti, and Roberto Basili. 2011. Structured Lexical Similarity via Convolution Kernels on Dependency Trees. In Proceedings of EMNLP 2011, pages 1034–1046.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Erik D Demaine</author>
<author>Shay Mozes</author>
<author>Benjamin Rossman</author>
<author>Oren Weimann</author>
</authors>
<title>An Optimal Decomposition Algorithm for Tree Edit Distance.</title>
<date>2009</date>
<journal>ACM Transactions on Algorithms (TALG),</journal>
<volume>6</volume>
<issue>1</issue>
<contexts>
<context position="6310" citStr="Demaine et al., 2009" startWordPosition="990" endWordPosition="993">o two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also orig</context>
</contexts>
<marker>Demaine, Mozes, Rossman, Weimann, 2009</marker>
<rawString>Erik D. Demaine, Shay Mozes, Benjamin Rossman, and Oren Weimann. 2009. An Optimal Decomposition Algorithm for Tree Edit Distance. ACM Transactions on Algorithms (TALG), 6(1):2:1–2:19.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Greg Durrett</author>
<author>David Hall</author>
<author>Dan Klein</author>
</authors>
<title>Decentralized Entity-Level Modeling for Coreference Resolution.</title>
<date>2013</date>
<booktitle>In Proceedings of ACL 2013,</booktitle>
<pages>114--124</pages>
<contexts>
<context position="5393" citStr="Durrett et al., 2013" startWordPosition="837" endWordPosition="840">erarchy that simplifies the evaluation process for partial event coreference. • We present a way to extend MUC, BLANC, and STM for the case of unordered trees. Those metrics are generic and flexible enough to be used in evaluations involving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to </context>
</contexts>
<marker>Durrett, Hall, Klein, 2013</marker>
<rawString>Greg Durrett, David Hall, and Dan Klein. 2013. Decentralized Entity-Level Modeling for Coreference Resolution. In Proceedings of ACL 2013, pages 114–124.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Heilman</author>
<author>Noah A Smith</author>
</authors>
<title>Tree Edit Models for Recognizing Textual Entailments, Paraphrases, and Answers to Questions.</title>
<date>2010</date>
<booktitle>In Proceedings of NAACL-HLT 2013,</booktitle>
<pages>1011--1019</pages>
<contexts>
<context position="6499" citStr="Heilman and Smith, 2010" startWordPosition="1019" endWordPosition="1023">unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kernels have been also widely</context>
</contexts>
<marker>Heilman, Smith, 2010</marker>
<rawString>Michael Heilman and Noah A. Smith. 2010. Tree Edit Models for Recognizing Textual Entailments, Paraphrases, and Answers to Questions. In Proceedings of NAACL-HLT 2013, pages 1011–1019.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eduard Hovy</author>
<author>Teruko Mitamura</author>
<author>Felisa Verdejo</author>
<author>Jun Araki</author>
<author>Andrew Philpot</author>
</authors>
<title>Events are Not Simple: Identity, Non-Identity, and Quasi-Identity.</title>
<date>2013</date>
<booktitle>In Proceedings of NAACL-HLT 2013 Workshop on Events: Definition, Detection, Coreference, and Representation,</booktitle>
<pages>21--28</pages>
<contexts>
<context position="1480" citStr="Hovy et al. (2013)" startWordPosition="220" endWordPosition="223"> determine whether two event mentions refer to the same event. This task is important since resolved event coreference is useful in various tasks such as topic detection and tracking, information extraction, question answering, textual entailment, and contradiction detection. A key challenge for event coreference resolution is that one can define several relations between two events, where some of them exhibit subtle deviation from perfect event identity. For clarification, we refer to perfect event identity as full (event) coreference in this paper. To address the subtlety in event identity, Hovy et al. (2013) focused on two types of partial event identity: subevent and membership. Subevent relations form a stereotypical sequence of events, or a script (Schank and Abelson, 1977; Chambers and Jurafsky, 2008). Membership relations represent instances of an event collection. We refer to both as partial (event) coreference in this paper. Figure 1 shows some examples of the subevent and membership relations in the illustrative text below, taken from the Intelligence Community domain of violent events. Unlike full coreference, partial coreference is a directed relation, and forms hierarchical event struc</context>
</contexts>
<marker>Hovy, Mitamura, Verdejo, Araki, Philpot, 2013</marker>
<rawString>Eduard Hovy, Teruko Mitamura, Felisa Verdejo, Jun Araki, and Andrew Philpot. 2013. Events are Not Simple: Identity, Non-Identity, and Quasi-Identity. In Proceedings of NAACL-HLT 2013 Workshop on Events: Definition, Detection, Coreference, and Representation, pages 21–28.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Heng Ji</author>
<author>David Westbrook</author>
<author>Ralph Grishman</author>
</authors>
<title>Using Semantic Relations to Refine Coreference Decisions.</title>
<date>2005</date>
<booktitle>In Proceedings of EMNLP/HLT</booktitle>
<pages>17--24</pages>
<contexts>
<context position="8788" citStr="Ji et al., 2005" startWordPosition="1392" endWordPosition="1395">the mentions that exist in the gold standard but do not in a system response, or vice versa. In reality, twinless mentions often happen since an end-to-end system might produce them in the process of detecting mentions. The assumption regarding twinless mentions has been investigated in research on entity coreference resolution. Cluster-based metrics such as B-CUBED and CEAF assume that a system is given true mentions without any twinless mentions in the gold standard, and then resolves full coreference on them. Researchers have made different assumptions about this issue. Early work such as (Ji et al., 2005) and (Bengtson and Roth, 2008) simply ignored such mentions. Rahman and Ng (2009) removed twinless mentions that are singletons in a system response. Cai and Strube (2010) proposed two variants of B-CUBED and CEAF that can deal with twinless mentions in order to make the evaluation of end-to-end coreference resolution system consistent. In evaluation of partial coreference where twinless mentions can also exist, we believe that the value of making evaluation consistent and comparable is the most important, and hypothesize that it is possible to effectively create a metric to measure the perfor</context>
</contexts>
<marker>Ji, Westbrook, Grishman, 2005</marker>
<rawString>Heng Ji, David Westbrook, and Ralph Grishman. 2005. Using Semantic Relations to Refine Coreference Decisions. In Proceedings of EMNLP/HLT 2005, pages 17–24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philip N Klein</author>
</authors>
<title>Computing the Edit-Distance Between Unrooted Ordered Trees.</title>
<date>1998</date>
<booktitle>In Proceedings of the 6th European Symposium on Algorithms (ESA),</booktitle>
<pages>91--102</pages>
<contexts>
<context position="6275" citStr="Klein, 1998" startWordPosition="986" endWordPosition="987">n divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Al</context>
</contexts>
<marker>Klein, 1998</marker>
<rawString>Philip N. Klein. 1998. Computing the Edit-Distance Between Unrooted Ordered Trees. In Proceedings of the 6th European Symposium on Algorithms (ESA), pages 91–102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Emmanuel Lassalle</author>
<author>Pascal Denis</author>
</authors>
<title>Improving pairwise coreference models through feature space hierarchy learning.</title>
<date>2013</date>
<booktitle>In Proceedings of ACL 2013,</booktitle>
<pages>497--506</pages>
<contexts>
<context position="5420" citStr="Lassalle and Denis, 2013" startWordPosition="841" endWordPosition="844">s the evaluation process for partial event coreference. • We present a way to extend MUC, BLANC, and STM for the case of unordered trees. Those metrics are generic and flexible enough to be used in evaluations involving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directio</context>
</contexts>
<marker>Lassalle, Denis, 2013</marker>
<rawString>Emmanuel Lassalle and Pascal Denis. 2013. Improving pairwise coreference models through feature space hierarchy learning. In Proceedings of ACL 2013, pages 497–506.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Heeyoung Lee</author>
<author>Marta Recasens</author>
<author>Angel Chang</author>
<author>Mihai Surdeanu</author>
<author>Dan Jurafsky</author>
</authors>
<title>Joint Entity and Event Coreference Resolution across Documents.</title>
<date>2012</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL),</booktitle>
<pages>489--500</pages>
<contexts>
<context position="5371" citStr="Lee et al., 2012" startWordPosition="833" endWordPosition="836">conceptual tree hierarchy that simplifies the evaluation process for partial event coreference. • We present a way to extend MUC, BLANC, and STM for the case of unordered trees. Those metrics are generic and flexible enough to be used in evaluations involving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because</context>
</contexts>
<marker>Lee, Recasens, Chang, Surdeanu, Jurafsky, 2012</marker>
<rawString>Heeyoung Lee, Marta Recasens, Angel Chang, Mihai Surdeanu, and Dan Jurafsky. 2012. Joint Entity and Event Coreference Resolution across Documents. In Proceedings of the Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), pages 489–500.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaoqiang Luo</author>
</authors>
<title>On Coreference Resolution Performance Metrics.</title>
<date>2005</date>
<booktitle>In Proceedings of EMNLP</booktitle>
<pages>25--32</pages>
<contexts>
<context position="5620" citStr="Luo, 2005" startWordPosition="877" endWordPosition="878">ving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical </context>
</contexts>
<marker>Luo, 2005</marker>
<rawString>Xiaoqiang Luo. 2005. On Coreference Resolution Performance Metrics. In Proceedings of EMNLP 2005, pages 25–32.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yashar Mehdad</author>
</authors>
<title>Automatic Cost Estimation for Tree Edit Distance Using Particle Swarm Optimization.</title>
<date>2009</date>
<booktitle>In Proceedings of ACL-IJCNLP</booktitle>
<pages>289--292</pages>
<contexts>
<context position="6450" citStr="Mehdad, 2009" startWordPosition="1013" endWordPosition="1014">ate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for un</context>
</contexts>
<marker>Mehdad, 2009</marker>
<rawString>Yashar Mehdad. 2009. Automatic Cost Estimation for Tree Edit Distance Using Particle Swarm Optimization. In Proceedings of ACL-IJCNLP 2009, pages 289–292.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alessandro Moschitti</author>
<author>Daniele Pighin</author>
<author>Roberto Basili</author>
</authors>
<title>Tree Kernels for Semantic Role Labeling.</title>
<date>2008</date>
<journal>Computational Linguistics,</journal>
<volume>34</volume>
<issue>2</issue>
<contexts>
<context position="7248" citStr="Moschitti et al., 2008" startWordPosition="1140" endWordPosition="1143">n addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kernels have been also widely studied and applied to NLP tasks, more specifically, to capture the similarity between parse trees (Collins and Duffy, 2001; Moschitti et al., 2008) or between dependency trees (Croce et al., 2011; Srivastava et al., 2013). This method is based on a supervised learning model with training data; hence we need a number of pairs of trees and associated numeric similarity values between these trees as input. Thus, it is not appropriate for an evaluation setting. 3 Evaluation Scheme When one formulates an evaluation scheme for a new task, it is important to define assumptions for the evaluation and desiderata that an ideal metric should satisfy. In this section, we first describe assumptions for partial coreference evaluation, and introduce th</context>
</contexts>
<marker>Moschitti, Pighin, Basili, 2008</marker>
<rawString>Alessandro Moschitti, Daniele Pighin, and Roberto Basili. 2008. Tree Kernels for Semantic Role Labeling. Computational Linguistics, 34(2):193–224.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mateusz Pawlik</author>
<author>Nikolaus Augsten</author>
</authors>
<title>RTED: A Robust Algorithm for the Tree Edit Distance.</title>
<date>2011</date>
<booktitle>Proceedings of the VLDB Endowment (PVLDB),</booktitle>
<pages>5--4</pages>
<contexts>
<context position="6337" citStr="Pawlik and Augsten, 2011" startWordPosition="994" endWordPosition="997">based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordere</context>
</contexts>
<marker>Pawlik, Augsten, 2011</marker>
<rawString>Mateusz Pawlik and Nikolaus Augsten. 2011. RTED: A Robust Algorithm for the Tree Edit Distance. Proceedings of the VLDB Endowment (PVLDB), 5(4):334–345.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sameer Pradhan</author>
<author>Lance Ramshaw</author>
<author>Mitchell Marcus</author>
<author>Martha Palmer</author>
<author>Ralph Weischedel</author>
<author>Nianwen Xue</author>
</authors>
<title>CoNLL-2011 Shared Task: Modeling Unrestricted Coreference in OntoNotes.</title>
<date>2011</date>
<booktitle>In Proceedings of CoNLL Shared Task</booktitle>
<pages>1--27</pages>
<contexts>
<context position="28101" citStr="Pradhan et al., 2011" startWordPosition="4777" endWordPosition="4780">M stops searching the rest of nodes in the trees. 6 Discussion In Section 4.4, we observed that MUCp and STMp are more flexible than BLANCp because they can measure the performance coreference in the case of twinless mentions as well. The experimental results in Section 5 show that MUCp and BLANCp more adequate in terms of the five properties defined in Section 3.3. Putting these together, MUCp seems the best metric for partial event coreference. However, MUC has two disadvantages that (1) it prefers systems that have more mentions per entity (event), and (2) it ignores recall for singletons (Pradhan et al., 2011). MUCp also has these disadvantages. Thus, BLANCp might be the best choice for partial coreference if we could assume that a system is given true mentions in the gold standard. Although STMp fails to satisfy P4 and P5, it has potential power to capture structural proper0 20 40 60 80 100 Ratio of correct links [%] (a) The number of correct links increases from singletons to the perfect output (the gold standard) one by one. 0 20 40 60 80 100 Ratio of incorrect links [%] (b) The number of incorrect links increases from the perfect output to a single tree merging all trees one by one. Figure 4: S</context>
</contexts>
<marker>Pradhan, Ramshaw, Marcus, Palmer, Weischedel, Xue, 2011</marker>
<rawString>Sameer Pradhan, Lance Ramshaw, Mitchell Marcus, Martha Palmer, Ralph Weischedel, and Nianwen Xue. 2011. CoNLL-2011 Shared Task: Modeling Unrestricted Coreference in OntoNotes. In Proceedings of CoNLL Shared Task 2011, pages 1–27.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Altaf Rahman</author>
<author>Vincent Ng</author>
</authors>
<title>Supervised Models for Coreference Resolution.</title>
<date>2009</date>
<booktitle>In Proceedings of EMNLP</booktitle>
<pages>968--977</pages>
<contexts>
<context position="8869" citStr="Rahman and Ng (2009)" startWordPosition="1405" endWordPosition="1408"> or vice versa. In reality, twinless mentions often happen since an end-to-end system might produce them in the process of detecting mentions. The assumption regarding twinless mentions has been investigated in research on entity coreference resolution. Cluster-based metrics such as B-CUBED and CEAF assume that a system is given true mentions without any twinless mentions in the gold standard, and then resolves full coreference on them. Researchers have made different assumptions about this issue. Early work such as (Ji et al., 2005) and (Bengtson and Roth, 2008) simply ignored such mentions. Rahman and Ng (2009) removed twinless mentions that are singletons in a system response. Cai and Strube (2010) proposed two variants of B-CUBED and CEAF that can deal with twinless mentions in order to make the evaluation of end-to-end coreference resolution system consistent. In evaluation of partial coreference where twinless mentions can also exist, we believe that the value of making evaluation consistent and comparable is the most important, and hypothesize that it is possible to effectively create a metric to measure the performance of partial coreference while dealing with twinless mentions. A potential pr</context>
</contexts>
<marker>Rahman, Ng, 2009</marker>
<rawString>Altaf Rahman and Vincent Ng. 2009. Supervised Models for Coreference Resolution. In Proceedings of EMNLP 2009, pages 968–977.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marta Recasens</author>
<author>Eduard Hovy</author>
</authors>
<title>BLANC: Implementing the Rand index for coreference evaluation.</title>
<date>2011</date>
<journal>Natural Language Engineering,</journal>
<volume>17</volume>
<issue>4</issue>
<pages>510</pages>
<contexts>
<context position="5657" citStr="Recasens and Hovy, 2011" startWordPosition="881" endWordPosition="884">sed on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha,</context>
<context position="9716" citStr="Recasens and Hovy, 2011" startWordPosition="1543" endWordPosition="1546">ence resolution system consistent. In evaluation of partial coreference where twinless mentions can also exist, we believe that the value of making evaluation consistent and comparable is the most important, and hypothesize that it is possible to effectively create a metric to measure the performance of partial coreference while dealing with twinless mentions. A potential problem of making a single metric handle twinless mentions is that the metric would not be informative enough to show whether a system is good at identifying coreference links but poor at identifying mentions, or vice versa (Recasens and Hovy, 2011). However, our intuition is that the problem is avoidable by showing the performance of mention identification with metrics such as precision, recall, and the F-measure simultaneously with the performance of link identification. In this work, therefore, we assume that a metric for partial coreference should be able to handle twinless mentions. Intransitivity: As described earlier, partial coreference is a directed relation. We assume that partial coreference is not transitive. To illustrate the intransitivity, let ez -&apos;-q+ ej denote a subevent relation that ej is a subevent of ez. In Figure 1,</context>
<context position="19850" citStr="Recasens and Hovy, 2011" startWordPosition="3320" endWordPosition="3323">those mention clusters that matched the gold standard. It is possible to apply the idea of MUC to the case of partial coreference simply by changing the definition of a correct link. In the partial coreference case, we define a correct link as a link matched with the gold standard including its direction. Let MUCp denote such extension to MUC for partial coreference. Similarly, it is also possible to define an extension to BLANC. Let BLANCp denote the extension. BLANC computes precision, recall, and F1 scores for both coreference and noncoreference links, and average them for the final score (Recasens and Hovy, 2011). As with MUCp, BLANCp defines a correct link as a link matched with the gold standard including its direction. Another difference between BLANC and BLANCp is the total number of mention pairs, denoted as L. In the original BLANC, L = N(N − 1)/2 where N is the total number of mentions in a document. We use Lp = N(N − 1) instead for BLANCp since we consider two directed links in partial coreference with respect to each undirected link in full coreference. 4.3 Extension to Simple Tree Matching The underlying idea of STM is that if two trees have more node-matching, then they are more similar. Th</context>
</contexts>
<marker>Recasens, Hovy, 2011</marker>
<rawString>Marta Recasens and Eduard Hovy. 2011. BLANC: Implementing the Rand index for coreference evaluation. Natural Language Engineering, 17(4):485– 510.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger C Schank</author>
<author>Robert P Abelson</author>
</authors>
<title>Scripts, Plans, Goals, and Understanding: An Inquiry into Human Knowledge Structures. Lawrence Erlbaum Associates.</title>
<date>1977</date>
<contexts>
<context position="1651" citStr="Schank and Abelson, 1977" startWordPosition="247" endWordPosition="250">tion and tracking, information extraction, question answering, textual entailment, and contradiction detection. A key challenge for event coreference resolution is that one can define several relations between two events, where some of them exhibit subtle deviation from perfect event identity. For clarification, we refer to perfect event identity as full (event) coreference in this paper. To address the subtlety in event identity, Hovy et al. (2013) focused on two types of partial event identity: subevent and membership. Subevent relations form a stereotypical sequence of events, or a script (Schank and Abelson, 1977; Chambers and Jurafsky, 2008). Membership relations represent instances of an event collection. We refer to both as partial (event) coreference in this paper. Figure 1 shows some examples of the subevent and membership relations in the illustrative text below, taken from the Intelligence Community domain of violent events. Unlike full coreference, partial coreference is a directed relation, and forms hierarchical event structure, as shown in Figure 1. Detecting partial coreference itself is an important task because the resulting event structures are beneficial to text comprehension. In addit</context>
</contexts>
<marker>Schank, Abelson, 1977</marker>
<rawString>Roger C. Schank and Robert P. Abelson. 1977. Scripts, Plans, Goals, and Understanding: An Inquiry into Human Knowledge Structures. Lawrence Erlbaum Associates.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shashank Srivastava</author>
<author>Dirk Hovy</author>
<author>Eduard Hovy</author>
</authors>
<title>A Walk-Based Semantically Enriched Tree Kernel Over Distributed Word Representations.</title>
<date>2013</date>
<booktitle>In Proceedings of EMNLP 2013,</booktitle>
<pages>1411--1416</pages>
<contexts>
<context position="7322" citStr="Srivastava et al., 2013" startWordPosition="1152" endWordPosition="1155">x. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kernels have been also widely studied and applied to NLP tasks, more specifically, to capture the similarity between parse trees (Collins and Duffy, 2001; Moschitti et al., 2008) or between dependency trees (Croce et al., 2011; Srivastava et al., 2013). This method is based on a supervised learning model with training data; hence we need a number of pairs of trees and associated numeric similarity values between these trees as input. Thus, it is not appropriate for an evaluation setting. 3 Evaluation Scheme When one formulates an evaluation scheme for a new task, it is important to define assumptions for the evaluation and desiderata that an ideal metric should satisfy. In this section, we first describe assumptions for partial coreference evaluation, and introduce the notion of conceptual event hierarchy to address the challenge posed by o</context>
</contexts>
<marker>Srivastava, Hovy, Hovy, 2013</marker>
<rawString>Shashank Srivastava, Dirk Hovy, and Eduard Hovy. 2013. A Walk-Based Semantically Enriched Tree Kernel Over Distributed Word Representations. In Proceedings of EMNLP 2013, pages 1411–1416.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Veselin Stoyanov</author>
<author>Nathan Gilbert</author>
<author>Claire Cardie</author>
<author>Ellen Riloff</author>
</authors>
<title>Conundrums in Noun Phrase Coreference Resolution: Making Sense of the Stateof-the-Art.</title>
<date>2009</date>
<booktitle>In Proceedings of ACL/IJCNLP</booktitle>
<pages>656--664</pages>
<contexts>
<context position="8167" citStr="Stoyanov et al., 2009" startWordPosition="1289" endWordPosition="1292">aluation setting. 3 Evaluation Scheme When one formulates an evaluation scheme for a new task, it is important to define assumptions for the evaluation and desiderata that an ideal metric should satisfy. In this section, we first describe assumptions for partial coreference evaluation, and introduce the notion of conceptual event hierarchy to address the challenge posed by one of the assumptions. We then enumerate the desiderata for a metric. 69 3.1 Assumptions on Partial Coreference We make the following three assumptions to evaluate partial coreference. Twinless mentions: Twinless mentions (Stoyanov et al., 2009) are the mentions that exist in the gold standard but do not in a system response, or vice versa. In reality, twinless mentions often happen since an end-to-end system might produce them in the process of detecting mentions. The assumption regarding twinless mentions has been investigated in research on entity coreference resolution. Cluster-based metrics such as B-CUBED and CEAF assume that a system is given true mentions without any twinless mentions in the gold standard, and then resolves full coreference on them. Researchers have made different assumptions about this issue. Early work such</context>
</contexts>
<marker>Stoyanov, Gilbert, Cardie, Riloff, 2009</marker>
<rawString>Veselin Stoyanov, Nathan Gilbert, Claire Cardie, and Ellen Riloff. 2009. Conundrums in Noun Phrase Coreference Resolution: Making Sense of the Stateof-the-Art. In Proceedings of ACL/IJCNLP 2009, pages 656–664.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kuo-Chung Tai</author>
</authors>
<title>The Tree-to-Tree Correction Problem.</title>
<date>1979</date>
<journal>Journal of the ACM (JACM),</journal>
<volume>26</volume>
<issue>3</issue>
<pages>433</pages>
<contexts>
<context position="6238" citStr="Tai, 1979" startWordPosition="980" endWordPosition="981">NC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maxim</context>
</contexts>
<marker>Tai, 1979</marker>
<rawString>Kuo-Chung Tai. 1979. The Tree-to-Tree Correction Problem. Journal of the ACM (JACM), 26(3):422– 433.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Vilain</author>
<author>John Burger</author>
<author>John Aberdeen</author>
<author>Dennis Connolly</author>
<author>Lynette Hirschman</author>
</authors>
<title>A ModelTheoretic Coreference Scoring Scheme.</title>
<date>1995</date>
<booktitle>In Proceedings of the 6th Message Understanding Conference (MUC),</booktitle>
<pages>45--52</pages>
<contexts>
<context position="5535" citStr="Vilain et al., 1995" startWordPosition="862" endWordPosition="865"> unordered trees. Those metrics are generic and flexible enough to be used in evaluations involving data structures based on unordered trees. • Our experimental results indicate that the extended MUC and BLANC are better than Simple Tree Matching for evaluating partial coreference. 2 Related Work Recent studies on both entity and event coreference resolution use several metrics to evaluate system performance (Bejan and Harabagiu, 2010; Lee et al., 2012; Durrett et al., 2013; Lassalle and Denis, 2013) since there is no agreement on a single metric. Currently, five metrics are widely used: MUC (Vilain et al., 1995), B-CUBED (Bagga and Baldwin, 1998), two CEAF metrics CEAF-03 and CEAF-04 (Luo, 2005), and BLANC (Recasens and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the tradit</context>
<context position="18761" citStr="Vilain et al., 1995" startWordPosition="3118" endWordPosition="3121">s a set of mentions, and measures how many mentions two clusters share using two similarity metrics 03(R, S) = |R n S |and 04(R, S) = 2|R∩S| |R|+|S|, given two clusters R and S. One can extend CEAF for partial coreference by selecting the most appropriate tree similarity algorithm for 0 that works well with the algorithm to compute maximum bipartite matching in CEAF. However, that is another line of work, and due to space limitations we leave it for future work. 4.2 Extension to MUC and BLANC MUC relies on the minimum number of links needed when mapping a system response to the gold standard (Vilain et al., 1995). Given a set of key entities K and a set of response entities R, precision of MUC is defined as the number of common links between entities in K and R divided by the number of links in R, whereas recall of MUC is defined as the number of common links between entities in K and R divided by the number of links in K. After finding a set of mention clusters by resolving full coreference, we can compute the number of correct links by counting all links spanning in those mention clusters that matched the gold standard. It is possible to apply the idea of MUC to the case of partial coreference simpl</context>
</contexts>
<marker>Vilain, Burger, Aberdeen, Connolly, Hirschman, 1995</marker>
<rawString>Marc Vilain, John Burger, John Aberdeen, Dennis Connolly, and Lynette Hirschman. 1995. A ModelTheoretic Coreference Scoring Scheme. In Proceedings of the 6th Message Understanding Conference (MUC), pages 45–52.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mengqiu Wang</author>
<author>Christopher D Manning</author>
</authors>
<title>Probabilistic Tree-Edit Models with Structured Latent Variables for Textual Entailment and Question Answering.</title>
<date>2010</date>
<booktitle>In Proceedings of COLING</booktitle>
<pages>1164--1172</pages>
<contexts>
<context position="6474" citStr="Wang and Manning, 2010" startWordPosition="1015" endWordPosition="1018">reference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kern</context>
</contexts>
<marker>Wang, Manning, 2010</marker>
<rawString>Mengqiu Wang and Christopher D. Manning. 2010. Probabilistic Tree-Edit Models with Structured Latent Variables for Textual Entailment and Question Answering. In Proceedings of COLING 2010, pages 1164–1172.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wuu Yang</author>
</authors>
<title>Identifying Syntactic Differences Between Two Programs.</title>
<date>1991</date>
<journal>Software: Practice and Experience,</journal>
<volume>21</volume>
<issue>7</issue>
<contexts>
<context position="6774" citStr="Yang, 1991" startWordPosition="1065" endWordPosition="1066">ng tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic programming. Although this algorithm was also originally developed for ordered trees, the underlying idea of the algorithm is simple, making it relatively easy to extend the algorithm for unordered trees. Tree kernels have been also widely studied and applied to NLP tasks, more specifically, to capture the similarity between parse trees (Collins and Duffy, 2001; Moschitti et al., 2008) or between dependency trees (Croce et al., 2011; Srivastava et al., 2013). This method is based on a supervised learning mode</context>
</contexts>
<marker>Yang, 1991</marker>
<rawString>Wuu Yang. 1991. Identifying Syntactic Differences Between Two Programs. Software: Practice and Experience, 21(7):739–755.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xuchen Yao</author>
<author>Benjamin Van Durme</author>
<author>Chris Callisonburch</author>
<author>Peter Clark</author>
</authors>
<title>Answer Extraction as Sequence Tagging with Tree Edit Distance.</title>
<date>2013</date>
<booktitle>In Proceedings of NAACL-HLT 2013,</booktitle>
<pages>858--867</pages>
<marker>Yao, Van Durme, Callisonburch, Clark, 2013</marker>
<rawString>Xuchen Yao, Benjamin Van Durme, Chris Callisonburch, and Peter Clark. 2013. Answer Extraction as Sequence Tagging with Tree Edit Distance. In Proceedings of NAACL-HLT 2013, pages 858–867.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kaizhong Zhang</author>
<author>Dennis Shasha</author>
</authors>
<title>Simple Fast Algorithms for the Editing Distance Between Trees and Related Problems.</title>
<date>1989</date>
<journal>SIAM J. Comput.,</journal>
<volume>18</volume>
<issue>6</issue>
<contexts>
<context position="6262" citStr="Zhang and Shasha, 1989" startWordPosition="982" endWordPosition="985">s and Hovy, 2011). We can divide these metrics into two groups: cluster-based metrics, e.g., BCUBED and CEAF, and link-based metrics, e.g., MUC and BLANC. The former group is not applicable to evaluate partial coreference because it is unclear how to define a cluster. The latter is not readily applicable to the evaluation because it is unclear how to penalize incorrect directions of links. We discuss these aspects in Section 4.1 and Section 4.2. Tree Edit Distance (TED) is one of the traditional algorithms for measuring tree similarity. It has a long history of theoretical studies (Tai, 1979; Zhang and Shasha, 1989; Klein, 1998; Bille, 2005; Demaine et al., 2009; Pawlik and Augsten, 2011). It is also widely studied in many applications, including Natural Language Processing (NLP) tasks (Mehdad, 2009; Wang and Manning, 2010; Heilman and Smith, 2010; Yao et al., 2013). However, TED has a disadvantage: we need to predefine appropriate costs for basic tree-edit operations. In addition, an implementation of TED for unordered trees is fairly complex. Another tree similarity metric is Simple Tree Matching (STM) (Yang, 1991). STM measures the similarity of two trees by counting the maximum match with dynamic pr</context>
</contexts>
<marker>Zhang, Shasha, 1989</marker>
<rawString>Kaizhong Zhang and Dennis Shasha. 1989. Simple Fast Algorithms for the Editing Distance Between Trees and Related Problems. SIAM J. Comput., 18(6):1245–1262.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>