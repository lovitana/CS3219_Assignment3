<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.072146">
<title confidence="0.978022">
Mostly Passive Information Delivery – a Prototype
</title>
<author confidence="0.917796">
J. Vystrˇcil, T. Macek, D. Luksch, M. Labsk´y, L. Kunc, J. Kleindienst, T. Kaˇsparov´a
</author>
<affiliation confidence="0.795849">
IBM Prague Research and Development Lab
</affiliation>
<address confidence="0.412119333333333">
V Parku 2294/4, 148 00 Prague 4
Czech Republic
{jan vystrcil, tomas macek, david.luksch, martin labsky,
</address>
<email confidence="0.884992">
ladislav kunc1, jankle, tereza.kasparova}@cz.ibm.com
</email>
<sectionHeader confidence="0.989591" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999425136363637">
In this paper we introduce a new UI
paradigm that mimics radio broadcast
along with a prototype called Radio One.
The approach aims to present useful infor-
mation from multiple domains to mobile
users (e.g. drivers on the go or cell phone
users). The information is served in an en-
tertaining manner in a mostly passive style
– without the user having to ask for it– as
in real radio broadcast. The content is gen-
erated on the fly by a machine and inte-
grates a mix of personal (calendar, emails)
and publicly available but customized in-
formation (news, weather, POIs). Most of
the spoken audio output is machine syn-
thesized. The implemented prototype per-
mits passive listening as well as interaction
using voice commands or buttons. Initial
feedback gathered while testing the proto-
type while driving indicates good accep-
tance of the system and relatively low dis-
traction levels.
</bodyText>
<sectionHeader confidence="0.999134" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999976692307692">
The main purpose of this paper is to describe a
prototype of the Radio One concept. Radio One
presents music, news, emails, relevant POI and
other information to the user in a mostly passive
way, similarly to conventional radios. Users can
interract with the system as well using voice com-
mands or buttons. The concept was refined and
initially tested with prerecorded audio-visual sce-
narios using the Wizard-of-Oz (WOZ) technique
(Macek et al., 2013).
Here we describe the early prototype implemen-
tation of the system and summarize initial feed-
back collected during informal testing.
</bodyText>
<sectionHeader confidence="0.999781" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999931807692308">
Applications that produce customized audio
streams can be found in many online music deliv-
ery services including Spotify, Pandora, or iTunes.
While the above services often focus on music
only, other providers (BBC, CNN) publish their
spoken content in the form of podcasts. Spoken
audio used for podcasts is often recorded by pro-
fessional speakers as opposed to the concept pre-
sented here. The Aha radio (Aha, 2014) provides
various thematic streams of information including
music, news, social network updates or Points of
Interest (POI). Content can be selected manually
by switching between channels. Similar strategies
are utilized by Stitcher (Stitcher, 2014) and other
services. The concept presented here attempts in-
sted to preselect the content automatically and on
the fly while preserving the option to request the
content explicitely.
Many in-car infotainment systems adopted the
use of voice control and utilize information di-
rectly from on-line services; e.g. (BMW, 2014)
and (Ford, 2014). All of the abovementioned ap-
plications use mobile data connection to deliver
audio stream (as opposed to text) to the user. This
can lead to large data downloads and potentially to
high bills from mobile network providers.
</bodyText>
<sectionHeader confidence="0.991886" genericHeader="method">
3 Radio One Concept
</sectionHeader>
<bodyText confidence="0.999407">
Radio One mimics radio broadcast by generating
infotainment content on the fly. Unlike real radios,
Radio One customizes its content to the particular
listener and should even adapt automatically while
the user interacts with it. In addition to the content
typically played by radios, the synthetic content
also includes private information like calendar or
emails. Most of the spoken output is produced by
a text-to-speech system with the exception of pod-
casts.
The presented information stream is sparse with
</bodyText>
<page confidence="0.989346">
53
</page>
<note confidence="0.7157075">
Proceedings of the of the EACL 2014 Workshop on Dialogue in Motion (DM), pages 53–57,
Gothenburg, Sweden, April 26-30 2014. c�2014 Association for Computational Linguistics
</note>
<bodyText confidence="0.999965533333333">
the intervals between spoken segments filled with
music and moderator small-talk. The content
structure is configurable and can be adapted both
automatically, based on observing habits of the
user, or via explicit voice commands or buttons.
The main benefit of dynamically generated con-
tent is that the system can easily include dynamic
personal content and that the infotainment stream
can be efficiently controlled by the user and in-
fluenced by the environment (such as expected
duration of the drive or current road conditions).
From a technical perspective, the connection re-
quirements are much smaller compared to audio
transfers, as Radio One mostly downloads textual
feeds only. Downloading redundant information
can be avoided by knowing what has already been
presented to the particular user. Further, the user
can navigate in the broadcast, either to specific
topics by using voice commands, or just backward
and forward by using buttons. This option should
reduce potential stress related to a driver concen-
trating on a broadcasted topic knowing s/he would
be unable to replay. The radio presents informa-
tion from the covered domains continuously. The
stream of presented information also serves as a
natural way of teaching the user about the sup-
ported domains. By hearing that news are read
as part of the radio stream, the user finds out that
news is one category that can be requested by
voice commands.
</bodyText>
<sectionHeader confidence="0.990363" genericHeader="method">
4 System Description
</sectionHeader>
<bodyText confidence="0.99986975">
Although previous WOZ tests (Macek et al.,
2013) were sufficient to collect the initial user
feedback, their flexibility and fidelity was limited.
The prototype described in this paper is intended
for testing of concepts and for conducting realistic
usability tests in a car. The implemented prototype
is a fully functioning system, although still with a
limited feature set.
</bodyText>
<subsectionHeader confidence="0.997705">
4.1 Architecture
</subsectionHeader>
<bodyText confidence="0.999844888888889">
The overall architecture of the system is depicted
in Figure 1. The system collects inputs both from
manual controls (steering wheel buttons, rotary
knob) and from ASR (voice commands). Multi-
ple on-line and off-line data sources provide con-
tent. While driving, GPS information about the
car position is used together with an optional cal-
culated route and POI data to plan overall broad-
casting. The core of the Radio One system (see
</bodyText>
<figureCaption confidence="0.766387">
Figure 2: Radio One architecture.
Figure 2) is the scheduler. The scheduler is re-
</figureCaption>
<bodyText confidence="0.9972554">
sponsible for planning both the type of content
and the time of its presentation. The content as-
sociated with higher expected cognitive load (e.g.
emails or calendar) can be planned for segments
of the journey that have low driving difficulty (e.g.
straight highway). The overall architecture aims
to be highly configurable and context-aware to be
able to produce heterogeneous content based on
differing user preferences and changing state of
the environment.
</bodyText>
<subsectionHeader confidence="0.972802">
4.2 Controls
</subsectionHeader>
<bodyText confidence="0.999319357142857">
Multiple button configurations are possible, rang-
ing from a “speech button-only” setup to several
buttons used to provide quick access to frequently
used functions. For in-car setups, the availabil-
ity of buttons is often limited. A configuration of
3 buttons in a row (in addition to speech button)
can be used to let the user navigate back and forth
using the two outer buttons and request more de-
tails or pause/resume the broadcast with a central
button. Both “per-item” (e.g. single email, song
or news title) and “per-bundle” navigation (“bun-
dle” being a coherent group of affiliated items, e.g.
emails) can be supported by short and long presses
of the navigation buttons. Other functions would
</bodyText>
<figureCaption confidence="0.999045">
Figure 1: Radio One big picture.
</figureCaption>
<page confidence="0.989246">
54
</page>
<bodyText confidence="0.999920578947369">
typically be available through voice commands
only, or also through a touch interface where avail-
able (e.g. on a cell phone or in a parked car).
Alternatively to the buttons on the steering
wheel, a rotary knob can be placed on the side of
the driver’s seat (depicted on the left of Figure 3).
Usually, a single knob press initiates speech input,
while turning the knob navigates back and forth in
items. Per-bundle navigation can be triggered ei-
ther by using greater turns or by turning the knob
while pressed.
The voice control subsystem is hybrid with
speech recognition and understanding being done
both remotely and locally. This way, functions
are available even when off-line while benefit-
ing from improved accuracy and coverage of the
server models when on-line. Free-form commands
are understood (e.g. “email” or “would you read
my email please”).
</bodyText>
<subsectionHeader confidence="0.999194">
4.3 Content and Presentation
</subsectionHeader>
<bodyText confidence="0.999979745098039">
Two modes of operation are implemented. The
off-line mode permits testing with locally saved
data or data specifically tailored for various exper-
iments. The on-line mode collects data (e.g. email,
calendar, news) periodically from the network and
presents it at appropriate times.
News are collected periodically from config-
urable network sources and grouped by topic. Two
forms of news presentation are implemented. A
shorter version is used during news summaries.
A longer version can be requested by an explicit
voice request like “tell me more” or by pressing a
“details” button.
Emails undergo elementary pre-processing to
improve their suitability for being read out loud.
Emails longer than a configured threshold are
shortened at the end of the sentence. Email his-
tories are also skipped. The user can request a full
version of the email using a voice command like
“read the whole message”.
Moderator commentaries are tailored to the
content they accompany. We use a set of hand-
crafted prompt templates for natural language gen-
eration. Prompt templates are grouped according
to the context that triggers them into pools of al-
ternatives, from which prompts are selected ran-
domly while avoiding repetitions. Moderators can
announce upcoming content or refer to content
that just finished playing. Prompt templates often
contain variables referring to various properties of
the neighbouring content (e.g. name of the preced-
ing song or topic of the upcoming news).
Information is presented as a story, typically
with a brief summary-of-the-broadcast at the be-
ginning. This order can be interrupted by sudden
events (e.g. emails arriving, hot breaking news,
POI announcements) with proper moderator com-
ments to indicate what is happening. The infor-
mation is grouped together in bundles of the same
type (e.g. email summaries are not mixed with cal-
endar or news items). Typical in-car presentation
order starts with music to allow the listener to get
concentrated on driving. Then a summary is pro-
vided followed by blocks of music and informa-
tion bundles.
In contrast to our earlier WOZ study, the cur-
rent version of the prototype does not present any
visual information as we focus on the driving sce-
nario. The previous WOZ study indicated that this
information was distracting to the driver and not
much valued by the participants.
</bodyText>
<figureCaption confidence="0.995984">
Figure 3: Alternative user interface controls
</figureCaption>
<subsectionHeader confidence="0.983243">
4.4 Implementation
</subsectionHeader>
<bodyText confidence="0.998687666666667">
The prototype is implemented in Java. It uses
a local text-to-speech system (TTS). We use the
Nuance Vocalizer premium voices to provide the
best available TTS quality. Current implementa-
tion is primarily in English (moderators and their
comments) although playback of content in other
languages (currently Czech) is supported as well.
Language detection is done automatically (Cy-
bozu Labs, 2014). The system was tested both
on a PC (Windows 7) and on tablets and phones
(Android, Windows 8). Emails are currently re-
trieved using the IMAP protocol so various email
providers can be used. News are currently down-
loaded from the Feedzilla (Feedzilla, 2014) REST
API and from other RSS feeds.
Calendar events are retrieved from the user’s
Google Calendar account. The radio automati-
cally announces individual upcoming events and
</bodyText>
<page confidence="0.996742">
55
</page>
<bodyText confidence="0.99996984">
also plays summaries about the remaining events
of the day (also can be requested by voice).
Like real radios, we use characteristic earcons
and jingles to introduce particular types of infor-
mation (e.g. email, news or calendar) and other
sounds to separate individual information items
from each other (e.g. earcons between emails or
news titles).
For testing purposes we use infra-red remote
control buttons (see right hand part of Figure 3)
mounted to the steering wheel, with key events re-
ceived by a special purpose hardware and passed
to Radio One via Bluetooth.
We use either an AUX cable or a radio FM
transmitter to integrate with the car’s audio sys-
tem. The current prototype implements music
playback, presents news, email, weather reports
and calendar summaries. Initial work was done
on presenting POIs near the current location. An
arbitrary list of MP3 files can be used as a source
of music. Ideally, user’s own collection of music
is used during the tests. ID3 tags of music files are
utilized in the process of generating voice prompts
spoken by moderators as part of their small talk
(e.g. “This was a song by the Beatles”).
</bodyText>
<sectionHeader confidence="0.841751" genericHeader="method">
5 Usability testing
</sectionHeader>
<bodyText confidence="0.999984901960785">
Initially, a WOZ experiment was conducted with-
out having the system implemented. Test subjects
drove a low-fidelity driving simulator while lis-
tening to a radio stream broadcasted by the wiz-
ard, who played pre-recorded audio-visual snip-
pets trying to satisfy user’s requests. We described
results of this experiment previously in (Macek
et al., 2013). The main feedback from this ex-
periment was that the users perceived the quality
of synthesized speech sufficiently. The visual in-
formation shown by the wizard contained mostly
static pictures or short texts in large fonts. Most
of the users did not find the screen useful in this
setup. Therefore the current radio prototype is
screen-less. Two groups of users could be iden-
tified. The first one used the system in the same
way as a standard radio, with minimal interaction.
The other group preferred to be “in control” and
used both buttons and voice commands to ask for
specific content.
Multiple informal tests were conducted by 4 test
drivers in real traffic. More extensive testing is still
in preparation. The feedback collected so far was
positive, indicating that the TTS quality was suf-
ficient. Even with a small number of test drivers
it became apparent that the roles of customization
and automatic adaptation to preferences of a spe-
cific user will be crucial.
Information-heavy content like certain kinds of
news was sometimes considered difficult to lis-
ten to while driving, which was in part due to
all of the test drivers being non-native speakers
of English. Adding jingles to separate the pre-
sented news items from one another improved the
perception of the system significantly. The news
feeds used by the prototype were originally not
intended for audio presentation, which does im-
pact their understandability, but the effect does not
seem to be major. Lighter content like weather
forecasts and calendar announcements were con-
sidered easy to understand.
The test drivers considered it important to be
able to use their personal data (news, email, mu-
sic). This motivated the inclusion of information
sources in languages other than English and the
addition of automatic language identification so as
to select proper TTS voices. The fact that multi-
ple languages were present in the broadcast was
not perceived adversely. One shortcoming of the
tested system was still a low variability of moder-
ators’ comments.
</bodyText>
<sectionHeader confidence="0.999358" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999980411764706">
We presented a work-in-progress demonstration
prototype of a novel method for presenting in-
formation to users on-the-go. A preceding WOZ
study indicated promising user acceptance which
was also confirmed using the described prototype.
When comparing with existing systems, the sys-
tem presented here has much lower requirements
on communication bandwidth, requires less hu-
man work for content authoring and permits a
higher level of personalization. Amount of inter-
activity depends very much on user preferences.
In future work we would like to pay attention
to evaluation of user feedback on more extensive
usability tests. It will be interesting to see to what
extent the user will opt for active interaction with
the system and for the particular interaction tech-
niques.
</bodyText>
<sectionHeader confidence="0.998874" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9642495">
The presented work is part of an IBM and Nuance
joint research project.
</bodyText>
<page confidence="0.995541">
56
</page>
<sectionHeader confidence="0.99589" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99985312">
Harman International Aha. 2014. Aha radio web-
site. Retrieved from http://www.aharadio.
com/.
BMW. 2014. Bmw connecteddrive ser-
vices. Retrieved from http://www.bmw.
com/com/en/insights/technology/
connecteddrive/2013/services_apps/
bmw_connecteddrive_services.html.
Inc. Cybozu Labs. 2014. Language detection li-
brary for java. Retrieved from https://code.
google.com/p/language-detection/.
Feedzilla. 2014. Feedzilla -news feed directory. Re-
trieved from http://www.feedzilla.com/.
Ford. 2014. Sync with myford touch. Retrieved
from http://www.ford.com/technology/
sync/.
Tom´aˇs Macek, Tereza Kaˇsparov´a, Jan Kleindienst,
Ladislav Kunc, Martin Labsk´y, and Jan Vystrˇcil.
2013. Mostly passive information delivery in a
car. In Proceedings of the 5th International Confer-
ence on Automotive User Interfaces and Interactive
Vehicular Applications, AutomotiveUI ’13, pages
250–253, New York, NY, USA. ACM.
Inc. Stitcher. 2014. Stitcher website. Retrieved from
http://www.stitcher.com/.
</reference>
<page confidence="0.999134">
57
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.134884">
<title confidence="0.991769">Mostly Passive Information Delivery – a Prototype</title>
<author confidence="0.929331">J Vystrˇcil</author>
<author confidence="0.929331">T Macek</author>
<author confidence="0.929331">D Luksch</author>
<author confidence="0.929331">M Labsk´y</author>
<author confidence="0.929331">L Kunc</author>
<author confidence="0.929331">J Kleindienst</author>
<author confidence="0.929331">T</author>
<affiliation confidence="0.562283333333333">IBM Prague Research and Development V Parku 2294/4, 148 00 Prague Czech</affiliation>
<address confidence="0.333024">vystrcil, tomas macek, david.luksch, martin</address>
<email confidence="0.549975">kunc1,jankle,</email>
<abstract confidence="0.998627739130435">In this paper we introduce a new UI paradigm that mimics radio broadcast along with a prototype called Radio One. The approach aims to present useful information from multiple domains to mobile users (e.g. drivers on the go or cell phone users). The information is served in an entertaining manner in a mostly passive style – without the user having to ask for it– as in real radio broadcast. The content is generated on the fly by a machine and integrates a mix of personal (calendar, emails) and publicly available but customized information (news, weather, POIs). Most of the spoken audio output is machine synthesized. The implemented prototype permits passive listening as well as interaction using voice commands or buttons. Initial feedback gathered while testing the prototype while driving indicates good acceptance of the system and relatively low distraction levels.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Harman International Aha</author>
</authors>
<date>2014</date>
<note>Aha radio website. Retrieved from http://www.aharadio. com/.</note>
<contexts>
<context position="2252" citStr="Aha, 2014" startWordPosition="363" endWordPosition="364">rd-of-Oz (WOZ) technique (Macek et al., 2013). Here we describe the early prototype implementation of the system and summarize initial feedback collected during informal testing. 2 Related Work Applications that produce customized audio streams can be found in many online music delivery services including Spotify, Pandora, or iTunes. While the above services often focus on music only, other providers (BBC, CNN) publish their spoken content in the form of podcasts. Spoken audio used for podcasts is often recorded by professional speakers as opposed to the concept presented here. The Aha radio (Aha, 2014) provides various thematic streams of information including music, news, social network updates or Points of Interest (POI). Content can be selected manually by switching between channels. Similar strategies are utilized by Stitcher (Stitcher, 2014) and other services. The concept presented here attempts insted to preselect the content automatically and on the fly while preserving the option to request the content explicitely. Many in-car infotainment systems adopted the use of voice control and utilize information directly from on-line services; e.g. (BMW, 2014) and (Ford, 2014). All of the a</context>
</contexts>
<marker>Aha, 2014</marker>
<rawString>Harman International Aha. 2014. Aha radio website. Retrieved from http://www.aharadio. com/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>BMW</author>
</authors>
<title>Bmw connecteddrive services. Retrieved from http://www.bmw. com/com/en/insights/technology/ connecteddrive/2013/services_apps/ bmw_connecteddrive_services.html.</title>
<date>2014</date>
<contexts>
<context position="2821" citStr="BMW, 2014" startWordPosition="446" endWordPosition="447">presented here. The Aha radio (Aha, 2014) provides various thematic streams of information including music, news, social network updates or Points of Interest (POI). Content can be selected manually by switching between channels. Similar strategies are utilized by Stitcher (Stitcher, 2014) and other services. The concept presented here attempts insted to preselect the content automatically and on the fly while preserving the option to request the content explicitely. Many in-car infotainment systems adopted the use of voice control and utilize information directly from on-line services; e.g. (BMW, 2014) and (Ford, 2014). All of the abovementioned applications use mobile data connection to deliver audio stream (as opposed to text) to the user. This can lead to large data downloads and potentially to high bills from mobile network providers. 3 Radio One Concept Radio One mimics radio broadcast by generating infotainment content on the fly. Unlike real radios, Radio One customizes its content to the particular listener and should even adapt automatically while the user interacts with it. In addition to the content typically played by radios, the synthetic content also includes private informati</context>
</contexts>
<marker>BMW, 2014</marker>
<rawString>BMW. 2014. Bmw connecteddrive services. Retrieved from http://www.bmw. com/com/en/insights/technology/ connecteddrive/2013/services_apps/ bmw_connecteddrive_services.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cybozu Labs</author>
</authors>
<title>Language detection library for java. Retrieved from https://code.</title>
<date>2014</date>
<tech>google.com/p/language-detection/.</tech>
<contexts>
<context position="11009" citStr="Labs, 2014" startWordPosition="1756" endWordPosition="1757">n the driving scenario. The previous WOZ study indicated that this information was distracting to the driver and not much valued by the participants. Figure 3: Alternative user interface controls 4.4 Implementation The prototype is implemented in Java. It uses a local text-to-speech system (TTS). We use the Nuance Vocalizer premium voices to provide the best available TTS quality. Current implementation is primarily in English (moderators and their comments) although playback of content in other languages (currently Czech) is supported as well. Language detection is done automatically (Cybozu Labs, 2014). The system was tested both on a PC (Windows 7) and on tablets and phones (Android, Windows 8). Emails are currently retrieved using the IMAP protocol so various email providers can be used. News are currently downloaded from the Feedzilla (Feedzilla, 2014) REST API and from other RSS feeds. Calendar events are retrieved from the user’s Google Calendar account. The radio automatically announces individual upcoming events and 55 also plays summaries about the remaining events of the day (also can be requested by voice). Like real radios, we use characteristic earcons and jingles to introduce p</context>
</contexts>
<marker>Labs, 2014</marker>
<rawString>Inc. Cybozu Labs. 2014. Language detection library for java. Retrieved from https://code. google.com/p/language-detection/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Feedzilla</author>
</authors>
<title>Feedzilla -news feed directory.</title>
<date>2014</date>
<note>Retrieved from http://www.feedzilla.com/.</note>
<contexts>
<context position="11267" citStr="Feedzilla, 2014" startWordPosition="1800" endWordPosition="1801">It uses a local text-to-speech system (TTS). We use the Nuance Vocalizer premium voices to provide the best available TTS quality. Current implementation is primarily in English (moderators and their comments) although playback of content in other languages (currently Czech) is supported as well. Language detection is done automatically (Cybozu Labs, 2014). The system was tested both on a PC (Windows 7) and on tablets and phones (Android, Windows 8). Emails are currently retrieved using the IMAP protocol so various email providers can be used. News are currently downloaded from the Feedzilla (Feedzilla, 2014) REST API and from other RSS feeds. Calendar events are retrieved from the user’s Google Calendar account. The radio automatically announces individual upcoming events and 55 also plays summaries about the remaining events of the day (also can be requested by voice). Like real radios, we use characteristic earcons and jingles to introduce particular types of information (e.g. email, news or calendar) and other sounds to separate individual information items from each other (e.g. earcons between emails or news titles). For testing purposes we use infra-red remote control buttons (see right hand</context>
</contexts>
<marker>Feedzilla, 2014</marker>
<rawString>Feedzilla. 2014. Feedzilla -news feed directory. Retrieved from http://www.feedzilla.com/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ford</author>
</authors>
<title>Sync with myford touch.</title>
<date>2014</date>
<note>Retrieved from http://www.ford.com/technology/ sync/.</note>
<contexts>
<context position="2838" citStr="Ford, 2014" startWordPosition="449" endWordPosition="450">The Aha radio (Aha, 2014) provides various thematic streams of information including music, news, social network updates or Points of Interest (POI). Content can be selected manually by switching between channels. Similar strategies are utilized by Stitcher (Stitcher, 2014) and other services. The concept presented here attempts insted to preselect the content automatically and on the fly while preserving the option to request the content explicitely. Many in-car infotainment systems adopted the use of voice control and utilize information directly from on-line services; e.g. (BMW, 2014) and (Ford, 2014). All of the abovementioned applications use mobile data connection to deliver audio stream (as opposed to text) to the user. This can lead to large data downloads and potentially to high bills from mobile network providers. 3 Radio One Concept Radio One mimics radio broadcast by generating infotainment content on the fly. Unlike real radios, Radio One customizes its content to the particular listener and should even adapt automatically while the user interacts with it. In addition to the content typically played by radios, the synthetic content also includes private information like calendar </context>
</contexts>
<marker>Ford, 2014</marker>
<rawString>Ford. 2014. Sync with myford touch. Retrieved from http://www.ford.com/technology/ sync/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tom´aˇs Macek</author>
<author>Tereza Kaˇsparov´a</author>
<author>Jan Kleindienst</author>
<author>Ladislav Kunc</author>
<author>Martin Labsk´y</author>
<author>Jan Vystrˇcil</author>
</authors>
<title>Mostly passive information delivery in a car.</title>
<date>2013</date>
<booktitle>In Proceedings of the 5th International Conference on Automotive User Interfaces and Interactive Vehicular Applications, AutomotiveUI ’13,</booktitle>
<pages>250--253</pages>
<publisher>ACM.</publisher>
<location>New York, NY, USA.</location>
<marker>Macek, Kaˇsparov´a, Kleindienst, Kunc, Labsk´y, Vystrˇcil, 2013</marker>
<rawString>Tom´aˇs Macek, Tereza Kaˇsparov´a, Jan Kleindienst, Ladislav Kunc, Martin Labsk´y, and Jan Vystrˇcil. 2013. Mostly passive information delivery in a car. In Proceedings of the 5th International Conference on Automotive User Interfaces and Interactive Vehicular Applications, AutomotiveUI ’13, pages 250–253, New York, NY, USA. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stitcher</author>
</authors>
<date>2014</date>
<note>Stitcher website. Retrieved from http://www.stitcher.com/.</note>
<contexts>
<context position="2501" citStr="Stitcher, 2014" startWordPosition="397" endWordPosition="398"> can be found in many online music delivery services including Spotify, Pandora, or iTunes. While the above services often focus on music only, other providers (BBC, CNN) publish their spoken content in the form of podcasts. Spoken audio used for podcasts is often recorded by professional speakers as opposed to the concept presented here. The Aha radio (Aha, 2014) provides various thematic streams of information including music, news, social network updates or Points of Interest (POI). Content can be selected manually by switching between channels. Similar strategies are utilized by Stitcher (Stitcher, 2014) and other services. The concept presented here attempts insted to preselect the content automatically and on the fly while preserving the option to request the content explicitely. Many in-car infotainment systems adopted the use of voice control and utilize information directly from on-line services; e.g. (BMW, 2014) and (Ford, 2014). All of the abovementioned applications use mobile data connection to deliver audio stream (as opposed to text) to the user. This can lead to large data downloads and potentially to high bills from mobile network providers. 3 Radio One Concept Radio One mimics r</context>
</contexts>
<marker>Stitcher, 2014</marker>
<rawString>Inc. Stitcher. 2014. Stitcher website. Retrieved from http://www.stitcher.com/.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>