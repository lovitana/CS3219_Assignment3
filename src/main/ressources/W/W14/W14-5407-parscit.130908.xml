<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000689">
<title confidence="0.761564">
Key Event Detection in Video using ASR and Visual Data
</title>
<note confidence="0.477567333333333">
Niraj Shrestha Aparna N. Venkitasubramanian Marie-Francine Moens
KU Leuven, Belgium
{niraj.shrestha, Aparna.NuraniVenkitasubramanian,
</note>
<email confidence="0.871026">
Marie-Francine.Moens}@cs.kuleuven.be
</email>
<sectionHeader confidence="0.991781" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9997237">
Multimedia data grow day by day which makes it necessary to index them automatically and effi-
ciently for fast retrieval, and more precisely to automatically index them with key events. In this
paper, we present preliminary work on key event detection in British royal wedding videos using
automatic speech recognition (ASR) and visual data. The system first automatically acquires
key events of royal weddings from an external corpus such as Wikipedia, and then identifies
those events in the ASR data. The system also models name and face alignment to identify the
persons involved in the wedding events. We compare the results obtained with the ASR output
with results obtained with subtitles. The error is only slightly higher when using ASR output in
the detection of key events and their participants in the wedding videos compared to the results
obtained with subtitles.
</bodyText>
<sectionHeader confidence="0.998801" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99997524">
With the increase of multimedia data widely available on the Web and in social media, it becomes
necessary to automatically index the multimedia resources with key events for information search and
mining. For instance, it is not possible to manually index all the frames of a video. Automatically
indexing multimedia data with key events makes the retrieval and mining effective and efficient.
Event detection is an important and current research problem in the field of multimedia information
retrieval. Most of the event detection in video is done by analyzing the visual features using manually
transcribed data. In this paper, we propose key event detection in British royal wedding videos using
automatic speech recognition (ASR) data and where possible also to recognize the actors involved in the
recognized events using visual and textual data. An event is something that happens at a certain moment
in time and at a certain location possibly involving different actors. Events can be quite specific as in this
case the key events are the typical events that make up a royal wedding scenario. For example, events like
’design of cake/dress/bouquet’, ’couple heading to Buckingham palace’, ’appearing on balcony’ etc. are
key events in British royal wedding video. Figure 1 shows an example of a frame containing an event with
its actors, together with the associated subtitle and ASR output. While most works in this domain have
focussed on clean textual content such as manual transcripts or subtitles, which are difficult to acquire, we
use the output of an ASR system. While the event detection and name-face alignment problem by itself
is already quite difficult, the nature of the ASR text adds an additional complexity. ASR data is noisy
and inaccurate, it does not contain some parts of the actual spoken text, and does not contain sentence
boundaries. Figure 2 illustrates this problem. For the key events, the system first acquires the necessary
knowledge from external corpora - in our case Wikipedia articles associated with royal weddings. Then
the system identifies the key events in the ASR data. The system also models name and face alignment
to identify the persons involved in the wedding events. We perform named entity recognition in the text
associated with a window of frames to first generate a noisy label for the faces occurring in the frames
and this rough alignment is refined using an Expectation-Maximization (EM) algorithm. We compare
the results obtained with the ASR output with results obtained with subtitles. The error is only slightly
</bodyText>
<footnote confidence="0.9846615">
This work is licenced under a Creative Commons Attribution 4.0 International License. License details: http://
creativecommons.org/licenses/by/4.0/
</footnote>
<page confidence="0.9905">
46
</page>
<note confidence="0.795799">
Proceedings of the 25th International Conference on Computational Linguistics, pages 46–53,
Dublin, Ireland, August 23-29 2014.
</note>
<bodyText confidence="0.817127333333333">
Sub-title: ”Outside, fully 150,000 people with unbounded enthusiasm acclaimed Princess Margaret and
her husband when they appeared on the balcony.... ”
ASR: ”outside only a hundred and 50 people on TV and using it as a ... ”
</bodyText>
<figureCaption confidence="0.998683">
Figure 1: An example of a frame containing an event with associated subtitle and ASR output
</figureCaption>
<bodyText confidence="0.999821">
higher when using ASR output in the detection of key events and their participants in the wedding videos
compared to the results obtained with subtitles. The methodology that we propose can be applied for the
detection of many different types of video events.
</bodyText>
<sectionHeader confidence="0.999423" genericHeader="introduction">
2 Related work
</sectionHeader>
<bodyText confidence="0.999920307692308">
Event detection has some relationship with Topic Detection and Tracking (TDT) and with concept de-
tection. TDT regards the detection and tracking over time of the main event of a news story and is a
challenging problem in the field of text and visual analysis. Although widely studied in text (Allan,
2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection
in video is still not well studied. An event in this context is usually broader in scope than the events
we want to recognize in wedding videos in this paper. In the multimedia research community, most of
the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006)
rather than event detection. A concept detection task is different from event detection as a concept can
be defined as any object or specific configuration of objects. Any frame then can be labelled with some
concept descriptor (e.g., church, cake, etc.). While in an event, there is a start and end time in between
which something happens, and in video, an event is represented by a sequence of frames.
Event detection is a challenging problem which is not well studied. Only few event detection systems
that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize
specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g.,
unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997),
soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008)
developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework
that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) de-
veloped an algorithm based on multiple local monitors which collect low-level statistics to detect certain
types of unusual events in surveillance video.
Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify
events in video and the event detection is performed with a supervised learning method, where a model
is trained on manually annotated examples of known events. In this paper, we propose a novel idea in
which the system learns events from an external corpus like Wikipedia and identifies those events in the
ASR or subtitle data of the video. In addition, we identify the persons involved in an event based on the
analysis of visual and textual data.
</bodyText>
<page confidence="0.999">
47
</page>
<figureCaption confidence="0.996591">
Figure 2: An example showing sub-title vs. ASR data
</figureCaption>
<sectionHeader confidence="0.996386" genericHeader="method">
3 Methodology
</sectionHeader>
<bodyText confidence="0.9886756">
The main objective of this work is to identify and index key events in videos using ASR data along with
key actors involved in the event. We start by identifying key events related to a certain domain, using
external corpora. In addition, the proposed method involves pre-processing of the textual and visual data.
At 11.30, Elizabeth entered the abbey on her father’s arm, but they did not head straight down the aisle
as expected.
</bodyText>
<figureCaption confidence="0.886549">
Figure 3: Sequence of frames showing the anchor talking about an event of the wedding, but there is no
visual appearance of the event.
</figureCaption>
<subsectionHeader confidence="0.999811">
3.1 Acquiring background knowledge
</subsectionHeader>
<bodyText confidence="0.99888">
Our approach for identifying key events in weddings exploits external text corpora. We use two corpora:
</bodyText>
<listItem confidence="0.749951">
1. A genre-specific corpus: a set of pages specific to the topic, for example, from Wikipedia - to
identify events associated with the topic.
</listItem>
<page confidence="0.952598">
48
</page>
<bodyText confidence="0.965435647058824">
2. A generic corpus, used to weigh the events identified in the genre-specific corpus.
The process is as follows. We first collect content from Wikipedia articles relevant for Britain’s royal
weddings1 in the form of nine documents. These articles include both pages related to weddings, such as
these of Diana and Charles, that were mentioned in our test videos as well as pages about other British
royal weddings not shown in the videos, such as the wedding of Kate and William. This set of articles
formed our wedding corpus for learning typical wedding events. The generic corpus is formed by all
English Wikipedia articles.
From each document of this corpus we extract events together with their arguments (subject and object
arguments) using a state-of-the-art event annotator2. This tool uses linguistic features such as the results
of a dependency parse of a sentence, to detect the events and their arguments in a text. Next, we use
a data mining technique to find frequent word patterns that signal the event and its arguments in the
wedding articles, we keep each event that has sufficient support in the wedding articles and weigh it by
a factor that is inversely proportional to the frequency of this event in the more general corpus. We keep
the N highest weighted events from the obtained ranked list, where N is determined by whether we want
to keep the most common wedding events or include also more rare events. The list obtained has items
such as ‘to announce engagement’, ‘to make dress’, ‘to make cake’ etc, which are typical for weddings.
We report here on preliminary work and acknowledge that the methodology can be largely refined.
</bodyText>
<subsectionHeader confidence="0.99983">
3.2 Detecting person names
</subsectionHeader>
<bodyText confidence="0.9998912">
In royal wedding videos, there are many persons who appear in the video like anchor, interviewee, the
persons married or to be married, the dress designer, the bouquet designer, the cake maker, the friends
etc. As in this preliminary work we are only interested in the brides and bridegrooms (which are also the
most important persons when indexing the video) we use a gazetteer with their names for recognizing
the names in the texts.
</bodyText>
<subsectionHeader confidence="0.999772">
3.3 Detecting the faces of persons
</subsectionHeader>
<bodyText confidence="0.999959833333333">
In the video key frames are extracted at the rate of 1 frame per second using (ffmpeg, 2012), which
ensures that no faces appearing in the video are omitted. To detect the faces in the video, a face detector
tool from (Bradski, 2000) is used. Next, we extract the features from the faces detected in the video.
Although there are several dedicated facial feature extraction methods such as (Finkel et al., 2005),(Strehl
and Ghosh, 2003), in this implementation, we use a simple bag-of-visual-words model (Csurka et al.,
2004).
Once feature vectors are built, clustering of the bounding boxes of the detected faces is performed.
Each object is, then, compared to the cluster centers obtained and is replaced with the closest center.
The clustering is done using Elkan’s k-means algorithm (Jain and Obermayer, 2010) which produces the
same results as the regular k-means algorithm, but is computationally more efficient. This accelerated
algorithm eliminates some distance calculations by applying the triangle inequality and by keeping track
of lower and upper bounds for distances between points and centers. This algorithm, however, needs the
number k of clusters present in the data. Since we are primarily interested in the brides and bridegrooms
and since there are seven weddings shown in the video, we experiment with values of k equal to 7*2 = 14.
Although this approach very likely introduces errors in the clustering as we do not know beforehand how
many persons apart from the couple appear in the chosen key frames, it showed to be a better strategy
than trying to align all persons mentioned in the texts. The clustering is performed using an Euclidean
distance metric.
</bodyText>
<subsectionHeader confidence="0.978882">
3.4 Name and face alignment
</subsectionHeader>
<bodyText confidence="0.999961">
If a key frame contains a face, then we identify the corresponding ASR or subtitle data that co-occur in a
fixed time window with this frame. Further, the names occurring in the textual data are listed as possible
names for the frame. As a result, it is possible that an entity mentioned in the text is suggested for several
</bodyText>
<footnote confidence="0.999979">
1http://en.wikipedia.org/wiki/Category:British royal weddings
2http://ariadne.cs.kuleuven.be/TERENCEStoryService/
</footnote>
<page confidence="0.99926">
49
</page>
<tableCaption confidence="0.999428">
Table 1: Names and faces alignment results on subtitle vs. ASR data on events
</tableCaption>
<table confidence="0.988684">
Subtitle ASR
P R F1 P R F1
Textual 38.095 21.622 27.586 36.585 17.857 24
EM 41.304 25.676 31.667 40.426 22.619 29.008
</table>
<tableCaption confidence="0.684348333333333">
Table 2: WinDiff score on event identification on subtitle vs. ASR data on the union setting
Subtitle ASR
11.06 13.80
</tableCaption>
<bodyText confidence="0.99318325">
key frames. However, when there is no corresponding text, or when the text does not contain person
entities, no name is suggested for the key frame.
Name and face alignment in royal wedding video is difficult and complicated since the video contains
many other faces of persons mentioned above. Sometimes the anchor or designer talks about the couple
involved in the wedding, but there is no appearance of this couple in the corresponding video key frame
as shown in figure 3.
We minimize this problem of name and face alignment by using the EM algorithm cited in (Pham et
al., 2010). Alignment is the process of mapping the faces in the video to the names mentioned in the
textual data. For each frame, the most probable alignment scheme has to be chosen from all possible
schemes. The EM algorithm has an initialization step followed by the iterative E- and M-steps. The
E-step estimates the likelihood of each alignment scheme for a frame, while the M-step updates the
probability distribution based on the estimated alignments over all key frames of the video.
</bodyText>
<subsectionHeader confidence="0.976431">
3.5 Event identification in subtitle and ASR data with person involvement (if any)
</subsectionHeader>
<bodyText confidence="0.999951714285714">
Once the system has learned the events from the Wikipedia data, it identifies the events from the subtitles.
The process is as follow: the system scans each subtitle for the key words from the event list. If the key
word appears in the subtitle data, then it is treated as the occurrence of the event and stores the set of
frames that co-occur with that subtitle. The name and face alignment module already might have yielded
a list of names present in this subtitle if there is any person involved. If that is the case, then the names
are assigned to the events identified.
The same process is repeated using ASR data.
</bodyText>
<sectionHeader confidence="0.998879" genericHeader="method">
4 Experimental setup
</sectionHeader>
<bodyText confidence="0.656814">
In this section, we describe the dataset, experimental setup and the metrics used for evaluation.
</bodyText>
<subsectionHeader confidence="0.964434">
4.1 Datasets and ground truth annotations
</subsectionHeader>
<bodyText confidence="0.999701153846154">
The data used in our experiments is the DVD on Britain’s Royal Weddings published by the BBC. The
duration of this video is 116 minutes at a frame rate of 25 frames per second, and the frame resolution
is 720x576 pixels. Frames are extracted at the rate of one frame per second using the ffmpeg tool
(ffmpeg, 2012). Faces in the frames are annotated manually using the Picasa tool for building the ground
truth for evaluation. This tool is very handy and user-friendly to tag the faces. We have found that
there are 69 persons including British wedding couples in the video. The subtitles came along with the
DVD which are already split into segments of around 3 seconds. We use the (FBK, 2013) system to
obtain the ASR data of the videos. Since the (FBK, 2013) system takes only sound (.mp3 file) as input,
we have converted the video into a mp3 file using (ffmpeg, 2012). The obtained ASR data is then in
XML format without any sentence boundaries so we have converted the ASR data into segments in the
range of three seconds, which is standard when presenting subtitles in video. It is clear that the ASR
transcription contains many words that are incorrectly transcribed. It is also visible that the ASR system
does not recognize or misspells many words from the actual speech. As mentioned above, we have built
</bodyText>
<page confidence="0.99059">
50
</page>
<bodyText confidence="0.999861">
a gazetteer of the couples’ names. A set of events are recognized by our system as being important in
the context of weddings. To evaluate the quality of these events, the events in the video were annotated
by two annotators independently. This annotation includes the actual event, and the start and end times
of the event. These two sets with annotations form the groundtruth. To be able to compare the system
generated events with the ground truth events, we adopt a two-step approach. First, we combine the
corresponding ground truth entries from different annotators into one sequence of frames. Suppose one
entry in a ground truth file (GT(a)) by one annotator contains the following start (xa) and end (ya)
time range: GT(a) : [xa, ya], and the corresponding entry in the other ground truth file (GT (b)) (by the
second annotator) contains the following start (xb) and end (yb) time range: GT (b) : [xb, yb]. Merging
of the ground truth event ranges can be done in different ways, but we report here on the union of the
two ranges.
</bodyText>
<equation confidence="0.690321">
GT(a) U GT(b) = [min(xa, xb), max(ya, yb)] (1)
</equation>
<subsectionHeader confidence="0.991886">
4.2 Evaluation Metrics
</subsectionHeader>
<bodyText confidence="0.999869333333333">
Let FL be the final list of name and face alignment retrieved by our system for all the faces detected in
all frames, and GL the complete ground truth list. To evaluate the name and face alignment task, we use
standard precision (P), recall (R) and F1 scores for evaluation:
</bodyText>
<equation confidence="0.998987">
P _ |FL ∩ GL |R _ |FL ∩ GL |F1 _ 2 · P · R
|FL ||GL |P + R
</equation>
<bodyText confidence="0.9993876">
To evaluate correctness of event segment boundaries, precision and recall are too strict since they
penalize boundaries placed very close to the ground truth boundaries. We use the WindowDiff (Pevzner
and Hearst, 2002) metric that measures the difference between the ground truth segment GT and the
segment 5E found by the machine originally designed for text segmentation. For our scenario, this
metric is defined as follows:
</bodyText>
<equation confidence="0.8806636">
M−k (|b(GTi, GTi+k) − b(5Ei, 5Ei+k) |&gt; 0) (2)
1
WD(GT, 5E) =
M − k
i=1
</equation>
<bodyText confidence="0.999923">
where M = 7102, is the number of frames extracted, k = 1, is the window size and b(i, j) represents
the number of boundaries between frame indices i and j.
</bodyText>
<sectionHeader confidence="0.997939" genericHeader="evaluation">
5 Results
</sectionHeader>
<figureCaption confidence="0.9347725">
Figure 4: Events learned from the Wikipedia data and their identification in the subtitles and ASR by the
system
</figureCaption>
<page confidence="0.99445">
51
</page>
<subsectionHeader confidence="0.984386">
5.1 Evaluation of the extraction of wedding events from Wikipedia
</subsectionHeader>
<bodyText confidence="0.99968775">
Figure 4 shows which key events typical for royal weddings the system has learned from Wikipedia data
and how it found these events in the subtitles and the ASR data. It is seen from figure 4 that the system
could not learn many events that are important to wedding events, but the system recognized the events
that it has learned quite accurately in the subtitles and ASR data.
</bodyText>
<subsectionHeader confidence="0.997681">
5.2 Evaluation of the event segmentation and recognition
</subsectionHeader>
<bodyText confidence="0.999977833333333">
Table 2 shows the results of WinDiff score obtained on subtitles versus ASR data on the union setting
discussed in 4.1. Though the error rate is more or less the same, it degrades in ASR data which is
obviously due to the different ASR errors. The error rate is increased by 2.74% in ASR data using a
window size of 1. Here a window size 1 is equivalent to one second so it corresponds to one frame.
In this case the system tries to find the event boundaries in each frame and evaluates these against the
ground truth event boundaries.
</bodyText>
<subsectionHeader confidence="0.992935">
5.3 Evaluation of the name-face alignments
</subsectionHeader>
<bodyText confidence="0.999978">
Table 1 shows the result of the name and face alignment given the detected events. Though the result
is not quite satisfactory even after applying the EM algorithm, there are many bottlenecks that need to
be tackled. Many parts of the video contain interviews. Interviewees and anchors mostly talk about the
couples that are married or are to be married, but the couples are not shown which might cause errors in
the name and face alignment.
</bodyText>
<sectionHeader confidence="0.987607" genericHeader="conclusions">
6 Conclusion and future work
</sectionHeader>
<bodyText confidence="0.999966636363636">
In this paper, we have presented ongoing research on event detection in video using ASR and visual
data. To some extent the system is able to learn key events from relevant external corpora. The event
identification process is quite satisfactory as the system learns from external corpora. If the system would
have learnt the events from external corpora good enough, it might identify events very well from subtitle
or ASR data. We are interested in improving the learning process from external corpora in further work.
Finding event boundaries in the frame sequence corresponding to a subtitle or ASR data where the event
is mentioned is still a challenging problem because an event key word might be identified in a subtitle
segment or in a sentence which actually may not correspond to what is shown the aligned frames. We
have also tried to implement name and face alignment techniques to identify persons involved in the
event. As a further improvement of our system, we need to find how to deal with the many interviews in
this type of videos which might improve the alignment of names and faces.
</bodyText>
<sectionHeader confidence="0.998604" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.996761266666667">
A. Adam, E. Rivlin, I. Shimshoni, and D. Reinitz. 2008. Robust real-time unusual event detection using multiple
fixed-location monitors. Pattern Analysis and Machine Intelligence, IEEE Transactions on, 30(3):555–560,
March.
James Allan, Stephen Harding, David Fisher, Alvaro Bolivar, Sergio Guzman-Lara, and Peter Amstutz. 2005.
Taking topic detection from evaluation to practice. In Proceedings of the 38th Annual Hawaii International
Conference on System Sciences (HICSS’05) - Track 4 - Volume 04, HICSS ’05, pages 101.1–, Washington, DC,
USA. IEEE Computer Society.
James Allan, editor. 2002. Topic Detection and Tracking: Event-based Information Organization. Kluwer Aca-
demic Publishers, Norwell, MA, USA.
G. Bradski. 2000. Opencv face detector tool. Dr. Dobb’s Journal of Software Tools. Available at http:
//opencv.org/downloads.html.
Gabriella Csurka, Christopher R. Dance, Lixin Fan, Jutta Willamowski, and Cdric Bray. 2004. Visual categoriza-
tion with bags of keypoints. In Workshop on Statistical Learning in Computer Vision, ECCV, pages 1–22.
FBK. 2013. FBK ASR transcription. Available at https://hlt-tools.fbk.eu/tosca/publish/
ASR/transcribe.
</reference>
<page confidence="0.992887">
52
</page>
<reference confidence="0.975175023809524">
ffmpeg. 2012. ffmpeg audio/video tool. Available at http://www.ffmpeg.org.
Jenny Rose Finkel, Trond Grenager, and Christopher D. Manning. 2005. Incorporating non-local information into
information extraction systems by Gibbs sampling. In Proceedings of ACL, pages 363–370.
Brijnesh J. Jain and Klaus Obermayer. 2010. Elkan’s k-means algorithm for graphs. In Proceedings of the 9th
Mexican International Conference on Artificial Intelligence: Conference on Advances in Soft Computing: Part
II, MICAI’10, pages 22–32, Berlin, Heidelberg. Springer-Verlag.
Toshio Kawashima, Kouichi Tateyama, Toshimasa Iijima, and Yoshinao Aoki. 1998. Indexing of baseball telecast
for content-based video retrieval. In ICIP (1), pages 871–874.
Ken-Hao Liu, Ming-Fang Weng, Chi-Yao Tseng, Yung-Yu Chuang, and Ming-Syan Chen. 2008. Association and
temporal rule mining for post-filtering of semantic concept detection in video. Trans. Multi., 10(2):240–251,
February.
Qiaozhu Mei and ChengXiang Zhai. 2005. Discovering evolutionary theme patterns from text: An exploration of
temporal text mining. In Proceedings of the Eleventh ACM SIGKDD International Conference on Knowledge
Discovery in Data Mining, KDD ’05, pages 198–207, New York, NY, USA. ACM.
Lev Pevzner and Marti A. Hearst. 2002. A critique and improvement of an evaluation metric for text segmentation.
Computational Linguistics, 28(1):19–36.
Phi The Pham, M. F. Moens, and T. Tuytelaars. 2010. Cross-media alignment of names and faces. IEEE Transac-
tions on Multimedia, 12(1):13–27, January.
Yong Rui, Anoop Gupta, and Alex Acero. 2000. Automatically extracting highlights for tv baseball programs. In
Proceedings of the Eighth ACM International Conference on Multimedia, MULTIMEDIA ’00, pages 105–115.
Drew D. Saur, Yap-Peng Tan, Sanjeev R. Kulkarni, and Peter J. Ramadge. 1997. Automated analysis and annota-
tion of basketball video. In Storage and Retrieval for Image and Video Databases (SPIE), pages 176–187.
Cees G. M. Snoek, Marcel Worring, Jan C. van Gemert, Jan-Mark Geusebroek, and Arnold W. M. Smeulders.
2006. The challenge problem for automated detection of 101 semantic concepts in multimedia. In Proceedings
of the 14th Annual ACM International Conference on Multimedia, MULTIMEDIA ’06, pages 421–430, New
York, NY, USA.
Alexander Strehl and Joydeep Ghosh. 2003. Cluster ensembles — a knowledge reuse framework for combining
multiple partitions. J. Mach. Learn. Res., 3:583–617, March.
Xuanhui Wang, ChengXiang Zhai, Xiao Hu, and Richard Sproat. 2007. Mining correlated bursty topic patterns
from coordinated text streams. In Proceedings of the 13th ACM SIGKDD International Conference on Knowl-
edge Discovery and Data Mining, KDD ’07, pages 784–793.
Gang Wang, Tat-Seng Chua, and Ming Zhao. 2008. Exploring knowledge of sub-domain in a multi-resolution
bootstrapping framework for concept detection in news video. In Proceedings of the 16th ACM International
Conference on Multimedia, MM ’08, pages 249–258, New York, NY, USA. ACM.
Jun Yang, Rong Yan, and Alexander G. Hauptmann. 2007. Cross-domain video concept detection using adaptive
SVMs. In Proceedings of the 15th International Conference on Multimedia, MULTIMEDIA ’07, pages 188–
197, New York, NY, USA. ACM.
Dennis Yow, Boon lock Yeo, Minerva Yeung, and Bede Liu. 1995. Analysis and presentation of soccer highlights
from digital video. pages 499–503.
Qiankun Zhao, Prasenjit Mitra, and Bi Chen. 2007. Temporal and information flow based event detection from
social text streams. In Proceedings of the 22nd National Conference on Artificial Intelligence - Volume 2,
AAAI’07, pages 1501–1506.
</reference>
<page confidence="0.99935">
53
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.305877">
<title confidence="0.842147">Key Event Detection in Video using ASR and Visual Data Niraj Shrestha Aparna N. Venkitasubramanian Marie-Francine Moens</title>
<author confidence="0.347828">KU Leuven</author>
<author confidence="0.347828">Belgium</author>
<abstract confidence="0.999170727272727">Multimedia data grow day by day which makes it necessary to index them automatically and efficiently for fast retrieval, and more precisely to automatically index them with key events. In this paper, we present preliminary work on key event detection in British royal wedding videos using automatic speech recognition (ASR) and visual data. The system first automatically acquires key events of royal weddings from an external corpus such as Wikipedia, and then identifies those events in the ASR data. The system also models name and face alignment to identify the persons involved in the wedding events. We compare the results obtained with the ASR output with results obtained with subtitles. The error is only slightly higher when using ASR output in the detection of key events and their participants in the wedding videos compared to the results obtained with subtitles.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Adam</author>
<author>E Rivlin</author>
<author>I Shimshoni</author>
<author>D Reinitz</author>
</authors>
<title>Robust real-time unusual event detection using multiple fixed-location monitors. Pattern Analysis and Machine Intelligence,</title>
<date>2008</date>
<journal>IEEE Transactions on,</journal>
<volume>30</volume>
<issue>3</issue>
<contexts>
<context position="6418" citStr="Adam et al., 2008" startWordPosition="1021" endWordPosition="1024">ms that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g., unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997), soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008) developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) developed an algorithm based on multiple local monitors which collect low-level statistics to detect certain types of unusual events in surveillance video. Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify events in video and the event detection is performed with a supervised learning method, where a model is trained on manually annotated examples of known events. In this paper, we propose a novel idea in which the system learns events from an external corpus like Wikipedia and identifies those events in the ASR or subtitle data of the v</context>
</contexts>
<marker>Adam, Rivlin, Shimshoni, Reinitz, 2008</marker>
<rawString>A. Adam, E. Rivlin, I. Shimshoni, and D. Reinitz. 2008. Robust real-time unusual event detection using multiple fixed-location monitors. Pattern Analysis and Machine Intelligence, IEEE Transactions on, 30(3):555–560, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Allan</author>
<author>Stephen Harding</author>
<author>David Fisher</author>
<author>Alvaro Bolivar</author>
<author>Sergio Guzman-Lara</author>
<author>Peter Amstutz</author>
</authors>
<title>Taking topic detection from evaluation to practice.</title>
<date>2005</date>
<booktitle>In Proceedings of the 38th Annual Hawaii International Conference on System Sciences (HICSS’05) - Track 4 - Volume 04, HICSS ’05,</booktitle>
<pages>101--1</pages>
<publisher>IEEE Computer Society.</publisher>
<location>Washington, DC, USA.</location>
<contexts>
<context position="4904" citStr="Allan et al., 2005" startWordPosition="767" endWordPosition="770">e and ASR output higher when using ASR output in the detection of key events and their participants in the wedding videos compared to the results obtained with subtitles. The methodology that we propose can be applied for the detection of many different types of video events. 2 Related work Event detection has some relationship with Topic Detection and Tracking (TDT) and with concept detection. TDT regards the detection and tracking over time of the main event of a news story and is a challenging problem in the field of text and visual analysis. Although widely studied in text (Allan, 2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection in video is still not well studied. An event in this context is usually broader in scope than the events we want to recognize in wedding videos in this paper. In the multimedia research community, most of the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006) rather than event detection. A concept detection task is different from event detection as a concept can be defined as any object or specific configuration of objects. Any frame then can be labelled with so</context>
</contexts>
<marker>Allan, Harding, Fisher, Bolivar, Guzman-Lara, Amstutz, 2005</marker>
<rawString>James Allan, Stephen Harding, David Fisher, Alvaro Bolivar, Sergio Guzman-Lara, and Peter Amstutz. 2005. Taking topic detection from evaluation to practice. In Proceedings of the 38th Annual Hawaii International Conference on System Sciences (HICSS’05) - Track 4 - Volume 04, HICSS ’05, pages 101.1–, Washington, DC, USA. IEEE Computer Society.</rawString>
</citation>
<citation valid="true">
<title>Topic Detection and Tracking: Event-based Information Organization.</title>
<date>2002</date>
<editor>James Allan, editor.</editor>
<publisher>Kluwer Academic Publishers,</publisher>
<location>Norwell, MA, USA.</location>
<marker>2002</marker>
<rawString>James Allan, editor. 2002. Topic Detection and Tracking: Event-based Information Organization. Kluwer Academic Publishers, Norwell, MA, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Bradski</author>
</authors>
<title>Opencv face detector tool.</title>
<date>2000</date>
<journal>Dr. Dobb’s Journal of Software Tools. Available</journal>
<note>at http: //opencv.org/downloads.html.</note>
<contexts>
<context position="10442" citStr="Bradski, 2000" startWordPosition="1701" endWordPosition="1702">viewee, the persons married or to be married, the dress designer, the bouquet designer, the cake maker, the friends etc. As in this preliminary work we are only interested in the brides and bridegrooms (which are also the most important persons when indexing the video) we use a gazetteer with their names for recognizing the names in the texts. 3.3 Detecting the faces of persons In the video key frames are extracted at the rate of 1 frame per second using (ffmpeg, 2012), which ensures that no faces appearing in the video are omitted. To detect the faces in the video, a face detector tool from (Bradski, 2000) is used. Next, we extract the features from the faces detected in the video. Although there are several dedicated facial feature extraction methods such as (Finkel et al., 2005),(Strehl and Ghosh, 2003), in this implementation, we use a simple bag-of-visual-words model (Csurka et al., 2004). Once feature vectors are built, clustering of the bounding boxes of the detected faces is performed. Each object is, then, compared to the cluster centers obtained and is replaced with the closest center. The clustering is done using Elkan’s k-means algorithm (Jain and Obermayer, 2010) which produces the </context>
</contexts>
<marker>Bradski, 2000</marker>
<rawString>G. Bradski. 2000. Opencv face detector tool. Dr. Dobb’s Journal of Software Tools. Available at http: //opencv.org/downloads.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gabriella Csurka</author>
<author>Christopher R Dance</author>
<author>Lixin Fan</author>
<author>Jutta Willamowski</author>
<author>Cdric Bray</author>
</authors>
<title>Visual categorization with bags of keypoints.</title>
<date>2004</date>
<booktitle>In Workshop on Statistical Learning in Computer Vision, ECCV,</booktitle>
<pages>1--22</pages>
<contexts>
<context position="10734" citStr="Csurka et al., 2004" startWordPosition="1744" endWordPosition="1747">er with their names for recognizing the names in the texts. 3.3 Detecting the faces of persons In the video key frames are extracted at the rate of 1 frame per second using (ffmpeg, 2012), which ensures that no faces appearing in the video are omitted. To detect the faces in the video, a face detector tool from (Bradski, 2000) is used. Next, we extract the features from the faces detected in the video. Although there are several dedicated facial feature extraction methods such as (Finkel et al., 2005),(Strehl and Ghosh, 2003), in this implementation, we use a simple bag-of-visual-words model (Csurka et al., 2004). Once feature vectors are built, clustering of the bounding boxes of the detected faces is performed. Each object is, then, compared to the cluster centers obtained and is replaced with the closest center. The clustering is done using Elkan’s k-means algorithm (Jain and Obermayer, 2010) which produces the same results as the regular k-means algorithm, but is computationally more efficient. This accelerated algorithm eliminates some distance calculations by applying the triangle inequality and by keeping track of lower and upper bounds for distances between points and centers. This algorithm, </context>
</contexts>
<marker>Csurka, Dance, Fan, Willamowski, Bray, 2004</marker>
<rawString>Gabriella Csurka, Christopher R. Dance, Lixin Fan, Jutta Willamowski, and Cdric Bray. 2004. Visual categorization with bags of keypoints. In Workshop on Statistical Learning in Computer Vision, ECCV, pages 1–22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>FBK</author>
</authors>
<title>FBK ASR transcription. Available at https://hlt-tools.fbk.eu/tosca/publish/ ASR/transcribe. ffmpeg.</title>
<date>2013</date>
<contexts>
<context position="15298" citStr="FBK, 2013" startWordPosition="2511" endWordPosition="2512"> the BBC. The duration of this video is 116 minutes at a frame rate of 25 frames per second, and the frame resolution is 720x576 pixels. Frames are extracted at the rate of one frame per second using the ffmpeg tool (ffmpeg, 2012). Faces in the frames are annotated manually using the Picasa tool for building the ground truth for evaluation. This tool is very handy and user-friendly to tag the faces. We have found that there are 69 persons including British wedding couples in the video. The subtitles came along with the DVD which are already split into segments of around 3 seconds. We use the (FBK, 2013) system to obtain the ASR data of the videos. Since the (FBK, 2013) system takes only sound (.mp3 file) as input, we have converted the video into a mp3 file using (ffmpeg, 2012). The obtained ASR data is then in XML format without any sentence boundaries so we have converted the ASR data into segments in the range of three seconds, which is standard when presenting subtitles in video. It is clear that the ASR transcription contains many words that are incorrectly transcribed. It is also visible that the ASR system does not recognize or misspells many words from the actual speech. As mentioned</context>
</contexts>
<marker>FBK, 2013</marker>
<rawString>FBK. 2013. FBK ASR transcription. Available at https://hlt-tools.fbk.eu/tosca/publish/ ASR/transcribe. ffmpeg. 2012. ffmpeg audio/video tool. Available at http://www.ffmpeg.org.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jenny Rose Finkel</author>
<author>Trond Grenager</author>
<author>Christopher D Manning</author>
</authors>
<title>Incorporating non-local information into information extraction systems by Gibbs sampling.</title>
<date>2005</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>363--370</pages>
<contexts>
<context position="10620" citStr="Finkel et al., 2005" startWordPosition="1728" endWordPosition="1731">in the brides and bridegrooms (which are also the most important persons when indexing the video) we use a gazetteer with their names for recognizing the names in the texts. 3.3 Detecting the faces of persons In the video key frames are extracted at the rate of 1 frame per second using (ffmpeg, 2012), which ensures that no faces appearing in the video are omitted. To detect the faces in the video, a face detector tool from (Bradski, 2000) is used. Next, we extract the features from the faces detected in the video. Although there are several dedicated facial feature extraction methods such as (Finkel et al., 2005),(Strehl and Ghosh, 2003), in this implementation, we use a simple bag-of-visual-words model (Csurka et al., 2004). Once feature vectors are built, clustering of the bounding boxes of the detected faces is performed. Each object is, then, compared to the cluster centers obtained and is replaced with the closest center. The clustering is done using Elkan’s k-means algorithm (Jain and Obermayer, 2010) which produces the same results as the regular k-means algorithm, but is computationally more efficient. This accelerated algorithm eliminates some distance calculations by applying the triangle in</context>
</contexts>
<marker>Finkel, Grenager, Manning, 2005</marker>
<rawString>Jenny Rose Finkel, Trond Grenager, and Christopher D. Manning. 2005. Incorporating non-local information into information extraction systems by Gibbs sampling. In Proceedings of ACL, pages 363–370.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Brijnesh J Jain</author>
<author>Klaus Obermayer</author>
</authors>
<title>Elkan’s k-means algorithm for graphs.</title>
<date>2010</date>
<booktitle>In Proceedings of the 9th Mexican International Conference on Artificial Intelligence: Conference on Advances in Soft Computing: Part II, MICAI’10,</booktitle>
<pages>22--32</pages>
<publisher>Springer-Verlag.</publisher>
<location>Berlin, Heidelberg.</location>
<contexts>
<context position="11022" citStr="Jain and Obermayer, 2010" startWordPosition="1789" endWordPosition="1792">eo, a face detector tool from (Bradski, 2000) is used. Next, we extract the features from the faces detected in the video. Although there are several dedicated facial feature extraction methods such as (Finkel et al., 2005),(Strehl and Ghosh, 2003), in this implementation, we use a simple bag-of-visual-words model (Csurka et al., 2004). Once feature vectors are built, clustering of the bounding boxes of the detected faces is performed. Each object is, then, compared to the cluster centers obtained and is replaced with the closest center. The clustering is done using Elkan’s k-means algorithm (Jain and Obermayer, 2010) which produces the same results as the regular k-means algorithm, but is computationally more efficient. This accelerated algorithm eliminates some distance calculations by applying the triangle inequality and by keeping track of lower and upper bounds for distances between points and centers. This algorithm, however, needs the number k of clusters present in the data. Since we are primarily interested in the brides and bridegrooms and since there are seven weddings shown in the video, we experiment with values of k equal to 7*2 = 14. Although this approach very likely introduces errors in th</context>
</contexts>
<marker>Jain, Obermayer, 2010</marker>
<rawString>Brijnesh J. Jain and Klaus Obermayer. 2010. Elkan’s k-means algorithm for graphs. In Proceedings of the 9th Mexican International Conference on Artificial Intelligence: Conference on Advances in Soft Computing: Part II, MICAI’10, pages 22–32, Berlin, Heidelberg. Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Toshio Kawashima</author>
<author>Kouichi Tateyama</author>
<author>Toshimasa Iijima</author>
<author>Yoshinao Aoki</author>
</authors>
<title>Indexing of baseball telecast for content-based video retrieval.</title>
<date>1998</date>
<booktitle>In ICIP (1),</booktitle>
<pages>871--874</pages>
<contexts>
<context position="6182" citStr="Kawashima et al., 1998" startWordPosition="986" endWordPosition="989"> in an event, there is a start and end time in between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g., unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997), soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008) developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) developed an algorithm based on multiple local monitors which collect low-level statistics to detect certain types of unusual events in surveillance video. Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify events in video and the event detection is performed with a supervised learning method, where a model</context>
</contexts>
<marker>Kawashima, Tateyama, Iijima, Aoki, 1998</marker>
<rawString>Toshio Kawashima, Kouichi Tateyama, Toshimasa Iijima, and Yoshinao Aoki. 1998. Indexing of baseball telecast for content-based video retrieval. In ICIP (1), pages 871–874.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ken-Hao Liu</author>
<author>Ming-Fang Weng</author>
<author>Chi-Yao Tseng</author>
<author>Yung-Yu Chuang</author>
<author>Ming-Syan Chen</author>
</authors>
<title>Association and temporal rule mining for post-filtering of semantic concept detection in video.</title>
<date>2008</date>
<journal>Trans. Multi.,</journal>
<volume>10</volume>
<issue>2</issue>
<contexts>
<context position="5254" citStr="Liu et al., 2008" startWordPosition="830" endWordPosition="833">nd Tracking (TDT) and with concept detection. TDT regards the detection and tracking over time of the main event of a news story and is a challenging problem in the field of text and visual analysis. Although widely studied in text (Allan, 2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection in video is still not well studied. An event in this context is usually broader in scope than the events we want to recognize in wedding videos in this paper. In the multimedia research community, most of the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006) rather than event detection. A concept detection task is different from event detection as a concept can be defined as any object or specific configuration of objects. Any frame then can be labelled with some concept descriptor (e.g., church, cake, etc.). While in an event, there is a start and end time in between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events suc</context>
</contexts>
<marker>Liu, Weng, Tseng, Chuang, Chen, 2008</marker>
<rawString>Ken-Hao Liu, Ming-Fang Weng, Chi-Yao Tseng, Yung-Yu Chuang, and Ming-Syan Chen. 2008. Association and temporal rule mining for post-filtering of semantic concept detection in video. Trans. Multi., 10(2):240–251, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qiaozhu Mei</author>
<author>ChengXiang Zhai</author>
</authors>
<title>Discovering evolutionary theme patterns from text: An exploration of temporal text mining.</title>
<date>2005</date>
<booktitle>In Proceedings of the Eleventh ACM SIGKDD International Conference on Knowledge Discovery in Data Mining, KDD ’05,</booktitle>
<pages>198--207</pages>
<publisher>ACM.</publisher>
<location>New York, NY, USA.</location>
<contexts>
<context position="4926" citStr="Mei and Zhai, 2005" startWordPosition="771" endWordPosition="774">r when using ASR output in the detection of key events and their participants in the wedding videos compared to the results obtained with subtitles. The methodology that we propose can be applied for the detection of many different types of video events. 2 Related work Event detection has some relationship with Topic Detection and Tracking (TDT) and with concept detection. TDT regards the detection and tracking over time of the main event of a news story and is a challenging problem in the field of text and visual analysis. Although widely studied in text (Allan, 2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection in video is still not well studied. An event in this context is usually broader in scope than the events we want to recognize in wedding videos in this paper. In the multimedia research community, most of the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006) rather than event detection. A concept detection task is different from event detection as a concept can be defined as any object or specific configuration of objects. Any frame then can be labelled with some concept descriptor </context>
</contexts>
<marker>Mei, Zhai, 2005</marker>
<rawString>Qiaozhu Mei and ChengXiang Zhai. 2005. Discovering evolutionary theme patterns from text: An exploration of temporal text mining. In Proceedings of the Eleventh ACM SIGKDD International Conference on Knowledge Discovery in Data Mining, KDD ’05, pages 198–207, New York, NY, USA. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lev Pevzner</author>
<author>Marti A Hearst</author>
</authors>
<title>A critique and improvement of an evaluation metric for text segmentation.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>1</issue>
<contexts>
<context position="17584" citStr="Pevzner and Hearst, 2002" startWordPosition="2915" endWordPosition="2918">s. GT(a) U GT(b) = [min(xa, xb), max(ya, yb)] (1) 4.2 Evaluation Metrics Let FL be the final list of name and face alignment retrieved by our system for all the faces detected in all frames, and GL the complete ground truth list. To evaluate the name and face alignment task, we use standard precision (P), recall (R) and F1 scores for evaluation: P _ |FL ∩ GL |R _ |FL ∩ GL |F1 _ 2 · P · R |FL ||GL |P + R To evaluate correctness of event segment boundaries, precision and recall are too strict since they penalize boundaries placed very close to the ground truth boundaries. We use the WindowDiff (Pevzner and Hearst, 2002) metric that measures the difference between the ground truth segment GT and the segment 5E found by the machine originally designed for text segmentation. For our scenario, this metric is defined as follows: M−k (|b(GTi, GTi+k) − b(5Ei, 5Ei+k) |&gt; 0) (2) 1 WD(GT, 5E) = M − k i=1 where M = 7102, is the number of frames extracted, k = 1, is the window size and b(i, j) represents the number of boundaries between frame indices i and j. 5 Results Figure 4: Events learned from the Wikipedia data and their identification in the subtitles and ASR by the system 51 5.1 Evaluation of the extraction of we</context>
</contexts>
<marker>Pevzner, Hearst, 2002</marker>
<rawString>Lev Pevzner and Marti A. Hearst. 2002. A critique and improvement of an evaluation metric for text segmentation. Computational Linguistics, 28(1):19–36.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Phi The Pham</author>
<author>M F Moens</author>
<author>T Tuytelaars</author>
</authors>
<title>Cross-media alignment of names and faces.</title>
<date>2010</date>
<journal>IEEE Transactions on Multimedia,</journal>
<volume>12</volume>
<issue>1</issue>
<contexts>
<context position="13258" citStr="Pham et al., 2010" startWordPosition="2156" endWordPosition="2159">n setting Subtitle ASR 11.06 13.80 key frames. However, when there is no corresponding text, or when the text does not contain person entities, no name is suggested for the key frame. Name and face alignment in royal wedding video is difficult and complicated since the video contains many other faces of persons mentioned above. Sometimes the anchor or designer talks about the couple involved in the wedding, but there is no appearance of this couple in the corresponding video key frame as shown in figure 3. We minimize this problem of name and face alignment by using the EM algorithm cited in (Pham et al., 2010). Alignment is the process of mapping the faces in the video to the names mentioned in the textual data. For each frame, the most probable alignment scheme has to be chosen from all possible schemes. The EM algorithm has an initialization step followed by the iterative E- and M-steps. The E-step estimates the likelihood of each alignment scheme for a frame, while the M-step updates the probability distribution based on the estimated alignments over all key frames of the video. 3.5 Event identification in subtitle and ASR data with person involvement (if any) Once the system has learned the eve</context>
</contexts>
<marker>Pham, Moens, Tuytelaars, 2010</marker>
<rawString>Phi The Pham, M. F. Moens, and T. Tuytelaars. 2010. Cross-media alignment of names and faces. IEEE Transactions on Multimedia, 12(1):13–27, January.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yong Rui</author>
<author>Anoop Gupta</author>
<author>Alex Acero</author>
</authors>
<title>Automatically extracting highlights for tv baseball programs.</title>
<date>2000</date>
<booktitle>In Proceedings of the Eighth ACM International Conference on Multimedia, MULTIMEDIA ’00,</booktitle>
<pages>105--115</pages>
<contexts>
<context position="6201" citStr="Rui et al., 2000" startWordPosition="990" endWordPosition="993">start and end time in between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g., unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997), soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008) developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) developed an algorithm based on multiple local monitors which collect low-level statistics to detect certain types of unusual events in surveillance video. Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify events in video and the event detection is performed with a supervised learning method, where a model is trained on manu</context>
</contexts>
<marker>Rui, Gupta, Acero, 2000</marker>
<rawString>Yong Rui, Anoop Gupta, and Alex Acero. 2000. Automatically extracting highlights for tv baseball programs. In Proceedings of the Eighth ACM International Conference on Multimedia, MULTIMEDIA ’00, pages 105–115.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Drew D Saur</author>
<author>Yap-Peng Tan</author>
<author>Sanjeev R Kulkarni</author>
<author>Peter J Ramadge</author>
</authors>
<title>Automated analysis and annotation of basketball video.</title>
<date>1997</date>
<booktitle>In Storage and Retrieval for Image and Video Databases (SPIE),</booktitle>
<pages>176--187</pages>
<contexts>
<context position="6117" citStr="Saur et al., 1997" startWordPosition="975" endWordPosition="978">th some concept descriptor (e.g., church, cake, etc.). While in an event, there is a start and end time in between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g., unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997), soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008) developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) developed an algorithm based on multiple local monitors which collect low-level statistics to detect certain types of unusual events in surveillance video. Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify events in video and the event detect</context>
</contexts>
<marker>Saur, Tan, Kulkarni, Ramadge, 1997</marker>
<rawString>Drew D. Saur, Yap-Peng Tan, Sanjeev R. Kulkarni, and Peter J. Ramadge. 1997. Automated analysis and annotation of basketball video. In Storage and Retrieval for Image and Video Databases (SPIE), pages 176–187.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cees G M Snoek</author>
<author>Marcel Worring</author>
<author>Jan C van Gemert</author>
<author>Jan-Mark Geusebroek</author>
<author>Arnold W M Smeulders</author>
</authors>
<title>The challenge problem for automated detection of 101 semantic concepts in multimedia.</title>
<date>2006</date>
<booktitle>In Proceedings of the 14th Annual ACM International Conference on Multimedia, MULTIMEDIA ’06,</booktitle>
<pages>421--430</pages>
<location>New York, NY, USA.</location>
<marker>Snoek, Worring, van Gemert, Geusebroek, Smeulders, 2006</marker>
<rawString>Cees G. M. Snoek, Marcel Worring, Jan C. van Gemert, Jan-Mark Geusebroek, and Arnold W. M. Smeulders. 2006. The challenge problem for automated detection of 101 semantic concepts in multimedia. In Proceedings of the 14th Annual ACM International Conference on Multimedia, MULTIMEDIA ’06, pages 421–430, New York, NY, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander Strehl</author>
<author>Joydeep Ghosh</author>
</authors>
<title>Cluster ensembles — a knowledge reuse framework for combining multiple partitions.</title>
<date>2003</date>
<journal>J. Mach. Learn. Res.,</journal>
<pages>3--583</pages>
<contexts>
<context position="10645" citStr="Strehl and Ghosh, 2003" startWordPosition="1731" endWordPosition="1734">egrooms (which are also the most important persons when indexing the video) we use a gazetteer with their names for recognizing the names in the texts. 3.3 Detecting the faces of persons In the video key frames are extracted at the rate of 1 frame per second using (ffmpeg, 2012), which ensures that no faces appearing in the video are omitted. To detect the faces in the video, a face detector tool from (Bradski, 2000) is used. Next, we extract the features from the faces detected in the video. Although there are several dedicated facial feature extraction methods such as (Finkel et al., 2005),(Strehl and Ghosh, 2003), in this implementation, we use a simple bag-of-visual-words model (Csurka et al., 2004). Once feature vectors are built, clustering of the bounding boxes of the detected faces is performed. Each object is, then, compared to the cluster centers obtained and is replaced with the closest center. The clustering is done using Elkan’s k-means algorithm (Jain and Obermayer, 2010) which produces the same results as the regular k-means algorithm, but is computationally more efficient. This accelerated algorithm eliminates some distance calculations by applying the triangle inequality and by keeping t</context>
</contexts>
<marker>Strehl, Ghosh, 2003</marker>
<rawString>Alexander Strehl and Joydeep Ghosh. 2003. Cluster ensembles — a knowledge reuse framework for combining multiple partitions. J. Mach. Learn. Res., 3:583–617, March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xuanhui Wang</author>
<author>ChengXiang Zhai</author>
<author>Xiao Hu</author>
<author>Richard Sproat</author>
</authors>
<title>Mining correlated bursty topic patterns from coordinated text streams.</title>
<date>2007</date>
<booktitle>In Proceedings of the 13th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD ’07,</booktitle>
<pages>784--793</pages>
<contexts>
<context position="4947" citStr="Wang et al., 2007" startWordPosition="775" endWordPosition="778">t in the detection of key events and their participants in the wedding videos compared to the results obtained with subtitles. The methodology that we propose can be applied for the detection of many different types of video events. 2 Related work Event detection has some relationship with Topic Detection and Tracking (TDT) and with concept detection. TDT regards the detection and tracking over time of the main event of a news story and is a challenging problem in the field of text and visual analysis. Although widely studied in text (Allan, 2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection in video is still not well studied. An event in this context is usually broader in scope than the events we want to recognize in wedding videos in this paper. In the multimedia research community, most of the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006) rather than event detection. A concept detection task is different from event detection as a concept can be defined as any object or specific configuration of objects. Any frame then can be labelled with some concept descriptor (e.g., church, cake, </context>
</contexts>
<marker>Wang, Zhai, Hu, Sproat, 2007</marker>
<rawString>Xuanhui Wang, ChengXiang Zhai, Xiao Hu, and Richard Sproat. 2007. Mining correlated bursty topic patterns from coordinated text streams. In Proceedings of the 13th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD ’07, pages 784–793.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gang Wang</author>
<author>Tat-Seng Chua</author>
<author>Ming Zhao</author>
</authors>
<title>Exploring knowledge of sub-domain in a multi-resolution bootstrapping framework for concept detection in news video.</title>
<date>2008</date>
<booktitle>In Proceedings of the 16th ACM International Conference on Multimedia, MM ’08,</booktitle>
<pages>249--258</pages>
<publisher>ACM.</publisher>
<location>New York, NY, USA.</location>
<contexts>
<context position="6222" citStr="Wang et al., 2008" startWordPosition="994" endWordPosition="997">n between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g., unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997), soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008) developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) developed an algorithm based on multiple local monitors which collect low-level statistics to detect certain types of unusual events in surveillance video. Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify events in video and the event detection is performed with a supervised learning method, where a model is trained on manually annotated exampl</context>
</contexts>
<marker>Wang, Chua, Zhao, 2008</marker>
<rawString>Gang Wang, Tat-Seng Chua, and Ming Zhao. 2008. Exploring knowledge of sub-domain in a multi-resolution bootstrapping framework for concept detection in news video. In Proceedings of the 16th ACM International Conference on Multimedia, MM ’08, pages 249–258, New York, NY, USA. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jun Yang</author>
<author>Rong Yan</author>
<author>Alexander G Hauptmann</author>
</authors>
<title>Cross-domain video concept detection using adaptive SVMs.</title>
<date>2007</date>
<booktitle>In Proceedings of the 15th International Conference on Multimedia, MULTIMEDIA ’07,</booktitle>
<pages>188--197</pages>
<publisher>ACM.</publisher>
<location>New York, NY, USA.</location>
<contexts>
<context position="5275" citStr="Yang et al., 2007" startWordPosition="834" endWordPosition="837">d with concept detection. TDT regards the detection and tracking over time of the main event of a news story and is a challenging problem in the field of text and visual analysis. Although widely studied in text (Allan, 2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection in video is still not well studied. An event in this context is usually broader in scope than the events we want to recognize in wedding videos in this paper. In the multimedia research community, most of the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006) rather than event detection. A concept detection task is different from event detection as a concept can be defined as any object or specific configuration of objects. Any frame then can be labelled with some concept descriptor (e.g., church, cake, etc.). While in an event, there is a start and end time in between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events such as goal, run, tackl</context>
</contexts>
<marker>Yang, Yan, Hauptmann, 2007</marker>
<rawString>Jun Yang, Rong Yan, and Alexander G. Hauptmann. 2007. Cross-domain video concept detection using adaptive SVMs. In Proceedings of the 15th International Conference on Multimedia, MULTIMEDIA ’07, pages 188– 197, New York, NY, USA. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dennis Yow</author>
<author>Boon lock Yeo</author>
<author>Minerva Yeung</author>
<author>Bede Liu</author>
</authors>
<title>Analysis and presentation of soccer highlights from digital video.</title>
<date>1995</date>
<pages>499--503</pages>
<contexts>
<context position="6144" citStr="Yow et al., 1995" startWordPosition="980" endWordPosition="983">e.g., church, cake, etc.). While in an event, there is a start and end time in between which something happens, and in video, an event is represented by a sequence of frames. Event detection is a challenging problem which is not well studied. Only few event detection systems that process video exist. They recognize events such as goal, run, tackle in a soccer game, or recognize specific actions in news video (e.g., meeting of two well-known people) or in a surveillance video (e.g., unusual event). Event detection in video is often related to sports like basketball (Saur et al., 1997), soccer (Yow et al., 1995) and baseball (Kawashima et al., 1998) (Rui et al., 2000). (Wang et al., 2008) developed a model based on a multi-resolution, multi-source and multi-modal bootstrapping framework that exploits knowledge of sub-domains for concept detection in news video. (Adam et al., 2008) developed an algorithm based on multiple local monitors which collect low-level statistics to detect certain types of unusual events in surveillance video. Most of these works rely only on visual analysis (e.g., detection of certain motion patterns) to identify events in video and the event detection is performed with a sup</context>
</contexts>
<marker>Yow, Yeo, Yeung, Liu, 1995</marker>
<rawString>Dennis Yow, Boon lock Yeo, Minerva Yeung, and Bede Liu. 1995. Analysis and presentation of soccer highlights from digital video. pages 499–503.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qiankun Zhao</author>
<author>Prasenjit Mitra</author>
<author>Bi Chen</author>
</authors>
<title>Temporal and information flow based event detection from social text streams.</title>
<date>2007</date>
<booktitle>In Proceedings of the 22nd National Conference on Artificial Intelligence -</booktitle>
<volume>2</volume>
<pages>1501--1506</pages>
<contexts>
<context position="4968" citStr="Zhao et al., 2007" startWordPosition="779" endWordPosition="782"> key events and their participants in the wedding videos compared to the results obtained with subtitles. The methodology that we propose can be applied for the detection of many different types of video events. 2 Related work Event detection has some relationship with Topic Detection and Tracking (TDT) and with concept detection. TDT regards the detection and tracking over time of the main event of a news story and is a challenging problem in the field of text and visual analysis. Although widely studied in text (Allan, 2002), (Allan et al., 2005), (Mei and Zhai, 2005), (Wang et al., 2007), (Zhao et al., 2007), topic detection in video is still not well studied. An event in this context is usually broader in scope than the events we want to recognize in wedding videos in this paper. In the multimedia research community, most of the works focus on concept detection like in (Liu et al., 2008), (Yang et al., 2007), (Snoek et al., 2006) rather than event detection. A concept detection task is different from event detection as a concept can be defined as any object or specific configuration of objects. Any frame then can be labelled with some concept descriptor (e.g., church, cake, etc.). While in an ev</context>
</contexts>
<marker>Zhao, Mitra, Chen, 2007</marker>
<rawString>Qiankun Zhao, Prasenjit Mitra, and Bi Chen. 2007. Temporal and information flow based event detection from social text streams. In Proceedings of the 22nd National Conference on Artificial Intelligence - Volume 2, AAAI’07, pages 1501–1506.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>