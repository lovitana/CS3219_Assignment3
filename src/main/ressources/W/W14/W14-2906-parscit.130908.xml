<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000030">
<title confidence="0.995216">
Conceptual and Practical Steps in
Event Coreference Analysis of Large-scale Data
</title>
<author confidence="0.959358">
Fatemeh Torabi Asr&apos;, Jonathan Sonntag2, Yulia Grishina2 and Manfred Stede2
</author>
<affiliation confidence="0.806826">
&apos;MMCI Cluster of Excellence, Saarland University, Germany
fatemeh@coli.uni-saarland.de
2Applied Computational Linguistics, University of Potsdam, Germany
</affiliation>
<email confidence="0.699832">
sonntag|grishina|stede@uni-potsdam.de
</email>
<sectionHeader confidence="0.988011" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999854230769231">
A simple conceptual model is employed
to investigate events, and break the task
of coreference resolution into two steps:
semantic class detection and similarity-
based matching. With this perspective an
algorithm is implemented to cluster event
mentions in a large-scale corpus. Results
on test data from AQUAINT TimeML,
which we annotated manually with coref-
erence links, reveal how semantic conven-
tions vs. information available in the con-
text of event mentions affect decisions in
coreference analysis.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99998675">
In a joint project with political scientists, we are
concerned with various tasks of indexing the con-
tent of a large corpus of newspaper articles. To
supplement other NLP tools and as an interest-
ing information for the political scientists by itself,
we are interested in keeping track of discussions
around headline events such as attacks and crises.
The main challenges in the project include:
</bodyText>
<listItem confidence="0.9850885">
1. proposing a definition of event identity, and
2. finding the actual mentions in natural text,
</listItem>
<bodyText confidence="0.999039888888889">
to construct clusters of, so-called, coreferential
events. We refer to the former task as a formal
convention, a vital step in order for useful results
to be delivered to the human text analysts. The lat-
ter is basically an information extraction task once
a clear problem specification is obtained.
The main objective of the paper is to shed
light on each of the above tasks by applying a
three-layer event ontology1. Terminologies from
</bodyText>
<footnote confidence="0.869859666666667">
1The term ontology is used to refer to a conceptual model
of events and connections between them rather than a partic-
ular knowledge base implementation.
</footnote>
<bodyText confidence="0.999555540540541">
earlier theories (Davidson, 1969) up until recent
work (Hovy et al., 2013a) are combined to draw an
integrated picture of the event coreference prob-
lem. The semantic layer is established with the
help of WordNet synsets. Related entities and
timestamps are considered as fundamental event
attributes that in practice can be resolved from the
context of a mention. We implement an incremen-
tal event clustering algorithm with respect to the
adapted ontology of events and use a minimal lin-
guistic procedure to extract values from text for
every event attribute. This system is being devel-
oped to work within a pipeline annotation project
where incremental clustering performs efficiently
on large-scale data.
In order to evaluate our proposed method, we
have manually annotated a random selection of
event mentions in the AQUAINT TimeML cor-
pus (UzZaman et al., 2013). Performance of the
automatic system in pair-wise coreference reso-
lution is comparable to that of more sophisti-
cated clustering methods, which at the same time
consider a variety of linguistic features (Bejan
and Harabagiu, 2010). The differences between
the human annotator pair-wise decisions and the
output of our clustering algorithm reveal inter-
esting cases where coreference labeling is per-
formed based upon the adapted semantic conven-
tion rather than information available in the text
about time, location and participants of an event
instance. In the following, we provide an overview
of the adapted ontology, background on event
coreference, and finally our implementation and
experiments within the proposed framework on
real data as well as the annotated corpus. We point
to related work at the various appropriate places in
the paper.
</bodyText>
<sectionHeader confidence="0.988805" genericHeader="method">
2 An Object Oriented Ontology
</sectionHeader>
<bodyText confidence="0.9972945">
The general impression one gets by a review of
the coreference literature, is that at the semantic
</bodyText>
<page confidence="0.991604">
35
</page>
<note confidence="0.8497795">
Proceedings of the 2nd Workshop on EVENTS: Definition, Detection, Coreference, and Representation, pages 35–44,
Baltimore, Maryland, USA, June 22-27, 2014. c�2014 Association for Computational Linguistics
</note>
<bodyText confidence="0.999905403508772">
formalism level, events are engaged with a higher
degree of complexity and more variety than en-
tities. That is probably because of the concrete
nature of entities: intuitively, an event happens,
whereas, an entity exists. As a subject matter, the
latter is more straightforward to get decomposed
into smaller components and be identified by cer-
tain feature attributes. The ontology explained in
this chapter is general in the sense that one could
(perhaps should) start understanding it by exam-
ples about entities.
A realized entity belongs to a class of enti-
ties sharing the same set of attributes. For ex-
ample, president Obama, as long as being talked
in a political context is considered as an instance
of the class PRESIDENT, comprising attributes
such as Country, Party and Duration of
presidency. Any other president can be compared
against Obama, with respect to the attribute values
associated with them. Therefore, Bush is a differ-
ent instance of the class PRESIDENT regarding
the fact that a different political Party as well
as a different presidential Duration are assigned
to him. Detecting mentions of these PRESIDENT
instances in text corpora would be a technical task
once the semantic representation was fixed. At this
level, instead we face questions like, whether or
not a named entity somewhere in the text detected
by our text processor, e.g., “Barack Hossein”, is
referring to the one PRESIDENT instance that we
named above as Obama.
Figure 1 illustrates similar levels of abstraction
for event classes, event instances, and event men-
tions. The distinction between the second and the
third layer are more obvious and previously con-
sidered as clearly in other frameworks. The dis-
tinction between the first and the second layer,
though, is often left implicit, even in recently pub-
lished event annotation guidelines. For example in
a Grounded Annotation for Events (GAF, Fokkens
et al. 2013), event mentions are clearly distin-
guished from instances. However, the first two
layers have been taken as one, i.e., the semantic
layer. In their work, event type which is an artifact
of the adapted semantic ontology (SEM, Klyne
and Carroll 2004), implicitly works similar to the
classes in our definition. Nevertheless, these three
layers are intuitively separable and familiar for lin-
guists working on event and entity recognition.
Bejan and Harabagiu (2010), for example, intro-
duce the event coreference resolution with an ex-
ample put into a similar three-layer hierarchy, de-
spite their purely data-driven approach leaving off
prior semantic specifications. Here, we explain
each layer of the model separately. Issues specific
to coreference detection will be presented in the
following section.
</bodyText>
<subsectionHeader confidence="0.999124">
2.1 Event Classes
</subsectionHeader>
<bodyText confidence="0.9999734">
The first layer of the ontology determines event
type definitions. Each class can have totally dif-
ferent attributes depending on the interests of a
particular study. Some events might be identi-
fied only by their time and place, while others by
participants of prioritized importance. A very flat
semantic representation would attribute all types
of events with a fixed set of entities, e.g.: par-
ticipants, time and location. Note, however, that
structural and semantic differences exist among
events of different natures, even if these complex
phenomena are reduced into something more fa-
miliar and tangible such as verb frames (Fillmore
et al., 2003). For example, a KILLING event is es-
sentially attributed with its Agent and Patient,
while salient attributes of an EARTHQUAKE
include Location, Magnitude, Time and
Human Impacts, in a typical news context.
This becomes even more clear when event types
are taken and compared against one another from
different genres of text (Pivovarova et al., 2013;
Shaw, 2013). A scientific attitude toward the
analysis of EARTHQUAKE events might character-
ize them with Natural Impacts rather than
Human Impacts. Thus, the first layer of the
model needs to be designed with respect to the
specific information extraction goals of the partic-
ular study, be it a pure linguistic or an application-
oriented one.
Ambiguities about the granularity of attributes,
subevent-ness, scope and most importantly, iden-
tity between event instances are dealt with at the
definition layer for and between classes. For ex-
ample, if the modeler wants to allow coreference
between instances of KILLING and SHOOTING
to indicate some type of coreference between an
event and its possible subevent then this needs to
be introduced at the class level, along with a pro-
cedure to compare instances of the two classes,
which possess different sets of attribute2. Remarks
</bodyText>
<footnote confidence="0.99961125">
2The same applies even to a more flexible case, when
the modeler wants to allow coreference between KILLING
and DYING instances (e.g., if a KILLING’s Patient is the
same as a DYING’s Theme).
</footnote>
<page confidence="0.998121">
36
</page>
<table confidence="0.799560173913044">
Formalism Realization Text
Shooting instance 1
Agent: Lee Harvey Oswald
Patient: John Fitzgerald Kennedy
Weapon: a rifle
Time: 22.11.1963
Location: Dealey Plaza, Dallas
Killing instance 1
Agent: Lee Harvey Oswald
Patient: John Fitzgerald Kennedy
Time: 22.11.1963
Location: Dealey Plaza, Dallas
Earthquake instance 1
Magnitude: 6.6 to 7
Human Impacts: injury and death
Time: 20.04.2013
Location: Sichuan, China
Killing instance 2
Agent: an earthquake
Patient: local people
Time: 20.04.2013
Location: Sichuan, China
Mention 1
</table>
<construct confidence="0.326429411764706">
“ President Kennedy was killed three
days before he was to make these
amendments public.”
Mentions 2 and 3
“ Lushan, China (CNN) -- A strong
earthquake that struck the southwestern
Chinese province of Sichuan this weekend
has killed 186 people, sent nearly 8,200
to hospitals and created a dire dearth of
drinking water, Chinese state-run Xinhua
reported Sunday. Earlier reports had said
as many as 11,200 people were injured. ”
Mention 4
“ Shortly after noon on November 22,
1963, President John F. Kennedy was
assassinated as he rode in a motorcade
through Dealey Plaza. “
</construct>
<figure confidence="0.999701888888889">
Class KILLING
Agent;
Patient;
Time;
Location;
Class SHOOTING
Agent;
Patient;
Time;
Location;
Weapon;
Class EARTQUAKE
Magnitude;
Human Impacts;
Time;
Location;
m q
1 n
</figure>
<figureCaption confidence="0.99999">
Figure 1: A three-layer ontology of events: classes, instances and mentions
</figureCaption>
<bodyText confidence="0.99991175">
of Hovy et al. (2013b) on different types of iden-
tity according to lexicosyntactic similarity, syn-
onymy and paraphrasing indicate that the model-
ers have a wide choice of identity definition for
event types. In section 4.3 we explain how to adapt
an extended version of synonymy in order to de-
fine event classes prior to similarity-based cluster-
ing of the mentions.
</bodyText>
<subsectionHeader confidence="0.997765">
2.2 Event Instances
</subsectionHeader>
<bodyText confidence="0.998876714285714">
Layer 2 indicates perfect instantiation, representa-
tive of the human common sense intuition of phe-
nomena in real world. Instances in this layer corre-
spond to the Davidsonian notion of events as con-
crete objects with certain locations in space-time,
something that is happening, happened, or will
happen at some point (Davidson, 1969). There-
fore, links from classes to instances represent
a one-to-many relation. Every instance of the
EARTHQUAKE is determined with a unique set
of attribute values. Two EARTHQUAKE instanti-
ations with exactly similar attribute values are just
identical. In order to keep a clear and simple rep-
resentation specific to the study of coreference,
the model does not allow any connection or rela-
tion between two event instances unless via their
classes. Note that in Figure 1, for each realized
object, only attributes included in the formalism
layer are presented with their values, while in re-
ality events occur with possibly infinite number of
attributes.
</bodyText>
<subsectionHeader confidence="0.998414">
2.3 Event Mentions
</subsectionHeader>
<bodyText confidence="0.99953792">
Facing an event mention in the text, one should
first determine its class and then the unique event
instance, to which the mention points. Detection
of the class depends on the semantic layer defi-
nitions, while discovering the particular instance
that the mention is talking about relies on the at-
tribute values extractable from the mention con-
text.
Usually, mentions provide only partial informa-
tion about their target event instance. They can
be compared against one another and (if available)
against a fully representative mention, which most
clearly expresses the target event by providing all
necessary attribute values. Fokkens et al. (2013)
refer to such a mention as the trigger event. Some-
times it is possible that the context is even more in-
formative than necessary to resolve the unique real
world corresponding event (see details about the
impact of the earthquake in mention 3, Figure 1).
In natural text a mention can refer to more than
one event instance of the same type, for example
when a plural case is used: “ ... droughts, floods
and earthquakes cost China 421 billion yuan in
2013”. Hovy et al. (2013b) propose partial coref-
erence between singular and plural mentions. In
</bodyText>
<page confidence="0.996547">
37
</page>
<bodyText confidence="0.9999733">
our model plural mentions are not treated seman-
tically differently, they only point to several in-
stances, thus, are coreferential with any single
mention of them as long as the attribute values al-
low3.
With respect to the above discussion, links from
layer 2 to 3 represent many-to-many relations: an
event instance can have several mentions in the
text, and a single mention can point to more than
one event instance at a time.
</bodyText>
<sectionHeader confidence="0.972877" genericHeader="method">
3 Towards Coreference Analysis
</sectionHeader>
<bodyText confidence="0.999892942857143">
In terms of method, two different approaches have
been tried in the literature under the notion of
event coreference resolution (Chen and Ji, 2009;
Bejan and Harabagiu, 2010; Lee et al., 2012;
Hovy et al., 2013b). The first and most theoreti-
cally founded strategy is to decide for every pair
of event mentions, whether or not they refer to
the same event instance. Since in this approach
decisions are independently made for every pair
of event mentions, a clear formalism is needed to
determine exactly what types of coreference are
possible and how they are detected by looking
at textual mentions (Chen and Ji, 2009; Hovy
et al., 2013b). Some related work on predicate
alignment also fit into this category of research
(Roth and Frank, 2012; Wolfe et al., 2013).
Alternatively, in automatic event clustering, the
objective is basically discovering event instances:
all we know about an event in the world is the
collective information obtained from mentions
referring to that in a text corpus. Each cluster
in the end ideally represents a unique event in
reality with all its attribute values (Bejan and
Harabagiu, 2010; Lee et al., 2012). Some formal
and technical differences exist between the two
approaches.
Boolean choice: traditionally, clusters shape with
the idea that all mentions within a cluster are of
the same identity. Every randomly chosen pair
of mentions are coreferent if they are found in a
single cluster at the end, and non-coreferent oth-
erwise. Therefore, taking this approach implies a
level of formalism, which rules out partial coref-
erence. On the other hand, pair-wise classifica-
tion could consider partial coreference whenever
</bodyText>
<footnote confidence="0.933742333333333">
3The other type of quasi-identity discussed by Hovy et al.
(2013b) engaged with sub-events is handled in the semantic
level.
</footnote>
<bodyText confidence="0.99984825">
two event mentions are neither identical nor totally
different (Hovy et al., 2013b). Soft-clustering can
compensate some deficiencies of traditional clus-
tering approaches4.
Transitivity: all mentions in a single cluster
are coreferential, whereas pair-wise labels allow
for non-transitive relations among event mentions.
Depending on the specific goal of a study, this
could be an advantage or a disadvantage. Lack
of transitivity could be considered as an error if it
is not consciously permitted in the underlying se-
mantic formalism.
Complexity and coverage: event mentions can
appear in noisy or sparse context where informa-
tion for detection of their target event instance is
not available. Dealing with such cases is usually
easier in a clustering framework where similarity
scores are calculated against the collective infor-
mation obtained from a population of mentions,
rather than an individual occurrence. Classifica-
tion approaches could comparatively handle this
only if sufficiently representative labeled data is
available for training.
Exploration: a general advantage of cluster anal-
ysis is that it provides an exploratory framework
to assess the nature of similar input records, and
at the end it results in a global distributional
representation. This is specially desired here,
since computational research on event coreference
is in its early ages. Evaluation corpora and
methodology are still not established, thus, the
problem is not yet in the phase of “look for higher
precision”!
The method we are going to propose in the next
section combines a rule-based initial stage with a
similarity-based clustering procedure. This is par-
tially inspired by the work of Rao et al. (2010),
where entity coreference links are looked up in
high-volume streaming data. They employ a lex-
icon of named entities for cluster nomination to
reduce the search space. Once a mention is visited
only the candidates among all incrementally con-
structed clusters up to that point are examined. In-
cremental clustering strategies are in general suit-
able for a pipeline project by efficiently providing
single visits of every mention in its context. Fea-
ture values of a mention can be extracted from the
document text, used for clustering, and combined
</bodyText>
<footnote confidence="0.951834666666667">
4For example, multi-assignment would allow plural men-
tions to take part in several different clusters, each represen-
tative of one event instance.
</footnote>
<page confidence="0.998248">
38
</page>
<bodyText confidence="0.998683">
into the feature representation of the assigned clus-
ter in a compressed format.
</bodyText>
<sectionHeader confidence="0.983717" genericHeader="method">
4 Event Coreference System
</sectionHeader>
<bodyText confidence="0.999935636363636">
The original data in our study is a text corpus au-
tomatically annotated with several layers of syn-
tactic and semantic information (Blessing et al.,
2013). The English portion includes news and
commentary articles of several British and Amer-
ican publishers from 1990 to 2012. An approx-
imate average of 100 event mentions per docu-
ment with the large number of total documents per
month (avg. 1200) requires us to think of different
ways to reduce the search space and also design a
low-complexity coreference resolution algorithm.
</bodyText>
<subsectionHeader confidence="0.981653">
4.1 Partitioning
</subsectionHeader>
<bodyText confidence="0.999991115384615">
In cross-document analysis, typically, a topic-
based document partitioning is performed prior to
the coreference chain detection (Lee et al., 2012;
Cybulska and Vossen, 2013). Since we are in-
terested to track discussions about a certain event
possibly appearing in different contexts, this tech-
nique is not desired as coreference between men-
tions of a single real word event in two differ-
ent topics would remain unknown. For example,
when an articles reviews several instances of a cer-
tain event type such as different attacks that has
happened in a wide temporal range and in differ-
ent locations, such articles would not be included
in any of the individual topics each focused on
one event instance. As an alternative to the pre-
vious approach, we perform a time-window par-
titioning based on the article publication date be-
fore feeding the data into the coreference analysis
algorithm. Larger windows would capture more
coreference links: this is a parameter that can be
set with respect to the available resources in trade-
off with the desired search scope. In the future, we
would like to invent an efficient procedure to com-
bine the resulting clusters from consecutive time-
windows in order to further enhance the recall of
the system.
</bodyText>
<subsectionHeader confidence="0.993657">
4.2 Event Mention and Feature Identification
</subsectionHeader>
<bodyText confidence="0.9999774375">
In order to extract event mentions we use the
ClearTK UIMA library (Ogren et al., 2008), check
the PoS of the head word in the extracted text
span and take all verbal and nominal mentions
into account. In the current implementation all
event classes are identified by a fixed set of at-
tributes including Timestamps and Related
Entities. While being very coarse-grained,
this way of attribution is quite intuitive: events
are identified by times, places and participants
directly or vaguely attached to them. Temporal
expressions are extracted also by ClearTK and
normalized using SUTime (Chang and Manning,
2012). Named entities of all types except Date
are used which are obtained from previous work
on the same dataset (Blessing et al., 2013).
</bodyText>
<subsectionHeader confidence="0.999652">
4.3 The Two-step Algorithm
</subsectionHeader>
<bodyText confidence="0.939771588235294">
Having all required annotations, we select a
time window and perform the following two
steps for event mentions of the TimeML classes
Occurrence, I-Action, Perception and
Aspectual5.
1) Semantic class identification: WordNet
synsets provide a rich resource in order to be
adapted as event classes (Fellbaum, 1999). They
cover a large lexicon and the variety of rela-
tional links between words enables us to specify
a clear semantic convention for the coreference
system. In addition to the mentions coming from
the same synset, we allow coreference between
events belonging to two different synsets that are
directly connected via hypernymy or morphose-
mantic links. While every WordNet synset com-
prises words only from a single part of speech,
morphosemantic relations allow the model to es-
tablish cross-PoS identity among words sharing
a stem with the same meaning which is desired
here: observe (verb) and observation (noun)6. A
Java library is employed to access WordNet anno-
tations (Finlayson, 2014).
2) Similarity-based clustering: A mention is
compared against previously constructed clus-
ters with respect to the attribute values that are
extractable from its context. In order to fill
the Timestamps attribute we have employed a
back-off strategy: first we look at all time expres-
sions in the same paragraph where the event men-
tion appears, if we found enough temporal infor-
mation, that would suffice. Otherwise, we look
into the content of the entire article for tempo-
ral expressions. The Related Entities at-
</bodyText>
<footnote confidence="0.986295333333333">
5Other types, namely, Report, State and I-State
events are not interesting for us, therefore such mentions are
simply skipped.
6When a mention is visited all compatible synsets accord-
ing to the head lemma are tried because in the current imple-
mentation we do not perform word sense disambiguation.
</footnote>
<page confidence="0.999578">
39
</page>
<bodyText confidence="0.999170083333333">
tribute is filled similarly by looking at the named
entities in the context of the event mention. The
first step is a procedure to candidate clusters con-
taining mentions of related types. If no cluster
is a candidate, a singleton cluster is created and
its class is added to the index of visited event
types (synsets). If candidate clusters already ex-
ist, we calculate the feature-based similarity score
for each. If the best score is below a threshold a
new singleton cluster is created but in this case for
the reason that, perhaps, not a new type but a new
event instance is visited.
</bodyText>
<sectionHeader confidence="0.918825" genericHeader="method">
5 Manual Annotation and Evaluation
</sectionHeader>
<bodyText confidence="0.999963580645161">
The Event Coreference Bank, which is the largest
available corpus with cross-document corefer-
ence labels, supports only a within topic evalu-
ation (ECB, Bejan and Harabagiu 2010). In or-
der to perform a more realistic evaluation of the
method presented in this paper, we selected a sub-
set of events from the AQUAINT TimeML cor-
pus and annotated those with coreferentiality. The
AQUAINT TimeML data has recently served as
one of the benchmarks in the TempEval shared
task (UzZaman et al., 2013) and is available for
public use7. It contains 73 news report docu-
ments from four topics, annotated with 4431 event
mentions and 652 temporal expressions which
make it suitable for our task. Two main differ-
ences between our annotation and the ECB data
are: 1) event mentions here are selected semi-
randomly8 and across topics rather than topic-
based, 2) they are shown pair-wise to the anno-
tator (in order to catch the transitivity patterns
after the analysis), whereas, in the ECB, event
mentions are clustered. Furthermore, the data
already comes with manually assigned mention
boundaries, event types, temporal expressions and
links between events and temporal expressions, all
according to the TimeML standards (Hobbs and
Pustejovsky, 2003). These serve exactly as fea-
tures that our algorithm uses for construction of
clusters. We only had to perform named entity
recognition automatically to have data ready for
evaluation of the model. The manual annotation
</bodyText>
<equation confidence="0.5590545">
7http://www.cs.york.ac.uk/
semeval-2013/task1
</equation>
<bodyText confidence="0.973296304347826">
8Since the number of coreferential mentions is much
smaller than non-coreferent ones, we adapted a heuristic mea-
sure to make sure that we will have some similar mentions
among the 100 records. Therefore, we would call it a semi-
random selection, still different from the fully selective strat-
egy employed for ECB.
of 4950 pairs resulting from 100 selected event
mentions ( 100!
2!(100−2)!) was done with the help of a
simple user interface, which showed each of the
two event mentions within its context to the an-
notator and asked for pushing yes, no or next
(undecided) button to proceed to the next pair.
After studying the annotation guideline published
by Cybulska and Vossen (2014), our expert spent
some hours during a week for the job. Decisions
made in shorter than 500 ms were revised after-
wards. There was one no answer which the an-
notator found unsure after revision, as it resulted
in a transitivity violation, but we left it unchanged
due to the nature of pair-wise decisions. In the end
we came up with a total of 36 yes, and 4914 no
pairs.
</bodyText>
<sectionHeader confidence="0.999305" genericHeader="evaluation">
6 Experiments
</sectionHeader>
<bodyText confidence="0.9997692">
This section provides an insight into how clusters
of event mentions are created for a portion of our
large news corpus. We also run the algorithm on
the manually annotated data to perform an error
analysis.
</bodyText>
<subsectionHeader confidence="0.999945">
6.1 Construction of Event Clusters
</subsectionHeader>
<bodyText confidence="0.990299782608696">
News text from New York Times and Washing-
ton Post are combined to demonstrate a show-
case of clustering for a time-window of two weeks
(250 articles)9. Figure 2 shows the creation curve
of event classes (type index entries) and event
instances (clusters) as the number of the vis-
ited mentions increases. Comparison between the
number of mentions with that of clusters indicates
that a great deal of event instances are mentioned
only once in the text. Since, for each mention, all
compatible synsets are added to the type index (if
not there already) during the early stages of clus-
tering the number of the type index entries is times
the number of visited mentions. In the middle
to the end phases the type index contains a large
collection of event classes, also a decent number
of non-singleton clusters (repeatedly mentioned
event instances) are created. Statistics of the type
of clusters obtained after performing the algorithm
on the processed mentions are presented in Ta-
ble 1. A significant number of non-singleton clus-
ters contain mentions only from a single paragraph
or a single article, which is expected given the type
</bodyText>
<footnote confidence="0.984628">
9This collection is processed within a few minutes on a
normal PC by the proposed algorithm starting with zero clus-
ters.
</footnote>
<page confidence="0.996895">
40
</page>
<figureCaption confidence="0.999713">
Figure 2: Number of clusters and the type index entries as mentions are visited in 250 articles
</figureCaption>
<bodyText confidence="0.99977376">
of features; remember that Timestamps and
Named Entities are looked up in a paragraph
scope. Clusters containing mentions from several
articles, namely, the popular ones are most inter-
esting for us as they would be representative of the
systems performance on cross-document corefer-
ence analysis. By looking at those we found that
the named entities have a very important role in
finding similar subtopics within and between doc-
uments. Temporal expressions are less helpful as
they are rare, and otherwise introduce some noise
when documents are already being processed in
a specific publication time-window. For example,
the word today which appears in most articles of
the same day (and would be normalized to that
day’s date, e.g., “1990.01.12”) would gather men-
tions of a general event type, e.g., meet, although,
they might not be pointing to the same instance.
The employed semantic convention establishes a
balance between efficiency and recall of the sys-
tem. Nevertheless, it sometimes allows clustering
of intuitively unrelated actions. In order to en-
hance the clustering performance in terms of the
precision, we have a parameter to give priority to
within synset coreference.
</bodyText>
<subsectionHeader confidence="0.994573">
6.2 Error Analysis
</subsectionHeader>
<bodyText confidence="0.999969277777778">
We fed all event mentions from the AQUAINT
TimeML corpus into the algorithm exactly in the
same way that we did in case of our large news
corpora. The algorithm has a few parameters
which we set by looking at samples of resulting
clusters prior to the measurement on the labeled
portion. This is a minimal NLP system given that
neither syntactic/semantic dependency of entities
to the event head word nor the type of attachment
to temporal expressions in the context are taken
into account. Nevertheless, we obtain 51.3% pre-
cision and 55.6% recall for the pair-wise corefer-
ence resolution task on the annotated data. The
resulting F-score of 53.4% is comparable with the
best F-scores reported in the work of Bejan and
Harabagiu (52.1% on ECB for the similar task)
while they use a rich linguistic feature set, as well
as a more sophisticated clustering method.
</bodyText>
<table confidence="0.999542">
Coreference Total Related class Same doc.
True positive 20 100% 25%
True negative 4895 16% 2%
False positive 19 100% 36%
False negative 16 33% 7%
Total 4950 15% 2%
</table>
<tableCaption confidence="0.999364">
Table 2: Pair-wise decisions
</tableCaption>
<bodyText confidence="0.994362909090909">
Table 2 shows false positive and negative answers
separately. As reflected in the results, positive
labels are given only to mention pairs of related
classes (headwords need to share a synset, or are
related via hypernym and morphosemantic links
in WordNet). 36% of positive labels are given to
pairs within some article which is expected given
that common contextual features are easy to find
for them. In such cases, usually linguistic features
are needed to resolve participants or the relative
temporality of one mention against the other:
</bodyText>
<listItem confidence="0.51531175">
a. some people are born rich, some are born
poor.
b. the bullet bounced off a cabinet and rico-
cheted into the living room.
</listItem>
<figure confidence="0.933779461538461">
Cluster type Freq. Avg. content
Singleton
Single paragraph
Single article
Popular
12895
1360
807
182
1
2.36
3.95
2.99
</figure>
<tableCaption confidence="0.986212">
Table 1: Different types of resulting clusters
</tableCaption>
<page confidence="0.999174">
41
</page>
<bodyText confidence="0.999592611111111">
In some cases, on the other hand, the disagreement
depends on the semantic approach to the defini-
tion of identity, and therefore, is more controver-
sial. The human annotator has apparently been
more conservative to annotate coreference when
the head words of the mentions were a bit different
in meaning, whereas the system’s decision bene-
fited from some flexibility:
a. the immigration service decided the boy
should go home. / they made a reasonable
decision Wednesday in ruling that...
b. if he goes, he will immediately become...
It is not clear, for example, whether ruling is a sub-
event of the decision or exactly the same event. A
similar distinction needs to be made in case of the
false negative labels. The automatic clustering is
not able to detect coreference mostly in case of
sparse context, where enough information is not
available to resolve the similarity. That is why
false negative happens more frequently for men-
tions coming from different articles (specifically
paragraphs sharing few named entities) and only
7% of the time when they happen within a docu-
ment:
a. the Clinton administration has pushed for
the boy’s return. / his son said he didn’t
want to go.
Sparse context results either in the creation of a
singleton cluster for the mention or careless as-
signment to some wrong cluster, which in the fu-
ture would decrease the chance of meeting coref-
erent mentions. False negatives happening for
mentions of unrelated semantic classes are due to
the missing links between possibly synonym words
in WordNet, one of the issues that need to be in-
vestigated and cured in the future work.
</bodyText>
<sectionHeader confidence="0.998485" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.999295">
This paper presented a variety of material concern-
ing event coreference resolution:
</bodyText>
<listItem confidence="0.9481683">
1. A general ontology is explained that can be
employed in different studies on events.
2. An algorithm is designed, regardingly, to
gather coreferential event in a large corpus.
3. A set of event mentions in AQUAINT
TimeML is annotated with pair-wise corefer-
ence tags within and between topics10.
4. An implementation of the method consider-
ing simple and scalable features is tested on
real data and the annotated corpus.
</listItem>
<bodyText confidence="0.990088227272727">
5. Finally, we performed an error analysis of the
automatically assigned labels to identify fu-
ture directions.
Separating the semantic layer definition of coref-
erence from textual attribution of event mentions
has two benefits in our framework. First, it pro-
vides us with an efficient partitioning procedure
to reduce the search space. Second, it makes the
model flexible to allow for different possible se-
mantic conventions which could vary from one
application to another. Our adaptation of Word-
Net synsets allows for integrative future exten-
sion of the model — e.g., to capture metaphori-
cal and subevent relations based on Methonymy
and Entailment links. The intuition of using
named entities for identification of important real-
world events resulted in balanced precision and re-
call on the test data. In the future, we would like to
investigate the effect of linguistic features on im-
proving the performance of the algorithm. In par-
ticular, it would be interesting to see whether exact
specification of event head arguments would out-
perform the vague attribution with related entities.
The state-of-the-art result in the supervised predi-
cate alignment approach is a hint for rich linguistic
features to be helpful (Wolfe et al., 2013). On the
other hand, depending on the adapted event iden-
tity definition, coreferential events might not re-
ally share identical arguments (Hasler and Orasan,
2009). There are differences between real data
collections and the available annotated corpora,
including ours, which needs to be investigated as
well. For example, small collections do not in-
clude enough same-class event mentions pointing
to different event instances, and it brings about
unrealistic evaluations. Furthermore, annotation
guidelines are usually biased towards a specific
theory of event identity which affect the resulting
data in one way or another. Some applications de-
mand different semantic conventions perhaps with
broader/narrower definition of identity. This is a
dilemma that needs to be resolved through more
theoretical studies in touch with real world prob-
lems such as the one we introduced in this paper.
</bodyText>
<footnote confidence="0.9696795">
10The annotation is available at: http://www.coli.
uni-saarland.de/˜fatemeh/resources.htm
</footnote>
<page confidence="0.998739">
42
</page>
<sectionHeader confidence="0.989876" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.993631547368421">
Bejan, C. A. and Harabagiu, S. (2010). Unsuper-
vised event coreference resolution with rich lin-
guistic features. In Proceedings of the 48th An-
nual Meeting of the Association for Computa-
tional Linguistics, pages 1412–1422. Associa-
tion for Computational Linguistics.
Blessing, A., Sonntag, J., Kliche, F., Heid, U.,
Kuhn, J., and Stede, M. (2013). Towards a
tool for interactive concept building for large
scale analysis in the humanities. In Proceed-
ings of the 7th Workshop on Language Technol-
ogy for Cultural Heritage, Social Sciences, and
Humanities, pages 55–64, Sofia, Bulgaria. As-
sociation for Computational Linguistics.
Chang, A. X. and Manning, C. (2012). Sutime:
A library for recognizing and normalizing time
expressions. In LREC, pages 3735–3740.
Chen, Z. and Ji, H. (2009). Graph-based event
coreference resolution. In Proceedings of the
2009 Workshop on Graph-based Methods for
Natural Language Processing, pages 54–57.
Association for Computational Linguistics.
Cybulska, A. and Vossen, P. (2013). Semantic re-
lations between events and their time, locations
and participants for event coreference resolu-
tion. In RANLP, volume 2013, page 8.
Cybulska, A. and Vossen, P. (2014). Guidelines for
ecb+ annotation of events and their coreference.
Technical report, Technical Report NWR-2014-
1, VU University Amsterdam.
Davidson, D. (1969). The individuation of events.
In Essays in honor of Carl G. Hempel, pages
216–234. Springer.
Fellbaum, C. (1999). WordNet. Wiley Online Li-
brary.
Fillmore, C. J., Johnson, C. R., and Petruck, M. R.
(2003). Background to framenet. International
journal of lexicography, 16(3):235–250.
Finlayson, M. A. (2014). Java libraries for ac-
cessing the princeton wordnet: Comparison and
evaluation. In Proceedings of the 7th Global
Wordnet Conference, pages 78–85.
Fokkens, A., van Erp, M., Vossen, P., Tonelli, S.,
van Hage, W. R., SynerScope, B., Serafini, L.,
Sprugnoli, R., and Hoeksema, J. (2013). Gaf: A
grounded annotation framework for events. In
NAACL HLT, volume 2013, page 11.
Hasler, L. and Orasan, C. (2009). Do corefer-
ential arguments make event mentions corefer-
ential. In Proc. the 7th Discourse Anaphora
and Anaphor Resolution Colloquium (DAARC
2009).
Hobbs, J. and Pustejovsky, J. (2003). Annotating
and reasoning about time and events. In Pro-
ceedings ofAAAI Spring Symposium on Logical
Formalizations of Commonsense Reasoning.
Hovy, E., Mitamura, T., and Palmer, M. (2013a).
The 1st workshop on events: Definition, detec-
tion, coreference, and representation.
Hovy, E., Mitamura, T., Verdejo, F., Araki, J.,
and Philpot, A. (2013b). Events are not sim-
ple: Identity, non-identity, and quasi-identity.
NAACL HLT 2013, page 21.
Klyne, G. and Carroll, J. J. (2004). Resource
description framework (rdf): Concepts and ab-
stract syntax. w3c recommendation, 10 feb.
2004.
Lee, H., Recasens, M., Chang, A., Surdeanu,
M., and Jurafsky, D. (2012). Joint entity and
event coreference resolution across documents.
In Proceedings of the 2012 Joint Conference
on Empirical Methods in Natural Language
Processing and Computational Natural Lan-
guage Learning, pages 489–500. Association
for Computational Linguistics.
Ogren, P. V., Wetzler, P. G., and Bethard, S. J.
(2008). Cleartk: A uima toolkit for statisti-
cal natural language processing. Towards En-
hanced Interoperability for Large HLT Systems:
UIMA for NLP, 32.
Pivovarova, L., Huttunen, S., and Yangarber, R.
(2013). Event representation across genre.
NAACL HLT 2013, page 29.
Rao, D., McNamee, P., and Dredze, M. (2010).
Streaming cross document entity coreference
resolution. In Proceedings of the 23rd Inter-
national Conference on Computational Linguis-
tics: Posters, pages 1050–1058. Association for
Computational Linguistics.
Roth, M. and Frank, A. (2012). Aligning predicate
argument structures in monolingual comparable
texts: A new corpus for a new task. In Proceed-
ings of the First Joint Conference on Lexical
and Computational Semantics-Volume 1: Pro-
ceedings of the main conference and the shared
</reference>
<page confidence="0.995961">
43
</page>
<reference confidence="0.999223882352941">
task, and Volume 2: Proceedings of the Sixth In-
ternational Workshop on Semantic Evaluation,
pages 218–227. Association for Computational
Linguistics.
Shaw, R. (2013). A semantic tool for historical
events. NAACL HLT 2013, page 38.
UzZaman, N., Llorens, H., Derczynski, L., Verha-
gen, M., Allen, J., and Pustejovsky, J. (2013).
Semeval-2013 task 1: Tempeval-3: Evaluat-
ing time expressions, events, and temporal rela-
tions. In Second joint conference on lexical and
computational semantics (* SEM), volume 2,
pages 1–9.
Wolfe, T., Van Durme, B., Dredze, M., Andrews,
N., Beller, C., Callison-Burch, C., DeYoung,
J., Snyder, J., Weese, J., Xu, T., et al. (2013).
Parma: A predicate argument aligner.
</reference>
<page confidence="0.999292">
44
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.957723">
<title confidence="0.994711">Conceptual and Practical Steps in Event Coreference Analysis of Large-scale Data</title>
<author confidence="0.990985">Torabi Jonathan Yulia</author>
<author confidence="0.990985">Manfred</author>
<affiliation confidence="0.996674">Cluster of Excellence, Saarland University, Computational Linguistics, University of Potsdam,</affiliation>
<abstract confidence="0.9986195">A simple conceptual model is employed to investigate events, and break the task of coreference resolution into two steps: semantic class detection and similaritybased matching. With this perspective an algorithm is implemented to cluster event mentions in a large-scale corpus. Results on test data from AQUAINT TimeML, which we annotated manually with coreference links, reveal how semantic conventions vs. information available in the context of event mentions affect decisions in coreference analysis.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C A Bejan</author>
<author>S Harabagiu</author>
</authors>
<title>Unsupervised event coreference resolution with rich linguistic features.</title>
<date>2010</date>
<booktitle>In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>1412--1422</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="3054" citStr="Bejan and Harabagiu, 2010" startWordPosition="464" endWordPosition="467">d use a minimal linguistic procedure to extract values from text for every event attribute. This system is being developed to work within a pipeline annotation project where incremental clustering performs efficiently on large-scale data. In order to evaluate our proposed method, we have manually annotated a random selection of event mentions in the AQUAINT TimeML corpus (UzZaman et al., 2013). Performance of the automatic system in pair-wise coreference resolution is comparable to that of more sophisticated clustering methods, which at the same time consider a variety of linguistic features (Bejan and Harabagiu, 2010). The differences between the human annotator pair-wise decisions and the output of our clustering algorithm reveal interesting cases where coreference labeling is performed based upon the adapted semantic convention rather than information available in the text about time, location and participants of an event instance. In the following, we provide an overview of the adapted ontology, background on event coreference, and finally our implementation and experiments within the proposed framework on real data as well as the annotated corpus. We point to related work at the various appropriate pla</context>
<context position="6382" citStr="Bejan and Harabagiu (2010)" startWordPosition="989" endWordPosition="992">, though, is often left implicit, even in recently published event annotation guidelines. For example in a Grounded Annotation for Events (GAF, Fokkens et al. 2013), event mentions are clearly distinguished from instances. However, the first two layers have been taken as one, i.e., the semantic layer. In their work, event type which is an artifact of the adapted semantic ontology (SEM, Klyne and Carroll 2004), implicitly works similar to the classes in our definition. Nevertheless, these three layers are intuitively separable and familiar for linguists working on event and entity recognition. Bejan and Harabagiu (2010), for example, introduce the event coreference resolution with an example put into a similar three-layer hierarchy, despite their purely data-driven approach leaving off prior semantic specifications. Here, we explain each layer of the model separately. Issues specific to coreference detection will be presented in the following section. 2.1 Event Classes The first layer of the ontology determines event type definitions. Each class can have totally different attributes depending on the interests of a particular study. Some events might be identified only by their time and place, while others by</context>
<context position="13376" citStr="Bejan and Harabagiu, 2010" startWordPosition="2112" endWordPosition="2115">l plural mentions are not treated semantically differently, they only point to several instances, thus, are coreferential with any single mention of them as long as the attribute values allow3. With respect to the above discussion, links from layer 2 to 3 represent many-to-many relations: an event instance can have several mentions in the text, and a single mention can point to more than one event instance at a time. 3 Towards Coreference Analysis In terms of method, two different approaches have been tried in the literature under the notion of event coreference resolution (Chen and Ji, 2009; Bejan and Harabagiu, 2010; Lee et al., 2012; Hovy et al., 2013b). The first and most theoretically founded strategy is to decide for every pair of event mentions, whether or not they refer to the same event instance. Since in this approach decisions are independently made for every pair of event mentions, a clear formalism is needed to determine exactly what types of coreference are possible and how they are detected by looking at textual mentions (Chen and Ji, 2009; Hovy et al., 2013b). Some related work on predicate alignment also fit into this category of research (Roth and Frank, 2012; Wolfe et al., 2013). Alterna</context>
<context position="22703" citStr="Bejan and Harabagiu 2010" startWordPosition="3612" endWordPosition="3615">elated types. If no cluster is a candidate, a singleton cluster is created and its class is added to the index of visited event types (synsets). If candidate clusters already exist, we calculate the feature-based similarity score for each. If the best score is below a threshold a new singleton cluster is created but in this case for the reason that, perhaps, not a new type but a new event instance is visited. 5 Manual Annotation and Evaluation The Event Coreference Bank, which is the largest available corpus with cross-document coreference labels, supports only a within topic evaluation (ECB, Bejan and Harabagiu 2010). In order to perform a more realistic evaluation of the method presented in this paper, we selected a subset of events from the AQUAINT TimeML corpus and annotated those with coreferentiality. The AQUAINT TimeML data has recently served as one of the benchmarks in the TempEval shared task (UzZaman et al., 2013) and is available for public use7. It contains 73 news report documents from four topics, annotated with 4431 event mentions and 652 temporal expressions which make it suitable for our task. Two main differences between our annotation and the ECB data are: 1) event mentions here are sel</context>
</contexts>
<marker>Bejan, Harabagiu, 2010</marker>
<rawString>Bejan, C. A. and Harabagiu, S. (2010). Unsupervised event coreference resolution with rich linguistic features. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 1412–1422. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Blessing</author>
<author>J Sonntag</author>
<author>F Kliche</author>
<author>U Heid</author>
<author>J Kuhn</author>
<author>M Stede</author>
</authors>
<title>Towards a tool for interactive concept building for large scale analysis in the humanities.</title>
<date>2013</date>
<booktitle>In Proceedings of the 7th Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities,</booktitle>
<pages>55--64</pages>
<institution>Sofia, Bulgaria. Association for Computational Linguistics.</institution>
<contexts>
<context position="17640" citStr="Blessing et al., 2013" startWordPosition="2787" endWordPosition="2790">neral suitable for a pipeline project by efficiently providing single visits of every mention in its context. Feature values of a mention can be extracted from the document text, used for clustering, and combined 4For example, multi-assignment would allow plural mentions to take part in several different clusters, each representative of one event instance. 38 into the feature representation of the assigned cluster in a compressed format. 4 Event Coreference System The original data in our study is a text corpus automatically annotated with several layers of syntactic and semantic information (Blessing et al., 2013). The English portion includes news and commentary articles of several British and American publishers from 1990 to 2012. An approximate average of 100 event mentions per document with the large number of total documents per month (avg. 1200) requires us to think of different ways to reduce the search space and also design a low-complexity coreference resolution algorithm. 4.1 Partitioning In cross-document analysis, typically, a topicbased document partitioning is performed prior to the coreference chain detection (Lee et al., 2012; Cybulska and Vossen, 2013). Since we are interested to track</context>
<context position="20059" citStr="Blessing et al., 2013" startWordPosition="3183" endWordPosition="3186"> the extracted text span and take all verbal and nominal mentions into account. In the current implementation all event classes are identified by a fixed set of attributes including Timestamps and Related Entities. While being very coarse-grained, this way of attribution is quite intuitive: events are identified by times, places and participants directly or vaguely attached to them. Temporal expressions are extracted also by ClearTK and normalized using SUTime (Chang and Manning, 2012). Named entities of all types except Date are used which are obtained from previous work on the same dataset (Blessing et al., 2013). 4.3 The Two-step Algorithm Having all required annotations, we select a time window and perform the following two steps for event mentions of the TimeML classes Occurrence, I-Action, Perception and Aspectual5. 1) Semantic class identification: WordNet synsets provide a rich resource in order to be adapted as event classes (Fellbaum, 1999). They cover a large lexicon and the variety of relational links between words enables us to specify a clear semantic convention for the coreference system. In addition to the mentions coming from the same synset, we allow coreference between events belongin</context>
</contexts>
<marker>Blessing, Sonntag, Kliche, Heid, Kuhn, Stede, 2013</marker>
<rawString>Blessing, A., Sonntag, J., Kliche, F., Heid, U., Kuhn, J., and Stede, M. (2013). Towards a tool for interactive concept building for large scale analysis in the humanities. In Proceedings of the 7th Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities, pages 55–64, Sofia, Bulgaria. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A X Chang</author>
<author>C Manning</author>
</authors>
<title>Sutime: A library for recognizing and normalizing time expressions.</title>
<date>2012</date>
<booktitle>In LREC,</booktitle>
<pages>3735--3740</pages>
<contexts>
<context position="19927" citStr="Chang and Manning, 2012" startWordPosition="3160" endWordPosition="3163">ntification In order to extract event mentions we use the ClearTK UIMA library (Ogren et al., 2008), check the PoS of the head word in the extracted text span and take all verbal and nominal mentions into account. In the current implementation all event classes are identified by a fixed set of attributes including Timestamps and Related Entities. While being very coarse-grained, this way of attribution is quite intuitive: events are identified by times, places and participants directly or vaguely attached to them. Temporal expressions are extracted also by ClearTK and normalized using SUTime (Chang and Manning, 2012). Named entities of all types except Date are used which are obtained from previous work on the same dataset (Blessing et al., 2013). 4.3 The Two-step Algorithm Having all required annotations, we select a time window and perform the following two steps for event mentions of the TimeML classes Occurrence, I-Action, Perception and Aspectual5. 1) Semantic class identification: WordNet synsets provide a rich resource in order to be adapted as event classes (Fellbaum, 1999). They cover a large lexicon and the variety of relational links between words enables us to specify a clear semantic conventi</context>
</contexts>
<marker>Chang, Manning, 2012</marker>
<rawString>Chang, A. X. and Manning, C. (2012). Sutime: A library for recognizing and normalizing time expressions. In LREC, pages 3735–3740.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Z Chen</author>
<author>H Ji</author>
</authors>
<title>Graph-based event coreference resolution.</title>
<date>2009</date>
<booktitle>In Proceedings of the 2009 Workshop on Graph-based Methods for Natural Language Processing,</booktitle>
<pages>54--57</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="13349" citStr="Chen and Ji, 2009" startWordPosition="2108" endWordPosition="2111">ons. In 37 our model plural mentions are not treated semantically differently, they only point to several instances, thus, are coreferential with any single mention of them as long as the attribute values allow3. With respect to the above discussion, links from layer 2 to 3 represent many-to-many relations: an event instance can have several mentions in the text, and a single mention can point to more than one event instance at a time. 3 Towards Coreference Analysis In terms of method, two different approaches have been tried in the literature under the notion of event coreference resolution (Chen and Ji, 2009; Bejan and Harabagiu, 2010; Lee et al., 2012; Hovy et al., 2013b). The first and most theoretically founded strategy is to decide for every pair of event mentions, whether or not they refer to the same event instance. Since in this approach decisions are independently made for every pair of event mentions, a clear formalism is needed to determine exactly what types of coreference are possible and how they are detected by looking at textual mentions (Chen and Ji, 2009; Hovy et al., 2013b). Some related work on predicate alignment also fit into this category of research (Roth and Frank, 2012; W</context>
</contexts>
<marker>Chen, Ji, 2009</marker>
<rawString>Chen, Z. and Ji, H. (2009). Graph-based event coreference resolution. In Proceedings of the 2009 Workshop on Graph-based Methods for Natural Language Processing, pages 54–57. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cybulska</author>
<author>P Vossen</author>
</authors>
<title>Semantic relations between events and their time, locations and participants for event coreference resolution.</title>
<date>2013</date>
<booktitle>In RANLP, volume 2013,</booktitle>
<pages>8</pages>
<contexts>
<context position="18206" citStr="Cybulska and Vossen, 2013" startWordPosition="2875" endWordPosition="2878">f syntactic and semantic information (Blessing et al., 2013). The English portion includes news and commentary articles of several British and American publishers from 1990 to 2012. An approximate average of 100 event mentions per document with the large number of total documents per month (avg. 1200) requires us to think of different ways to reduce the search space and also design a low-complexity coreference resolution algorithm. 4.1 Partitioning In cross-document analysis, typically, a topicbased document partitioning is performed prior to the coreference chain detection (Lee et al., 2012; Cybulska and Vossen, 2013). Since we are interested to track discussions about a certain event possibly appearing in different contexts, this technique is not desired as coreference between mentions of a single real word event in two different topics would remain unknown. For example, when an articles reviews several instances of a certain event type such as different attacks that has happened in a wide temporal range and in different locations, such articles would not be included in any of the individual topics each focused on one event instance. As an alternative to the previous approach, we perform a time-window par</context>
</contexts>
<marker>Cybulska, Vossen, 2013</marker>
<rawString>Cybulska, A. and Vossen, P. (2013). Semantic relations between events and their time, locations and participants for event coreference resolution. In RANLP, volume 2013, page 8.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Cybulska</author>
<author>P Vossen</author>
</authors>
<title>Guidelines for ecb+ annotation of events and their coreference.</title>
<date>2014</date>
<tech>Technical report, Technical Report NWR-2014-1,</tech>
<institution>VU University Amsterdam.</institution>
<contexts>
<context position="24709" citStr="Cybulska and Vossen (2014)" startWordPosition="3937" endWordPosition="3940"> than non-coreferent ones, we adapted a heuristic measure to make sure that we will have some similar mentions among the 100 records. Therefore, we would call it a semirandom selection, still different from the fully selective strategy employed for ECB. of 4950 pairs resulting from 100 selected event mentions ( 100! 2!(100−2)!) was done with the help of a simple user interface, which showed each of the two event mentions within its context to the annotator and asked for pushing yes, no or next (undecided) button to proceed to the next pair. After studying the annotation guideline published by Cybulska and Vossen (2014), our expert spent some hours during a week for the job. Decisions made in shorter than 500 ms were revised afterwards. There was one no answer which the annotator found unsure after revision, as it resulted in a transitivity violation, but we left it unchanged due to the nature of pair-wise decisions. In the end we came up with a total of 36 yes, and 4914 no pairs. 6 Experiments This section provides an insight into how clusters of event mentions are created for a portion of our large news corpus. We also run the algorithm on the manually annotated data to perform an error analysis. 6.1 Const</context>
</contexts>
<marker>Cybulska, Vossen, 2014</marker>
<rawString>Cybulska, A. and Vossen, P. (2014). Guidelines for ecb+ annotation of events and their coreference. Technical report, Technical Report NWR-2014-1, VU University Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Davidson</author>
</authors>
<title>The individuation of events.</title>
<date>1969</date>
<booktitle>In Essays in honor of Carl G. Hempel,</booktitle>
<pages>216--234</pages>
<publisher>Springer.</publisher>
<contexts>
<context position="1993" citStr="Davidson, 1969" startWordPosition="297" endWordPosition="298">ruct clusters of, so-called, coreferential events. We refer to the former task as a formal convention, a vital step in order for useful results to be delivered to the human text analysts. The latter is basically an information extraction task once a clear problem specification is obtained. The main objective of the paper is to shed light on each of the above tasks by applying a three-layer event ontology1. Terminologies from 1The term ontology is used to refer to a conceptual model of events and connections between them rather than a particular knowledge base implementation. earlier theories (Davidson, 1969) up until recent work (Hovy et al., 2013a) are combined to draw an integrated picture of the event coreference problem. The semantic layer is established with the help of WordNet synsets. Related entities and timestamps are considered as fundamental event attributes that in practice can be resolved from the context of a mention. We implement an incremental event clustering algorithm with respect to the adapted ontology of events and use a minimal linguistic procedure to extract values from text for every event attribute. This system is being developed to work within a pipeline annotation proje</context>
<context position="10873" citStr="Davidson, 1969" startWordPosition="1701" endWordPosition="1702"> and paraphrasing indicate that the modelers have a wide choice of identity definition for event types. In section 4.3 we explain how to adapt an extended version of synonymy in order to define event classes prior to similarity-based clustering of the mentions. 2.2 Event Instances Layer 2 indicates perfect instantiation, representative of the human common sense intuition of phenomena in real world. Instances in this layer correspond to the Davidsonian notion of events as concrete objects with certain locations in space-time, something that is happening, happened, or will happen at some point (Davidson, 1969). Therefore, links from classes to instances represent a one-to-many relation. Every instance of the EARTHQUAKE is determined with a unique set of attribute values. Two EARTHQUAKE instantiations with exactly similar attribute values are just identical. In order to keep a clear and simple representation specific to the study of coreference, the model does not allow any connection or relation between two event instances unless via their classes. Note that in Figure 1, for each realized object, only attributes included in the formalism layer are presented with their values, while in reality event</context>
</contexts>
<marker>Davidson, 1969</marker>
<rawString>Davidson, D. (1969). The individuation of events. In Essays in honor of Carl G. Hempel, pages 216–234. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Fellbaum</author>
</authors>
<date>1999</date>
<publisher>WordNet. Wiley Online Library.</publisher>
<contexts>
<context position="20401" citStr="Fellbaum, 1999" startWordPosition="3236" endWordPosition="3237">irectly or vaguely attached to them. Temporal expressions are extracted also by ClearTK and normalized using SUTime (Chang and Manning, 2012). Named entities of all types except Date are used which are obtained from previous work on the same dataset (Blessing et al., 2013). 4.3 The Two-step Algorithm Having all required annotations, we select a time window and perform the following two steps for event mentions of the TimeML classes Occurrence, I-Action, Perception and Aspectual5. 1) Semantic class identification: WordNet synsets provide a rich resource in order to be adapted as event classes (Fellbaum, 1999). They cover a large lexicon and the variety of relational links between words enables us to specify a clear semantic convention for the coreference system. In addition to the mentions coming from the same synset, we allow coreference between events belonging to two different synsets that are directly connected via hypernymy or morphosemantic links. While every WordNet synset comprises words only from a single part of speech, morphosemantic relations allow the model to establish cross-PoS identity among words sharing a stem with the same meaning which is desired here: observe (verb) and observ</context>
</contexts>
<marker>Fellbaum, 1999</marker>
<rawString>Fellbaum, C. (1999). WordNet. Wiley Online Library.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C J Fillmore</author>
<author>C R Johnson</author>
<author>M R Petruck</author>
</authors>
<title>Background to framenet. International journal of lexicography,</title>
<date>2003</date>
<pages>16--3</pages>
<contexts>
<context position="7390" citStr="Fillmore et al., 2003" startWordPosition="1145" endWordPosition="1148">gy determines event type definitions. Each class can have totally different attributes depending on the interests of a particular study. Some events might be identified only by their time and place, while others by participants of prioritized importance. A very flat semantic representation would attribute all types of events with a fixed set of entities, e.g.: participants, time and location. Note, however, that structural and semantic differences exist among events of different natures, even if these complex phenomena are reduced into something more familiar and tangible such as verb frames (Fillmore et al., 2003). For example, a KILLING event is essentially attributed with its Agent and Patient, while salient attributes of an EARTHQUAKE include Location, Magnitude, Time and Human Impacts, in a typical news context. This becomes even more clear when event types are taken and compared against one another from different genres of text (Pivovarova et al., 2013; Shaw, 2013). A scientific attitude toward the analysis of EARTHQUAKE events might characterize them with Natural Impacts rather than Human Impacts. Thus, the first layer of the model needs to be designed with respect to the specific information ext</context>
</contexts>
<marker>Fillmore, Johnson, Petruck, 2003</marker>
<rawString>Fillmore, C. J., Johnson, C. R., and Petruck, M. R. (2003). Background to framenet. International journal of lexicography, 16(3):235–250.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M A Finlayson</author>
</authors>
<title>Java libraries for accessing the princeton wordnet: Comparison and evaluation.</title>
<date>2014</date>
<booktitle>In Proceedings of the 7th Global Wordnet Conference,</booktitle>
<pages>78--85</pages>
<contexts>
<context position="21090" citStr="Finlayson, 2014" startWordPosition="3346" endWordPosition="3347">words enables us to specify a clear semantic convention for the coreference system. In addition to the mentions coming from the same synset, we allow coreference between events belonging to two different synsets that are directly connected via hypernymy or morphosemantic links. While every WordNet synset comprises words only from a single part of speech, morphosemantic relations allow the model to establish cross-PoS identity among words sharing a stem with the same meaning which is desired here: observe (verb) and observation (noun)6. A Java library is employed to access WordNet annotations (Finlayson, 2014). 2) Similarity-based clustering: A mention is compared against previously constructed clusters with respect to the attribute values that are extractable from its context. In order to fill the Timestamps attribute we have employed a back-off strategy: first we look at all time expressions in the same paragraph where the event mention appears, if we found enough temporal information, that would suffice. Otherwise, we look into the content of the entire article for temporal expressions. The Related Entities at5Other types, namely, Report, State and I-State events are not interesting for us, ther</context>
</contexts>
<marker>Finlayson, 2014</marker>
<rawString>Finlayson, M. A. (2014). Java libraries for accessing the princeton wordnet: Comparison and evaluation. In Proceedings of the 7th Global Wordnet Conference, pages 78–85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Fokkens</author>
<author>M van Erp</author>
<author>P Vossen</author>
<author>S Tonelli</author>
<author>W R van Hage</author>
<author>B SynerScope</author>
<author>L Serafini</author>
<author>R Sprugnoli</author>
<author>J Hoeksema</author>
</authors>
<title>Gaf: A grounded annotation framework for events.</title>
<date>2013</date>
<booktitle>In NAACL HLT,</booktitle>
<volume>volume</volume>
<pages>11</pages>
<marker>Fokkens, van Erp, Vossen, Tonelli, van Hage, SynerScope, Serafini, Sprugnoli, Hoeksema, 2013</marker>
<rawString>Fokkens, A., van Erp, M., Vossen, P., Tonelli, S., van Hage, W. R., SynerScope, B., Serafini, L., Sprugnoli, R., and Hoeksema, J. (2013). Gaf: A grounded annotation framework for events. In NAACL HLT, volume 2013, page 11.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Hasler</author>
<author>C Orasan</author>
</authors>
<title>Do coreferential arguments make event mentions coreferential.</title>
<date>2009</date>
<booktitle>In Proc. the 7th Discourse Anaphora and Anaphor Resolution Colloquium (DAARC</booktitle>
<contexts>
<context position="33312" citStr="Hasler and Orasan, 2009" startWordPosition="5367" endWordPosition="5370">and recall on the test data. In the future, we would like to investigate the effect of linguistic features on improving the performance of the algorithm. In particular, it would be interesting to see whether exact specification of event head arguments would outperform the vague attribution with related entities. The state-of-the-art result in the supervised predicate alignment approach is a hint for rich linguistic features to be helpful (Wolfe et al., 2013). On the other hand, depending on the adapted event identity definition, coreferential events might not really share identical arguments (Hasler and Orasan, 2009). There are differences between real data collections and the available annotated corpora, including ours, which needs to be investigated as well. For example, small collections do not include enough same-class event mentions pointing to different event instances, and it brings about unrealistic evaluations. Furthermore, annotation guidelines are usually biased towards a specific theory of event identity which affect the resulting data in one way or another. Some applications demand different semantic conventions perhaps with broader/narrower definition of identity. This is a dilemma that need</context>
</contexts>
<marker>Hasler, Orasan, 2009</marker>
<rawString>Hasler, L. and Orasan, C. (2009). Do coreferential arguments make event mentions coreferential. In Proc. the 7th Discourse Anaphora and Anaphor Resolution Colloquium (DAARC 2009).</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Hobbs</author>
<author>J Pustejovsky</author>
</authors>
<title>Annotating and reasoning about time and events.</title>
<date>2003</date>
<booktitle>In Proceedings ofAAAI Spring Symposium on Logical Formalizations of Commonsense Reasoning.</booktitle>
<contexts>
<context position="23758" citStr="Hobbs and Pustejovsky, 2003" startWordPosition="3784" endWordPosition="3787">t mentions and 652 temporal expressions which make it suitable for our task. Two main differences between our annotation and the ECB data are: 1) event mentions here are selected semirandomly8 and across topics rather than topicbased, 2) they are shown pair-wise to the annotator (in order to catch the transitivity patterns after the analysis), whereas, in the ECB, event mentions are clustered. Furthermore, the data already comes with manually assigned mention boundaries, event types, temporal expressions and links between events and temporal expressions, all according to the TimeML standards (Hobbs and Pustejovsky, 2003). These serve exactly as features that our algorithm uses for construction of clusters. We only had to perform named entity recognition automatically to have data ready for evaluation of the model. The manual annotation 7http://www.cs.york.ac.uk/ semeval-2013/task1 8Since the number of coreferential mentions is much smaller than non-coreferent ones, we adapted a heuristic measure to make sure that we will have some similar mentions among the 100 records. Therefore, we would call it a semirandom selection, still different from the fully selective strategy employed for ECB. of 4950 pairs resulti</context>
</contexts>
<marker>Hobbs, Pustejovsky, 2003</marker>
<rawString>Hobbs, J. and Pustejovsky, J. (2003). Annotating and reasoning about time and events. In Proceedings ofAAAI Spring Symposium on Logical Formalizations of Commonsense Reasoning.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Hovy</author>
<author>T Mitamura</author>
<author>M Palmer</author>
</authors>
<title>The 1st workshop on events: Definition, detection, coreference, and representation.</title>
<date>2013</date>
<contexts>
<context position="2033" citStr="Hovy et al., 2013" startWordPosition="303" endWordPosition="306">tial events. We refer to the former task as a formal convention, a vital step in order for useful results to be delivered to the human text analysts. The latter is basically an information extraction task once a clear problem specification is obtained. The main objective of the paper is to shed light on each of the above tasks by applying a three-layer event ontology1. Terminologies from 1The term ontology is used to refer to a conceptual model of events and connections between them rather than a particular knowledge base implementation. earlier theories (Davidson, 1969) up until recent work (Hovy et al., 2013a) are combined to draw an integrated picture of the event coreference problem. The semantic layer is established with the help of WordNet synsets. Related entities and timestamps are considered as fundamental event attributes that in practice can be resolved from the context of a mention. We implement an incremental event clustering algorithm with respect to the adapted ontology of events and use a minimal linguistic procedure to extract values from text for every event attribute. This system is being developed to work within a pipeline annotation project where incremental clustering performs</context>
<context position="10175" citStr="Hovy et al. (2013" startWordPosition="1586" endWordPosition="1589"> has killed 186 people, sent nearly 8,200 to hospitals and created a dire dearth of drinking water, Chinese state-run Xinhua reported Sunday. Earlier reports had said as many as 11,200 people were injured. ” Mention 4 “ Shortly after noon on November 22, 1963, President John F. Kennedy was assassinated as he rode in a motorcade through Dealey Plaza. “ Class KILLING Agent; Patient; Time; Location; Class SHOOTING Agent; Patient; Time; Location; Weapon; Class EARTQUAKE Magnitude; Human Impacts; Time; Location; m q 1 n Figure 1: A three-layer ontology of events: classes, instances and mentions of Hovy et al. (2013b) on different types of identity according to lexicosyntactic similarity, synonymy and paraphrasing indicate that the modelers have a wide choice of identity definition for event types. In section 4.3 we explain how to adapt an extended version of synonymy in order to define event classes prior to similarity-based clustering of the mentions. 2.2 Event Instances Layer 2 indicates perfect instantiation, representative of the human common sense intuition of phenomena in real world. Instances in this layer correspond to the Davidsonian notion of events as concrete objects with certain locations i</context>
<context position="12668" citStr="Hovy et al. (2013" startWordPosition="1995" endWordPosition="1998">fully representative mention, which most clearly expresses the target event by providing all necessary attribute values. Fokkens et al. (2013) refer to such a mention as the trigger event. Sometimes it is possible that the context is even more informative than necessary to resolve the unique real world corresponding event (see details about the impact of the earthquake in mention 3, Figure 1). In natural text a mention can refer to more than one event instance of the same type, for example when a plural case is used: “ ... droughts, floods and earthquakes cost China 421 billion yuan in 2013”. Hovy et al. (2013b) propose partial coreference between singular and plural mentions. In 37 our model plural mentions are not treated semantically differently, they only point to several instances, thus, are coreferential with any single mention of them as long as the attribute values allow3. With respect to the above discussion, links from layer 2 to 3 represent many-to-many relations: an event instance can have several mentions in the text, and a single mention can point to more than one event instance at a time. 3 Towards Coreference Analysis In terms of method, two different approaches have been tried in t</context>
<context position="14924" citStr="Hovy et al. (2013" startWordPosition="2364" endWordPosition="2367">nd Harabagiu, 2010; Lee et al., 2012). Some formal and technical differences exist between the two approaches. Boolean choice: traditionally, clusters shape with the idea that all mentions within a cluster are of the same identity. Every randomly chosen pair of mentions are coreferent if they are found in a single cluster at the end, and non-coreferent otherwise. Therefore, taking this approach implies a level of formalism, which rules out partial coreference. On the other hand, pair-wise classification could consider partial coreference whenever 3The other type of quasi-identity discussed by Hovy et al. (2013b) engaged with sub-events is handled in the semantic level. two event mentions are neither identical nor totally different (Hovy et al., 2013b). Soft-clustering can compensate some deficiencies of traditional clustering approaches4. Transitivity: all mentions in a single cluster are coreferential, whereas pair-wise labels allow for non-transitive relations among event mentions. Depending on the specific goal of a study, this could be an advantage or a disadvantage. Lack of transitivity could be considered as an error if it is not consciously permitted in the underlying semantic formalism. Com</context>
</contexts>
<marker>Hovy, Mitamura, Palmer, 2013</marker>
<rawString>Hovy, E., Mitamura, T., and Palmer, M. (2013a). The 1st workshop on events: Definition, detection, coreference, and representation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Hovy</author>
<author>T Mitamura</author>
<author>F Verdejo</author>
<author>J Araki</author>
<author>A Philpot</author>
</authors>
<title>Events are not simple: Identity, non-identity, and quasi-identity.</title>
<date>2013</date>
<booktitle>NAACL HLT 2013,</booktitle>
<pages>21</pages>
<contexts>
<context position="2033" citStr="Hovy et al., 2013" startWordPosition="303" endWordPosition="306">tial events. We refer to the former task as a formal convention, a vital step in order for useful results to be delivered to the human text analysts. The latter is basically an information extraction task once a clear problem specification is obtained. The main objective of the paper is to shed light on each of the above tasks by applying a three-layer event ontology1. Terminologies from 1The term ontology is used to refer to a conceptual model of events and connections between them rather than a particular knowledge base implementation. earlier theories (Davidson, 1969) up until recent work (Hovy et al., 2013a) are combined to draw an integrated picture of the event coreference problem. The semantic layer is established with the help of WordNet synsets. Related entities and timestamps are considered as fundamental event attributes that in practice can be resolved from the context of a mention. We implement an incremental event clustering algorithm with respect to the adapted ontology of events and use a minimal linguistic procedure to extract values from text for every event attribute. This system is being developed to work within a pipeline annotation project where incremental clustering performs</context>
<context position="10175" citStr="Hovy et al. (2013" startWordPosition="1586" endWordPosition="1589"> has killed 186 people, sent nearly 8,200 to hospitals and created a dire dearth of drinking water, Chinese state-run Xinhua reported Sunday. Earlier reports had said as many as 11,200 people were injured. ” Mention 4 “ Shortly after noon on November 22, 1963, President John F. Kennedy was assassinated as he rode in a motorcade through Dealey Plaza. “ Class KILLING Agent; Patient; Time; Location; Class SHOOTING Agent; Patient; Time; Location; Weapon; Class EARTQUAKE Magnitude; Human Impacts; Time; Location; m q 1 n Figure 1: A three-layer ontology of events: classes, instances and mentions of Hovy et al. (2013b) on different types of identity according to lexicosyntactic similarity, synonymy and paraphrasing indicate that the modelers have a wide choice of identity definition for event types. In section 4.3 we explain how to adapt an extended version of synonymy in order to define event classes prior to similarity-based clustering of the mentions. 2.2 Event Instances Layer 2 indicates perfect instantiation, representative of the human common sense intuition of phenomena in real world. Instances in this layer correspond to the Davidsonian notion of events as concrete objects with certain locations i</context>
<context position="12668" citStr="Hovy et al. (2013" startWordPosition="1995" endWordPosition="1998">fully representative mention, which most clearly expresses the target event by providing all necessary attribute values. Fokkens et al. (2013) refer to such a mention as the trigger event. Sometimes it is possible that the context is even more informative than necessary to resolve the unique real world corresponding event (see details about the impact of the earthquake in mention 3, Figure 1). In natural text a mention can refer to more than one event instance of the same type, for example when a plural case is used: “ ... droughts, floods and earthquakes cost China 421 billion yuan in 2013”. Hovy et al. (2013b) propose partial coreference between singular and plural mentions. In 37 our model plural mentions are not treated semantically differently, they only point to several instances, thus, are coreferential with any single mention of them as long as the attribute values allow3. With respect to the above discussion, links from layer 2 to 3 represent many-to-many relations: an event instance can have several mentions in the text, and a single mention can point to more than one event instance at a time. 3 Towards Coreference Analysis In terms of method, two different approaches have been tried in t</context>
<context position="14924" citStr="Hovy et al. (2013" startWordPosition="2364" endWordPosition="2367">nd Harabagiu, 2010; Lee et al., 2012). Some formal and technical differences exist between the two approaches. Boolean choice: traditionally, clusters shape with the idea that all mentions within a cluster are of the same identity. Every randomly chosen pair of mentions are coreferent if they are found in a single cluster at the end, and non-coreferent otherwise. Therefore, taking this approach implies a level of formalism, which rules out partial coreference. On the other hand, pair-wise classification could consider partial coreference whenever 3The other type of quasi-identity discussed by Hovy et al. (2013b) engaged with sub-events is handled in the semantic level. two event mentions are neither identical nor totally different (Hovy et al., 2013b). Soft-clustering can compensate some deficiencies of traditional clustering approaches4. Transitivity: all mentions in a single cluster are coreferential, whereas pair-wise labels allow for non-transitive relations among event mentions. Depending on the specific goal of a study, this could be an advantage or a disadvantage. Lack of transitivity could be considered as an error if it is not consciously permitted in the underlying semantic formalism. Com</context>
</contexts>
<marker>Hovy, Mitamura, Verdejo, Araki, Philpot, 2013</marker>
<rawString>Hovy, E., Mitamura, T., Verdejo, F., Araki, J., and Philpot, A. (2013b). Events are not simple: Identity, non-identity, and quasi-identity. NAACL HLT 2013, page 21.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Klyne</author>
<author>J J Carroll</author>
</authors>
<title>Resource description framework (rdf): Concepts and abstract syntax. w3c recommendation,</title>
<date>2004</date>
<contexts>
<context position="6168" citStr="Klyne and Carroll 2004" startWordPosition="958" endWordPosition="961">ances, and event mentions. The distinction between the second and the third layer are more obvious and previously considered as clearly in other frameworks. The distinction between the first and the second layer, though, is often left implicit, even in recently published event annotation guidelines. For example in a Grounded Annotation for Events (GAF, Fokkens et al. 2013), event mentions are clearly distinguished from instances. However, the first two layers have been taken as one, i.e., the semantic layer. In their work, event type which is an artifact of the adapted semantic ontology (SEM, Klyne and Carroll 2004), implicitly works similar to the classes in our definition. Nevertheless, these three layers are intuitively separable and familiar for linguists working on event and entity recognition. Bejan and Harabagiu (2010), for example, introduce the event coreference resolution with an example put into a similar three-layer hierarchy, despite their purely data-driven approach leaving off prior semantic specifications. Here, we explain each layer of the model separately. Issues specific to coreference detection will be presented in the following section. 2.1 Event Classes The first layer of the ontolo</context>
</contexts>
<marker>Klyne, Carroll, 2004</marker>
<rawString>Klyne, G. and Carroll, J. J. (2004). Resource description framework (rdf): Concepts and abstract syntax. w3c recommendation, 10 feb. 2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Lee</author>
<author>M Recasens</author>
<author>A Chang</author>
<author>M Surdeanu</author>
<author>D Jurafsky</author>
</authors>
<title>Joint entity and event coreference resolution across documents.</title>
<date>2012</date>
<booktitle>In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning,</booktitle>
<pages>489--500</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="13394" citStr="Lee et al., 2012" startWordPosition="2116" endWordPosition="2119">reated semantically differently, they only point to several instances, thus, are coreferential with any single mention of them as long as the attribute values allow3. With respect to the above discussion, links from layer 2 to 3 represent many-to-many relations: an event instance can have several mentions in the text, and a single mention can point to more than one event instance at a time. 3 Towards Coreference Analysis In terms of method, two different approaches have been tried in the literature under the notion of event coreference resolution (Chen and Ji, 2009; Bejan and Harabagiu, 2010; Lee et al., 2012; Hovy et al., 2013b). The first and most theoretically founded strategy is to decide for every pair of event mentions, whether or not they refer to the same event instance. Since in this approach decisions are independently made for every pair of event mentions, a clear formalism is needed to determine exactly what types of coreference are possible and how they are detected by looking at textual mentions (Chen and Ji, 2009; Hovy et al., 2013b). Some related work on predicate alignment also fit into this category of research (Roth and Frank, 2012; Wolfe et al., 2013). Alternatively, in automat</context>
<context position="18178" citStr="Lee et al., 2012" startWordPosition="2871" endWordPosition="2874">h several layers of syntactic and semantic information (Blessing et al., 2013). The English portion includes news and commentary articles of several British and American publishers from 1990 to 2012. An approximate average of 100 event mentions per document with the large number of total documents per month (avg. 1200) requires us to think of different ways to reduce the search space and also design a low-complexity coreference resolution algorithm. 4.1 Partitioning In cross-document analysis, typically, a topicbased document partitioning is performed prior to the coreference chain detection (Lee et al., 2012; Cybulska and Vossen, 2013). Since we are interested to track discussions about a certain event possibly appearing in different contexts, this technique is not desired as coreference between mentions of a single real word event in two different topics would remain unknown. For example, when an articles reviews several instances of a certain event type such as different attacks that has happened in a wide temporal range and in different locations, such articles would not be included in any of the individual topics each focused on one event instance. As an alternative to the previous approach, </context>
</contexts>
<marker>Lee, Recasens, Chang, Surdeanu, Jurafsky, 2012</marker>
<rawString>Lee, H., Recasens, M., Chang, A., Surdeanu, M., and Jurafsky, D. (2012). Joint entity and event coreference resolution across documents. In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 489–500. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P V Ogren</author>
<author>P G Wetzler</author>
<author>S J Bethard</author>
</authors>
<title>Cleartk: A uima toolkit for statistical natural language processing. Towards Enhanced Interoperability for Large HLT Systems:</title>
<date>2008</date>
<journal>UIMA for NLP,</journal>
<volume>32</volume>
<contexts>
<context position="19402" citStr="Ogren et al., 2008" startWordPosition="3078" endWordPosition="3081">rform a time-window partitioning based on the article publication date before feeding the data into the coreference analysis algorithm. Larger windows would capture more coreference links: this is a parameter that can be set with respect to the available resources in tradeoff with the desired search scope. In the future, we would like to invent an efficient procedure to combine the resulting clusters from consecutive timewindows in order to further enhance the recall of the system. 4.2 Event Mention and Feature Identification In order to extract event mentions we use the ClearTK UIMA library (Ogren et al., 2008), check the PoS of the head word in the extracted text span and take all verbal and nominal mentions into account. In the current implementation all event classes are identified by a fixed set of attributes including Timestamps and Related Entities. While being very coarse-grained, this way of attribution is quite intuitive: events are identified by times, places and participants directly or vaguely attached to them. Temporal expressions are extracted also by ClearTK and normalized using SUTime (Chang and Manning, 2012). Named entities of all types except Date are used which are obtained from </context>
</contexts>
<marker>Ogren, Wetzler, Bethard, 2008</marker>
<rawString>Ogren, P. V., Wetzler, P. G., and Bethard, S. J. (2008). Cleartk: A uima toolkit for statistical natural language processing. Towards Enhanced Interoperability for Large HLT Systems: UIMA for NLP, 32.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Pivovarova</author>
<author>S Huttunen</author>
<author>R Yangarber</author>
</authors>
<title>Event representation across genre. NAACL HLT</title>
<date>2013</date>
<pages>29</pages>
<contexts>
<context position="7740" citStr="Pivovarova et al., 2013" startWordPosition="1201" endWordPosition="1204">tities, e.g.: participants, time and location. Note, however, that structural and semantic differences exist among events of different natures, even if these complex phenomena are reduced into something more familiar and tangible such as verb frames (Fillmore et al., 2003). For example, a KILLING event is essentially attributed with its Agent and Patient, while salient attributes of an EARTHQUAKE include Location, Magnitude, Time and Human Impacts, in a typical news context. This becomes even more clear when event types are taken and compared against one another from different genres of text (Pivovarova et al., 2013; Shaw, 2013). A scientific attitude toward the analysis of EARTHQUAKE events might characterize them with Natural Impacts rather than Human Impacts. Thus, the first layer of the model needs to be designed with respect to the specific information extraction goals of the particular study, be it a pure linguistic or an applicationoriented one. Ambiguities about the granularity of attributes, subevent-ness, scope and most importantly, identity between event instances are dealt with at the definition layer for and between classes. For example, if the modeler wants to allow coreference between inst</context>
</contexts>
<marker>Pivovarova, Huttunen, Yangarber, 2013</marker>
<rawString>Pivovarova, L., Huttunen, S., and Yangarber, R. (2013). Event representation across genre. NAACL HLT 2013, page 29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Rao</author>
<author>P McNamee</author>
<author>M Dredze</author>
</authors>
<title>Streaming cross document entity coreference resolution.</title>
<date>2010</date>
<booktitle>In Proceedings of the 23rd International Conference on Computational Linguistics: Posters,</booktitle>
<pages>1050--1058</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="16684" citStr="Rao et al. (2010)" startWordPosition="2632" endWordPosition="2635">of cluster analysis is that it provides an exploratory framework to assess the nature of similar input records, and at the end it results in a global distributional representation. This is specially desired here, since computational research on event coreference is in its early ages. Evaluation corpora and methodology are still not established, thus, the problem is not yet in the phase of “look for higher precision”! The method we are going to propose in the next section combines a rule-based initial stage with a similarity-based clustering procedure. This is partially inspired by the work of Rao et al. (2010), where entity coreference links are looked up in high-volume streaming data. They employ a lexicon of named entities for cluster nomination to reduce the search space. Once a mention is visited only the candidates among all incrementally constructed clusters up to that point are examined. Incremental clustering strategies are in general suitable for a pipeline project by efficiently providing single visits of every mention in its context. Feature values of a mention can be extracted from the document text, used for clustering, and combined 4For example, multi-assignment would allow plural men</context>
</contexts>
<marker>Rao, McNamee, Dredze, 2010</marker>
<rawString>Rao, D., McNamee, P., and Dredze, M. (2010). Streaming cross document entity coreference resolution. In Proceedings of the 23rd International Conference on Computational Linguistics: Posters, pages 1050–1058. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M Roth</author>
<author>A Frank</author>
</authors>
<title>Aligning predicate argument structures in monolingual comparable texts: A new corpus for a new task.</title>
<date>2012</date>
<booktitle>In Proceedings of the First Joint Conference on Lexical and Computational Semantics-Volume 1: Proceedings of the main conference and the shared task, and Volume 2: Proceedings of the Sixth International Workshop on Semantic Evaluation,</booktitle>
<pages>218--227</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="13946" citStr="Roth and Frank, 2012" startWordPosition="2210" endWordPosition="2213">tion (Chen and Ji, 2009; Bejan and Harabagiu, 2010; Lee et al., 2012; Hovy et al., 2013b). The first and most theoretically founded strategy is to decide for every pair of event mentions, whether or not they refer to the same event instance. Since in this approach decisions are independently made for every pair of event mentions, a clear formalism is needed to determine exactly what types of coreference are possible and how they are detected by looking at textual mentions (Chen and Ji, 2009; Hovy et al., 2013b). Some related work on predicate alignment also fit into this category of research (Roth and Frank, 2012; Wolfe et al., 2013). Alternatively, in automatic event clustering, the objective is basically discovering event instances: all we know about an event in the world is the collective information obtained from mentions referring to that in a text corpus. Each cluster in the end ideally represents a unique event in reality with all its attribute values (Bejan and Harabagiu, 2010; Lee et al., 2012). Some formal and technical differences exist between the two approaches. Boolean choice: traditionally, clusters shape with the idea that all mentions within a cluster are of the same identity. Every r</context>
</contexts>
<marker>Roth, Frank, 2012</marker>
<rawString>Roth, M. and Frank, A. (2012). Aligning predicate argument structures in monolingual comparable texts: A new corpus for a new task. In Proceedings of the First Joint Conference on Lexical and Computational Semantics-Volume 1: Proceedings of the main conference and the shared task, and Volume 2: Proceedings of the Sixth International Workshop on Semantic Evaluation, pages 218–227. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Shaw</author>
</authors>
<title>A semantic tool for historical events.</title>
<date>2013</date>
<booktitle>NAACL HLT 2013,</booktitle>
<pages>38</pages>
<contexts>
<context position="7753" citStr="Shaw, 2013" startWordPosition="1205" endWordPosition="1206">s, time and location. Note, however, that structural and semantic differences exist among events of different natures, even if these complex phenomena are reduced into something more familiar and tangible such as verb frames (Fillmore et al., 2003). For example, a KILLING event is essentially attributed with its Agent and Patient, while salient attributes of an EARTHQUAKE include Location, Magnitude, Time and Human Impacts, in a typical news context. This becomes even more clear when event types are taken and compared against one another from different genres of text (Pivovarova et al., 2013; Shaw, 2013). A scientific attitude toward the analysis of EARTHQUAKE events might characterize them with Natural Impacts rather than Human Impacts. Thus, the first layer of the model needs to be designed with respect to the specific information extraction goals of the particular study, be it a pure linguistic or an applicationoriented one. Ambiguities about the granularity of attributes, subevent-ness, scope and most importantly, identity between event instances are dealt with at the definition layer for and between classes. For example, if the modeler wants to allow coreference between instances of KILL</context>
</contexts>
<marker>Shaw, 2013</marker>
<rawString>Shaw, R. (2013). A semantic tool for historical events. NAACL HLT 2013, page 38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N UzZaman</author>
<author>H Llorens</author>
<author>L Derczynski</author>
<author>M Verhagen</author>
<author>J Allen</author>
<author>J Pustejovsky</author>
</authors>
<title>Semeval-2013 task 1: Tempeval-3: Evaluating time expressions, events, and temporal relations.</title>
<date>2013</date>
<booktitle>In Second joint conference on lexical and computational semantics (* SEM),</booktitle>
<volume>2</volume>
<pages>1--9</pages>
<contexts>
<context position="2824" citStr="UzZaman et al., 2013" startWordPosition="429" endWordPosition="432">imestamps are considered as fundamental event attributes that in practice can be resolved from the context of a mention. We implement an incremental event clustering algorithm with respect to the adapted ontology of events and use a minimal linguistic procedure to extract values from text for every event attribute. This system is being developed to work within a pipeline annotation project where incremental clustering performs efficiently on large-scale data. In order to evaluate our proposed method, we have manually annotated a random selection of event mentions in the AQUAINT TimeML corpus (UzZaman et al., 2013). Performance of the automatic system in pair-wise coreference resolution is comparable to that of more sophisticated clustering methods, which at the same time consider a variety of linguistic features (Bejan and Harabagiu, 2010). The differences between the human annotator pair-wise decisions and the output of our clustering algorithm reveal interesting cases where coreference labeling is performed based upon the adapted semantic convention rather than information available in the text about time, location and participants of an event instance. In the following, we provide an overview of the</context>
<context position="23016" citStr="UzZaman et al., 2013" startWordPosition="3667" endWordPosition="3670"> in this case for the reason that, perhaps, not a new type but a new event instance is visited. 5 Manual Annotation and Evaluation The Event Coreference Bank, which is the largest available corpus with cross-document coreference labels, supports only a within topic evaluation (ECB, Bejan and Harabagiu 2010). In order to perform a more realistic evaluation of the method presented in this paper, we selected a subset of events from the AQUAINT TimeML corpus and annotated those with coreferentiality. The AQUAINT TimeML data has recently served as one of the benchmarks in the TempEval shared task (UzZaman et al., 2013) and is available for public use7. It contains 73 news report documents from four topics, annotated with 4431 event mentions and 652 temporal expressions which make it suitable for our task. Two main differences between our annotation and the ECB data are: 1) event mentions here are selected semirandomly8 and across topics rather than topicbased, 2) they are shown pair-wise to the annotator (in order to catch the transitivity patterns after the analysis), whereas, in the ECB, event mentions are clustered. Furthermore, the data already comes with manually assigned mention boundaries, event type</context>
</contexts>
<marker>UzZaman, Llorens, Derczynski, Verhagen, Allen, Pustejovsky, 2013</marker>
<rawString>UzZaman, N., Llorens, H., Derczynski, L., Verhagen, M., Allen, J., and Pustejovsky, J. (2013). Semeval-2013 task 1: Tempeval-3: Evaluating time expressions, events, and temporal relations. In Second joint conference on lexical and computational semantics (* SEM), volume 2, pages 1–9.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Wolfe</author>
<author>B Van Durme</author>
<author>M Dredze</author>
<author>N Andrews</author>
<author>C Beller</author>
<author>C Callison-Burch</author>
<author>J DeYoung</author>
<author>J Snyder</author>
<author>J Weese</author>
<author>T Xu</author>
</authors>
<title>Parma: A predicate argument aligner.</title>
<date>2013</date>
<marker>Wolfe, Van Durme, Dredze, Andrews, Beller, Callison-Burch, DeYoung, Snyder, Weese, Xu, 2013</marker>
<rawString>Wolfe, T., Van Durme, B., Dredze, M., Andrews, N., Beller, C., Callison-Burch, C., DeYoung, J., Snyder, J., Weese, J., Xu, T., et al. (2013). Parma: A predicate argument aligner.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>