<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.184897">
<title confidence="0.997361">
Extraction system for Personal Attributes Extraction of CLP2014
</title>
<author confidence="0.939322">
Zhen Wang
</author>
<note confidence="0.689579">
ERTIM-INALCO / 2, rue de Lille, 75007, Paris, France
</note>
<email confidence="0.821683">
wangzhen1027@gmail.com
</email>
<sectionHeader confidence="0.989334" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999745888888889">
This paper presents the design and im-
plementation of our extraction system for
Personal Attributes Extraction in Chinese
Text (task 4 of CLP2014). The objective
of this task is to extract attribute values of
the given personal name. Our extraction
system employs a linguistic analysis fol-
lowing by a dependency patterns matching
technique.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999963545454545">
This is the first year that we take part of in CLP’s
Personal Attributes Extraction in Chinese Text
task. The goal of this task is to extract specific
attributes values of given personals names, such
as, birth date, birth city, children, title etc. from
the collections of unstructured Chinese texts. We
are required to fill an extracted result into a single
attribute slot.
Our approach is based on dependency patterns
matching process, which is similar to the works of
Xu et al. (2013).
</bodyText>
<sectionHeader confidence="0.920641" genericHeader="method">
2 System Architecture
</sectionHeader>
<bodyText confidence="0.984014">
In order to accomplish the task, we have pro-
ceeded in four steps :
</bodyText>
<listItem confidence="0.99991825">
• a pre-processing module;
• an extraction treatment and alignment;
• an ontology alignment;
• a result generation.
</listItem>
<bodyText confidence="0.995760833333333">
Pre-processing module consists of a morphsyn-
tactic analysis and a parsing. Morphosyntactic
analysis is used for word segmentation and part
of speech tagging. Operations are based on dic-
tionnaries and linguistics rules. Unknown words,
especially proper nouns are detected in this step.
</bodyText>
<figureCaption confidence="0.998107">
Figure 1: Process for task 4
</figureCaption>
<bodyText confidence="0.999930681818182">
A type, like “person”, “location”, “organization”
or “unknown” for each proper noun is attributed.
The other unknown words received several hypo-
thetical categories, such as “noun”, “verb”, etc..
A statistical n-gram part of speech model is used
for disambiguation. As a result, we only keep one
analysis solution among whole solutions. This so-
lution includes lemmas, POS tag, semantic proper-
ties and words positions. Our parsing uses depen-
dency grammar. Based on words postions and cat-
egories, we build relations between two words and
associate with a type, like SV for Suject-Verb,VO
for Verb-Object, etc.. Negation and anaphora
problems are treated after parsing. All segmenta-
tion and parsing results are reported into an XML
file.
Extraction treatment uses reported patterns to
match dependency relations in the XML file. The
extracted informations are saved into an RDF for-
mat file. Alignment process is used to group same
classes and to remove duplicates in RDF file. The
RDF file has to be conform to our ontology.
</bodyText>
<page confidence="0.961532">
186
</page>
<note confidence="0.469005">
Proceedings of the Third CIPS-SIGHAN Joint Conference on Chinese Language Processing, pages 186–188,
Wuhan, China, 20-21 October 2014
</note>
<bodyText confidence="0.99972">
We created a software to align our ontology to
CLP’s. The idea is to generate a new RDF file
by collecting personal name classes and personal
attributes classes from all classes. Given person
names is used to question the new RDF file. When
a person name is matched to one of them in query,
each attribut is generated as a line and saved into a
CSV file.
</bodyText>
<subsectionHeader confidence="0.989594">
2.1 Dependency patterns matching
</subsectionHeader>
<bodyText confidence="0.9986058">
Dependency patterns are used to extract infor-
mation from the parsing results. A dependency
pattern is composed of dependency relations ele-
ments and of a class of our ontology (see example
in figure 2).
</bodyText>
<figureCaption confidence="0.99853">
Figure 2: Process of extraction
</figureCaption>
<bodyText confidence="0.999453272727273">
ERG (Extraction Rule Generator) begins by
getting a list of relations, then based on these re-
lations, ERG selects the corresponding patterns.
By using these patterns, ERG generates triplets
RDF to represent the extracted informations. One
matching between a relation and a pattern is
enough to generate one triplet. The position of
head or dependancy is assigned to be the triplet’s
ID. ERG repeats this process sentence by sen-
tence. All triplets with same ID are grouped to-
gether in the end of process.
</bodyText>
<subsectionHeader confidence="0.997951">
2.2 Coreference resolution
</subsectionHeader>
<bodyText confidence="0.999969875">
Coreference resolution is used to group equal ele-
ments, such as events, actions and named entities
(persons, organizations, locations, objets, etc.).
We make some attributes as decisive elements for
equal elements identification. They can be per-
sonal family name, organization name or location
name. For the equal elements, we change their ID
to be the same.
</bodyText>
<subsectionHeader confidence="0.996567">
2.3 Ontology alignment
</subsectionHeader>
<bodyText confidence="0.997641444444444">
In order to fill the slot, we have to transform our
ontology(see example in figure 3) to CLP’s. A
software was created for this interest (see exam-
ples in table 1). After getting a personal named
entity and its id, we search all classes containing
this id and make these classes as sub-classes of
the personal named entity. By aligning the classes
with those in CLP’s ontology, we transform our
RDF result.
</bodyText>
<figureCaption confidence="0.999079">
Figure 3: Example of our ontology and their links
</figureCaption>
<table confidence="0.9992503">
CLP’s ontology Our ontology
PER:Alternate Person:nick
Names
PER:Age Person:age
PER:Date of Birth Person:bthdate
PER:City of Birth Person:bthplace +
Location:location-name
+ Location:type=city
PER:Spouses Union:beneficiary=PER1 +
Union:beneficiary=PER2
</table>
<tableCaption confidence="0.999891">
Table 1: Examples of ontology alignment
</tableCaption>
<bodyText confidence="0.999812125">
For some basic personal attributes, we have
equal classes, so the alignment is easy. But for
some others, we have to take two or more classes
to align with one class of CLP’s ontology. For
instance, in order to fill the slot PER:City of
Birth, we have to find in our RDF result that a
Person:familyname is equal to a given name in
query, and that it has a bthplace which is pointed
</bodyText>
<page confidence="0.995544">
187
</page>
<bodyText confidence="0.9986569">
to a Location. We have to ensure that the type of
this Location is equal to “city”. When all these
conditions are fulfilled, the mentioned slot can
be filled. Another example, in order to generate
PER:Spouses, we have to find Union where there
is two and only two beneficiairy.
The principal advantage of this step is to merge
the named entities of different texts/files. Before
the entity creation step, we check if it already ex-
ists in reported file.
</bodyText>
<subsectionHeader confidence="0.996769">
2.4 Result generation
</subsectionHeader>
<bodyText confidence="0.999951833333333">
The objective of this step is to parse queries, cre-
ate slots for each given personal name and to in-
terrogate ontology in order to verify if it has a cor-
responding entity request and set all informations
which are already integrated during the transfor-
mation step.
</bodyText>
<sectionHeader confidence="0.999684" genericHeader="evaluation">
3 Results and error analysis
</sectionHeader>
<bodyText confidence="0.99999252">
A lot of slots haven’t been filled in this bake-off.
Our single score is 0.0043 and SF value 0.004311.
Here are the main dysfunctions : some personal
names weren’t identified because of morphsyn-
tactic analysis: given name without family name,
family name without given name, these are the
cases that we have not treated yet; some relations
between personal name and attribut haven’t been
established because of parsing. The main reason
of a bad parsing is that the two elements (like per-
sonal name and attribute) are located in two dif-
ferents clauses. Another reason is that anaphora
between two sentences, omission of suject or pos-
sessive suject, are not solved yet. Some attributs
haven’t been extracted because extraction rules
weren’t created. Some slots have not been filled
because of name matching between query and on-
tology, that did not work correctly. All foreign per-
sonal names with a “ dot ” were extracted in CSV
because the matching between foreign personal
names in query and in ontology did not work. The
name is writen as “given name dot family name” in
query but in ontology it is writen as “family name
given name” which is the order used for chinese
names but without the “ dot ”.
</bodyText>
<sectionHeader confidence="0.999843" genericHeader="conclusions">
4 Conclusions
</sectionHeader>
<bodyText confidence="0.9999508">
The paper presents our submission to the Personal
Attributes Extraction in Chinese Text. Our system
uses a linguistic analysis as pre-processing and an
extration rule generation which employs a depen-
dency patterns matching. In the future, we will
improve our extraction rules and treat the rela-
tions between clauses. We will find a solution for
anaphora problems between sentences. We also
plan to expand the queries (see Xu et al. (2013))
and register the names similarity.
</bodyText>
<sectionHeader confidence="0.998278" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999783">
We would linke to thank the National Re-
search Agency, the project for reference ANR-
09-CSOSG-08-01, for their help in producing this
work.
</bodyText>
<sectionHeader confidence="0.999423" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99877975">
Sheng Xu, Chunxia Zhang, Zhendong Niu, Rongyue
Mei, Junpeng Chen, Junjiang Zhang, and Hongping
Fu. 2013. Bits slot-filling method for tac-kbp 2013.
Technical report.
</reference>
<page confidence="0.997514">
188
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.455564">
<title confidence="0.670582">Extraction system for Personal Attributes Extraction of CLP2014</title>
<author confidence="0.97613">Zhen Wang</author>
<affiliation confidence="0.718276">ERTIM-INALCO / 2, rue de Lille, 75007, Paris,</affiliation>
<email confidence="0.998307">wangzhen1027@gmail.com</email>
<abstract confidence="0.9906695">This paper presents the design and implementation of our extraction system for Personal Attributes Extraction in Chinese Text (task 4 of CLP2014). The objective of this task is to extract attribute values of the given personal name. Our extraction system employs a linguistic analysis following by a dependency patterns matching technique.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Sheng Xu</author>
</authors>
<title>Chunxia Zhang, Zhendong Niu, Rongyue Mei, Junpeng Chen, Junjiang Zhang, and Hongping Fu.</title>
<date>2013</date>
<tech>Technical report.</tech>
<marker>Xu, 2013</marker>
<rawString>Sheng Xu, Chunxia Zhang, Zhendong Niu, Rongyue Mei, Junpeng Chen, Junjiang Zhang, and Hongping Fu. 2013. Bits slot-filling method for tac-kbp 2013. Technical report.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>