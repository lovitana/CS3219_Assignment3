<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000002">
<title confidence="0.714649">
Light verb constructions with ‘do’ and ‘be’ in Hindi: A TAG analysis
</title>
<author confidence="0.986248">
Ashwini Vaidya
</author>
<affiliation confidence="0.998382">
University of Colorado
</affiliation>
<address confidence="0.528073">
Boulder, CO
80309, USA
</address>
<email confidence="0.991287">
vaidyaa@colorado.edu
</email>
<author confidence="0.99428">
Owen Rambow
</author>
<affiliation confidence="0.997462">
Columbia University
</affiliation>
<address confidence="0.942661">
New York, NY
10115, USA
</address>
<email confidence="0.996302">
rambow@ccls.columbia.edu
</email>
<author confidence="0.974923">
Martha Palmer
</author>
<affiliation confidence="0.997473">
University of Colorado
</affiliation>
<address confidence="0.5292695">
Boulder, CO
80309, USA
</address>
<email confidence="0.994553">
mpalmer@colorado.edu
</email>
<sectionHeader confidence="0.994971" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999583444444445">
In this paper we present a Lexicalized Feature-based Tree-Adjoining Grammar analysis for a
type of nominal predicate that occurs in combination with the light verbs “do” and “be” (Hindi
kar and ho respectively). Light verb constructions are a challenge for computational grammars
because they are a highly productive predicational strategy in Hindi. Such nominals have been
discussed in the literature (Mohanan, 1997; Ahmed and Butt, 2011; Bhatt et al., 2013), but this
work is a first attempt at a Tree-Adjoining Grammar (TAG) representation. We look at three
possibilities for the design of elementary trees in TAG and explore one option in depth using
Hindi data. In this analysis, the nominal is represented with all the arguments of the light verb
construction, while the light verb adjoins into its elementary tree.
</bodyText>
<sectionHeader confidence="0.998129" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99333124">
Lexical resource development for computational analyses in Hindi must contend with a large number of
light verb constructions. For instance, in the Hindi Treebank (Palmer et al., 2009), nearly 37% of the
predicates have been annotated as light verb constructions. Hence, the combination of a noun with a light
verb is a productive predicational strategy in Hindi. For example, the noun yaad ‘memory’ combines
with kar ‘do’ to form yaad kar ‘remember’.
In light verb constructions, the noun is a predicating element along with the light verb. The pres-
ence of two predicating elements representing a single meaning is a challenge for a linguistic theory
that maps between syntax and semantics. Consequently, the argument structure representation for light
verb constructions (LVC) has resulted in two opposing views in syntactic theory. One view supports
a noun-centric analysis of the LVC, where the noun is represented with all the arguments of the LVC
e.g. (Grimshaw and Mester, 1988; Kearns, 1988). The light verb’s only role is to theta-mark the ar-
guments of the LVC, without any semantic contribution. The second view proposes argument sharing
between the noun and the light verb as they both contribute to the argument structure of the LVC (Butt,
1995; Ahmed et al., 2012). We refer to such analyses as verb-centric analyses.
Within the framework of this debate, we propose to use Lexicalized Feature-based Tree Adjoining
Grammar, which is a variant of Tree Adjoining Grammar (TAG). TAG has been used to represent light
verb constructions in French (Abeill´e, 1988) and Korean (Han and Rambow, 2000). The primitive struc-
tures of TAG are its elementary trees, which encapsulate the syntactic and semantic arguments of its
lexical anchor (for a light verb construction, the noun and light verb respectively will be the anchors).
The association of a structural object with a linguistic anchor allows TAG to specify all the linguistic
constraints associated with the anchor over a local domain. This is especially advantageous for compos-
ing the complex argument structure of a LVC. In comparison with other formalisms (e.g. context-free
grammars), this property gives TAG an extended domain of locality.
This work is licenced under a Creative Commons Attribution 4.0 International License. Page numbers and proceedings footer
are added by the organizers. License details: http://creativecommons.org/licenses/by/4.0/
</bodyText>
<note confidence="0.839703333333333">
127
Proceedings of the Workshop on Lexical and Grammatical Resources for Language Processing, pages 127–136,
Coling 2014, Dublin, Ireland, August 24 2014.
</note>
<bodyText confidence="0.9998117">
In this paper, we look at a particular group of nouns that occur with light verbs ‘do’ and ‘be’ (kar and
ho) as part of a light verb construction. The same noun alternates with either light verb, resulting in a
change in the argument structure of the verb. For example the noun chorii ‘theft’ can occur as either chorii
kar ‘theft do’ or chorii ho ‘theft happen’. There are nearly 265 nouns showing this alternation in the Hindi
Treebank (Palmer et al., 2009)1. These constitute about 15% of the total light verb constructions in the
Treebank. Note that other light verbs also occur in Hindi e.g. de ‘give’, le ‘take’ etc. but they are not
part of this study.
Section 3 has some examples of these predicating nominals. Before this, Section 2 will introduce the
TAG formalism. Section 4 describes the design of the elementary trees that are the basis of the analysis
and in the final section we summarize our findings and make suggestions for future work.
</bodyText>
<sectionHeader confidence="0.876791" genericHeader="method">
2 Lexicalized Feature based Tree Adjoining Grammar
</sectionHeader>
<bodyText confidence="0.999945527777778">
Tree-Adjoining Grammar (TAG) is a formal tree-rewriting system that is used to describe the syntax of
natural languages (Joshi and Schabes, 1997). The basic structure of a TAG grammar is an elementary
tree, which is a fragment of a phrase structure tree labelled with both terminal and non-terminal nodes.
The elementary trees are combined by the operations of substitution (where a terminal node is replaced
with a new tree) or adjunction (where an internal node is split to add a new tree).
The elementary trees in TAG can be enriched with feature structures (Vijay-Shanker and Joshi, 1988).
These can capture linguistic descriptions in a more precise manner and also capture adjunction con-
straints. TAG with feature structures is also known as FTAG (Feature-structure based TAG). A TAG can
also be lexicalized i.e., an elementary tree has a lexical item as one of its terminal nodes. Lexicalized
TAG enhanced with feature structures is known as Lexicalized Feature-based Tree-Adjoining Gram-
mar (LF-TAG). This has been used for developing computational grammars for English (XTAG-Group,
2001), French (Abeill´e and Candito, 2000) and Korean (Han et al., 2000). In our analysis, we will also
use LF-TAG, but we will refer to it as LTAG for convenience.
Figure 1 shows the basic steps for composing elementary trees containing feature structures. Each
node has a top and a bottom feature structure. Features can be shared among nodes in an elementary
tree. In the tree for the verb running, the variable 1 is used to show that the verb must share the same
features as the subject NP.
The tree for running is an initial tree with a single terminal for its argument noun phrase (NP). The
tree for is, on the other hand, is a special type of elementary tree called the auxiliary tree. It has a foot
node (marked with an asterisk), which is identical to its root node. The auxiliary tree will adjoin into the
tree for running at the VP node only. The top and bottom feature structures for MODE at the VP node,
have different values (ind and ger), and they cannot unify. This captures an adjunction constraint for
obligatory adjunction and requires adjunction to take place at this node only.
During adjunction, the top of the root of the auxiliary tree (for is) will unify with the top of the
adjunction site. The bottom of the foot of the auxiliary tree will unify with the bottom of the adjunction
site. During substitution, the top node in the tree for Jill unifies with the node at NP.
This results in the second tree in Figure 1, post the operations of substitution and adjunction. In a
final derivation step, top and bottom feature structures at each node will unify, to give the final derived
tree with a single feature structure at each node. The resulting tree is called a derived tree, but another
by-product of the TAG analysis is also the derivation tree. This tree has numbered node labels that record
the history of composition of the elementary trees. For example, the tree for Jill is running can be seen
in Figure 2. The root of this tree is labelled with running, which is an initial tree of the type S.
An important characteristic of lexicalized elementary trees is their correspondence with that lexi-
cal item’s predicate-argument structure. This has sometimes been formalized as the PACP (Predicate-
Argument Co-occurrence Principle) (Frank, 2002). The PACP restricts the structure of the elementary
trees such that they may not be drawn arbitrarily. At the same time, lexicalized TAGs will often have the
</bodyText>
<equation confidence="0.93239525">
1It is possible that many more nouns occur in this group, but all their alternations are not instantiated in the Treebank
corpus.
128
running
After top-bottom unification: S
&amp;quot;
AGR= 1 [PERS=3 NUM=sg]
VP MODE=ind
h i
V AGR= 1 MODE=ind
is V
running
</equation>
<figureCaption confidence="0.83787">
Figure 1: LTAG showing feature structures and constraints on adjunction (Example adapted from
(Kallmeyer and Osswald, 2013))
</figureCaption>
<figure confidence="0.838463666666667">
running
1 2
Jill is
</figure>
<figureCaption confidence="0.9011155">
Figure 2: Derivation tree for ‘Jill is running’. The dashed node indicates adjunction and the solid node
indicates substitution
</figureCaption>
<figure confidence="0.995957310344828">
Jill
is
is
V
S
h i
AGR= 1 MODE=ind
h i
MODE=ger
VP
h i
NP AGR= 1
[]
V
h i
AGR=[PERS=3 num=sg]
running
NP
N
h i
AGR= 2 [PERS=3 num=sg]
V
h i
VP AGR= 2 MODE= 3
h i
MODE= 3 ind
h i
VP* MODE=ger
S
h i
AGR= 1
h i
agr=[pers=3 num=sg]
VP
h i
MODE= 3 ind
h i
AGR= 2 [PERS=3 num=sg]
V
After substitution
and adjunction:
h i
AGR= 1 MODE=ind
h i
AGR= 2 MODE= 3
VP
h i
MODE=ger
h i
MODE=ger
NP
Jill
h i
NP AGR= 1
Jill
h i
VP MODE=ger
129
</figure>
<bodyText confidence="0.9760355">
same lexical item realized as the anchor of varying syntactic realizations. For example a verb such as run
will anchor a different elementary tree for its passive or interrogative variant.
</bodyText>
<sectionHeader confidence="0.984462" genericHeader="method">
3 Data
</sectionHeader>
<bodyText confidence="0.999825166666667">
In this section, we introduce the nominal predicates that will be the focus of our LTAG analysis. Such
nominals allow an agentive (ergative-marked2) subject with the light verb kar ‘do’. In contrast, the same
nominal does not have an agentive subject with ho ‘be’ (Ahmed and Butt, 2011). The alternation with
ho ‘be’ has an intransitivizing effect. In (1) and (2), a change in the light verb results in the presence or
absence of the agent argument. The nominal chorii is the same, but the LVC in (1) requires only a Theme
argument, whereas (2) needs an Agent and a Theme.
</bodyText>
<listItem confidence="0.4948932">
(1) gehene chorii hue.
jewels.M theft.F be.Perf.MPl
‘The jewels got stolen’
(2) Ram-ne gehene chorii kiye.
Ram-Erg jewels.M.Pl theft.F do.Perf.M.Pl
</listItem>
<bodyText confidence="0.978977">
‘Ram stole the jewels ’
In English, a similar alternation structure may be found with light verbs in bring to light vs. come to
light (Claridge, 2000). Here, two light verbs bring and come are used to express either a causative or
inchoative reading. In the Hindi examples, the light verb ho ‘be’ and the light verb kar ‘do’ are used to
express the inchoative vs. causative reading. In Persian, kardan ‘make or do’ and ˆsodan ‘become’ are
used in a manner similar (although not identical) to Hindi.
The noun chorii ‘theft’ belongs to a particular class of nouns where a change in the light verb does
result in a change in the arguments, but the agent argument is always presupposed, irrespective of the
light verb. For instance, the addition of a phrase such as apne-aap ‘on its own’ is semantically odd with
example 1. This is because the event of ‘theft’ cannot occur without an agent, although it is unexpressed
with the light verb ho ‘be’. Contrast this with 4, where apne-aap is not odd and where the alternation
with kar ‘do’ is not possible. The non-alternating noun afsos ‘regret’ occurs with an Experiencer subject,
which can act spontaneously and hence allows the use of apne-aap.
</bodyText>
<listItem confidence="0.9907982">
(3) ??aaj apne-aap gehene chorii hue
today own-mine jewels.M theft.F be.Pres.MPl
‘??Today the jewels got stolen by themselves ’
(4) aaj Ram-ko is baat-par apne-aap afsos huaa/*kiyaa.
today Ram-Dat this issue-Loc own-mine regret.M be.Perf.M.Sg/*do.Perf.M.Sg
</listItem>
<bodyText confidence="0.8917629">
‘Today Ram himself regretted this point/issue ’
In order to model such nominals in TAG we have three options: first, a noun-centric analysis, where the
nominal projects all the arguments of the LVC. In reference to the examples above, this would imply that
the light verb chorii ‘theft’ would be represented by two trees– i.e., it would appear with two arguments
with kar ‘do’ and only one with ho ‘be’.
The second option is a verb-centric analysis, where the light verb kar ‘do’ would contribute the agen-
tive argument, and chorii would contribute the object. The nominal’s elementary tree would consist of
only one argument, regardless of whether it combined with kar ‘do’ or ho ‘be’. The third option is to
2Hindi is a split-ergative language, where ergative case on the subject is found only with transitive verbs in the perfective
aspect. For non-perfective aspect, the subject is nominative.
</bodyText>
<page confidence="0.599868">
130
</page>
<bodyText confidence="0.999775875">
represent the LVC chorii kar ‘theft do; steal’ as the anchor of a single elementary tree– a single multi-
word expression. While the first two options are worth exploring, we discard the third option for two
reasons: first, the LVC is highly productive in Hindi, which would imply that this would result in too
many elementary trees in the grammar. Second, there is evidence that the LVC forms a phrasal category
in the syntax (Mohanan, 1997; Davison, 2005). This means that individual components of the LVC may
be moved away from each other, emphatic particles or negation may intervene and the noun component
may be independently modified by an adjective. Therefore, the multi-word option would not be the best
approach here. This is in contrast to previous TAG analyses for English LVCs where both nominal and
verb are anchored in the same elementary tree (XTAG-Group, 2001).
Figure 3 shows the derivation trees (cf. Figure 2) for the three different analysis options as described
above for the sentence Ram ne gehene chorii kiye ‘Ram stole the jewels’. The LVC in question is chorii
kar ‘theft do’. The dashed line indicates adjunction into the elementary tree, whereas the solid line
indicates substitution. In the noun-centric analysis, the light verb adjoins into the nominal’s elementary
tree and contributes no arguments of its own. For the verb-centric analysis, the light verb contributes the
argument Ram, whereas the nominal contributes jewels. Finally, for the multi-word expression tree, theft
and do are both anchors of the elementary tree.
</bodyText>
<figure confidence="0.827095125">
Noun-centric analysis → chorii
Ram-ne kiye
gehene
Verb-centric analysis → kiye
Ram-ne chorii
gehene
Multi-word analysis → chorii-kiye
Ram-ne gehene
</figure>
<figureCaption confidence="0.9563095">
Figure 3: Derivation graphs showing three options for the analysis of Ram ne gehene chorii kiye ‘Ram
stole the jewels’. The LVC is chorii kiye.
</figureCaption>
<bodyText confidence="0.999539888888889">
In this paper we explore a noun-centric analysis of Hindi LVCs.3In the analysis that follows, we will
describe two elementary trees for a noun like chorii i.e., when it combines with either ho ‘be’ or kar ‘do’.
Making the elementary structures richer and more complex increases ambiguity locally and we then have
more descriptions for the same lexical item. But these structures also capture local dependencies i.e.,
the fact that the lexical item can appear in varying linguistic environments. Second, this is in keeping
with the TAG notion of using complex elementary structures to capture linguistic properties and having
very general operations (substitution and adjunction) to combine these structures. This has been used
effectively in computational applications and is characterised by the slogan complicate locally, simplify
globally (Bangalore and Joshi, 2010).
</bodyText>
<sectionHeader confidence="0.995114" genericHeader="method">
4 Analysis
</sectionHeader>
<bodyText confidence="0.9999795">
In a noun-centric analysis, the light verb does not have arguments of its own. The full array of arguments
for the light verb construction is instead represented in the nominal’s tree. The light verb can only choose
</bodyText>
<footnote confidence="0.642251333333333">
3Based on the comments of the reviewers we are now considering a revision of the noun-centric analysis in this paper. It
may seem that a verb-centric analysis may be more appropriate for Hindi LVCs. However, due to lack of space, we do not
explore the second option fully in this paper and leave it to future work.
</footnote>
<page confidence="0.885644">
131
</page>
<bodyText confidence="0.9999752">
the semantic property of the nominal it may combine with (e.g., the light verb ho may combine only with
nominals that have no agentive arguments). Other analyses e.g Ahmed et al. (2012) represent the light
verb kar ‘do’ with arguments of its own. We discuss this in Section 5.
Our work follows Han and Rambow (2000)’s representation of Sino-Korean LVCs. This work has
also proposed separate trees for the nominal and light verb. The elementary tree of the nominal is an an
initial tree, and as it is considered the true predicate, it also chooses a syntactic structure that will realize
all its arguments. The light verb on the other hand is represented as an auxiliary tree, therefore it is an
adjunct to the nominal’s basic structure. However, as it is a predicate, it is also a special type of auxiliary
tree viz., a predicative auxiliary tree (Abeill´e and Rambow, 2000).
The second feature of this analysis, also based on Han and Rambow (2000)’s work is the idea of the
nominal as an underspecified base form. The nominal’s elementary tree is not specified with respect to
its category, rather, we use the label X, which projects to an XP. We also assume, following Han and
Rambow that each node is specified with the feature CAT which has values like V or N, but the [CAT=N]
feature on the noun is not realized unless the light verb composes with the elementary tree of the nominal.
In addition, although the nominal is not a verb, it has the feature TENSE=- i.e., it is not tensed.
</bodyText>
<subsectionHeader confidence="0.967647">
4.1 The light verb
</subsectionHeader>
<bodyText confidence="0.9999307">
In order to model the light verb kar ‘do’ in Example 2, we will construct an auxiliary tree with feature
structures, anchored at kar ‘do’. Figure 4 shows such an elementary tree. Note that this is a very different
tree from ‘full’ kar ‘do’, which will have all its arguments. The light verb kar is inflected for person,
number, and gender as well as tense and aspect. In this particular example, it is tensed, masculine, plural
and has perfective aspect; therefore it appears as kiye. We assume that morphological analysis has already
taken place in a separate module, such that the correct morphological surface form has been derived for
‘do, masculine plural perfective’. In Figure 4, the XP, (root) node and its right-branching daughters
are [CAT=V] with linguistic information about gender, number, tense and aspect. The feature AGT=+ at
the top node implies that this auxiliary tree needs to unify with an initial tree that is also [AGT=+]. In
contrast with kar ‘do’, the auxiliary tree of the light verb ho ‘be’ will have [AGT=-].
</bodyText>
<equation confidence="0.991770944444444">
[ ]
cat=n tense=- case=nom nagr=-
U
[ ]
cat=v tense=+ perf=+ agt=+ agr=mpl
XP,
[ ]
cat=v tense=+ perf=+ agt=+ agr=mpl
[ ]
cat=v tense=+ perf=+ agt=+ agr=mpl
[ ]
cat=v tense=+ perf=+ agt=+ agr=mpl
XP f VP
[ ]
cat=v tense=+ perf=+ agt=+ agr=mpl
[ ]
cat=v tense=+ perf=+ agt=+ agr=mpl
kiye
</equation>
<figureCaption confidence="0.990137">
Figure 4: Elementary tree for light verb kar ‘do’ inflected as kiye‘do.masc.pl.perf’
</figureCaption>
<bodyText confidence="0.999421142857143">
The XP f (foot) node has [TENSE=-] and [CAT=N], which will enable it to adjoin into the elementary
tree of a nominal. The CASE value is specified as NOM (nominative) as the light verb will assign nomi-
native case to the noun. The NAGR feature is required when the light verb agrees in number and gender
with the predicative nominal itself (Mohanan, 1997). As this will not occur in the examples we are
working with, the value for NAGR is negative. For other ‘standard’ cases of agreement, the feature AGR
is used (It is also useful to note that the verbal agreement rule in Hindi differs from English as the verb
agrees with the highest nominative marked argument- and not necessarily the subject (Mohanan, 1995)).
</bodyText>
<equation confidence="0.847843314285714">
V
132
S
⎡case=erg cat=n
⎢ ⎣perf=+[1] agt=+[2]
agr=[13]
⎤
⎦⎥
NP1 1
h i
cat=v tense=+ perf=+[1] agt=+[2]
h i
cat=v tense=+ perf=[3] agt=[4]
h i
cat=v tense=+ perf=[3] agt=[4] agr=[11]
h i
cat=v tense=+ perf=[5] agt=[6]agr=[10]
VP
XP
NP2 1
⎡ ⎤
case=nom
⎢ ⎥
⎣cat=n ⎦
agr=[11]
h i
cat=v tense=+ perf=[5] agt=[6] agr=[10]
h i
cat=[19] tense=- nagr=- case=[14]
X
h i
cat=[19] tense=- nagr=- case=[14]
h i
cat=[20] tense=- nagr=- case=[15]
chorii
</equation>
<figureCaption confidence="0.8971905">
Figure 5: Tree for nominal chorii ‘theft’ -agentive, as seen in Ram ne gehene chorii kiye “Ram stole the
jewels”. The feature clash at XP2 is marked with a box.
</figureCaption>
<subsectionHeader confidence="0.99792">
4.2 The nominal
</subsectionHeader>
<bodyText confidence="0.999993851851852">
In contrast to the impoverished argument structure of the light verb, the nominal in Figure 5 has the full
array of arguments for chorii ‘theft’. The tree is anchored by the lexical item chorii and the non terminals
at NP1 and NP2 are marked with a 1 for substitution with the actual lexical items.
The position of the arguments roughly follows the configuration described in Bhatt et al. (2013, p. 59)
, where the first position is the ergative-marked argument and is found in a transitive sentence (but only
if the property [PERF=+] is also present.)
The ‘second’ position is one where the object of the transitive verb is found. In Figure 5, this is
represented as NP2 and is the nominative marked argument. The elementary tree for the nominal is not
complete, because of the feature clash at XP2 between [TENSE=+] vs. [TENSE=-]. The feature clash
represents an obligatory adjunction constraint which will require the light verb to adjoin at this node.
The first position in Figure 5 has the features for [PERF=+] and [AGT=+] as a consequence of having
[CASE=ERG]. The agentive argument shares the values for PERF and AGT with the S node. This ensures
that the light verb that adjoins into this tree will match the PERF and AGT values in NP1. The argument
in second position NP2 will share its values for AGR with XP2. At XP2, the values for PERF, AGT and
AGR should match with the root node of the light verb. Otherwise, adjunction will fail.
The light verb’s tree as shown in Figure 4 will adjoin into the tree of the nominal. Post adjunction and
substitution, we find a composed structure as seen in Figure 7.
The same noun chorii ‘theft’ may combine with the light verb ho. In that case, non-agentive chorii will
choose an elementary tree such as Figure 6. This elementary tree appears without an agentive argument.
Its single nominative Theme argument has moved to the first position at NP1, leaving behind a co-indexed
trace. Figure 6 shows that the site of adjunction into chorii ‘theft’ (non-agentive) is at XP1 . Adjunction
cannot take place at XP2 as the feature clash is higher up at XP1 . The single nominative argument of
chorii (non-agentive) will move up to NP1 in order to receive nominative case from the node CAT=V
(Note that the node immediately above NP2 has an underspecified CAT feature and this requires the
argument to move to a higher position). The tree for non-agentive chorii will always combine with a
light verb that is AGT=-. Its Theme argument will take nominative case irrespective of the tense-aspect
value of the verb.
</bodyText>
<equation confidence="0.934654">
133
2
S
h i
cat=v tense=+ perf=[1] agt=[2] agr=[12]
h i
cat=v tense=+ perf=[3] agt=[4] agr=[11]
h i
case=nom perf=[1] agt=−[2] agr=[12]
h i
cat=v tense=+ perf=[3] agt=[4] agr=[11]
h i
cat=[18] tense=- nagr=- case=[14]
h i
cat=[18] tense=- nagr=- case=[14]
h i
cat=[19] tense=- nagr=- case=[15]
NP1 i ↓ XP1
h i
cat=n
NP2
XP
ti X
h i
cat=[19] tense=- nagr=- case=[15]
h i
cat=[20] tense=- nagr=- case=[16]
chorii
</equation>
<figureCaption confidence="0.5387005">
Figure 6: Tree for nominal chorii - non agentive as seen in gehene chorii hue ‘The jewels were stolen’.
The feature clash this time is higher in the tree at XP1 and is marked with a box.
</figureCaption>
<table confidence="0.7716345">
S h i
cat=v tense=+ perf=+ agt=+
h i
cat=v tense=+ perf=+ agt=+
</table>
<equation confidence="0.801132117647059">
h i
cat=v tense=+ perf=+ agt=+ agr=mpl
h i
cat=v tense=+ perf=+ agt=+ agr=mpl
h i
cat=v tense=+ perf=+ agt=+ agr=mpl
h i
cat=v tense=+ perf=+ agt=+ agr=mpl
h i
cat=v tense=+ perf=+ agt=+ agr=mpl
h i
cat=v tense=+ perf=+ agt=+ agr=mpl
VP
XP
VP
2
V
</equation>
<page confidence="0.591744">
134
2
</page>
<sectionHeader confidence="0.998397" genericHeader="conclusions">
5 Discussion
</sectionHeader>
<bodyText confidence="0.999984454545454">
The elementary trees for chorii ‘theft’–both agentive and non-agentive are able to capture its alternations
with kar “do” and ho ‘be’. This is in contrast to Ahmed et al. (2012)’s approach in an important way.
They do not consider the nominal’s alternation with the light verb ho “be” as a light verb construction.
Instead, they maintain that it has a resultative reading and provide a different analysis within the Lexical
Functional Grammar (LFG) framework. In fact, the alternation with ho “be” provides a useful lexical
alternative to an alternative syntactic structure (such as a passive). The alternation of the light verb ho
“be” and kar “do” is moreover a characteristic of a certain group of nominals only (not all can show this
alternation e.g., intizar “waiting” cf. Ahmed and Butt (2011)). Therefore, we maintain that chorii ho
“theft happen” is indeed a light verb construction.
Ahmed and Butt (2011)’s analysis looks at the noun and light verb as co-predicators i.e., it is a verb
centric analysis. While this is different from the proposed analysis here, it is not impossible to construct
elementary trees where the light verb’s elementary tree consists of one argument i.e., the subject and the
nominal (with its own argument) adjoins into it. The pros and cons of these two approaches need to be
explored more thoroughly within the TAG framework and we leave this to future work.
While this work has examined one class of nominals that occur as part of light verb constructions,
it does not complete the analysis of light verb constructions in Hindi. The behaviour of other nominal
classes remains to be explored. There are also nominals that occur with light verbs other than kar ‘do’
and ho ‘be’. Finally, while the work presented here is mainly theoretical, it is in keeping with recent
proposals for extracting a Hindi TAG grammar from a phrase structure treebank (Bhatt et al., 2012;
Mannem et al., 2009). The algorithm in Bhatt et al. (2012) relies on the annotated Hindi Dependency
Treebank and proposes a rule extraction system for elementary trees. Therefore, the description of Hindi
LVCs in TAG would be a useful addition to the implementation of a grammar extraction task.
</bodyText>
<sectionHeader confidence="0.997275" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.99999275">
The first author was supported by DAAD (Deutscher Akademischer Austausch Dienst) for a research
stay at the University of Konstanz in 2013-14s. We are also thankful to Prof Miriam Butt for hosting the
first author at the University of Konstanz. We would like to thank Bhuvana Narasimhan, Miriam Butt
and the anonymous reviewers for their useful remarks on this paper. Any errors that remain are our own.
</bodyText>
<sectionHeader confidence="0.99845" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999632388888889">
Anne Abeill´e and Marie-H´el`ene Candito. 2000. FTAG: A Lexicalized Tree-Adjoining Grammar for French. In
Tree Adjoining Grammars: Formalisms, Linguistic Analysis and Processing. CSLI Publications.
Anne Abeill´e and Owen Rambow. 2000. Tree Adjoining Grammar: An Overview. In Anne Abeill´e and Owen
Rambow, editors, Tree Adjoining Grammars: Formalisms, Linguistic Analysis and Processing. CSLI Publica-
tions.
Anne Abeill´e. 1988. Light verb constructions and Extraction out of NP in TAG. In Lynn MacLeod, Gary Larson,
and Diane Brentari, editors, Proceedings of the 24th Annual Meeting of the Chicago Linguistics Society.
Tafseer Ahmed and Miriam Butt. 2011. Discovering Semantic Classes for Urdu N-V Complex Predicates. In
Proceedings of the International Conference on Computational Semantics (IWCS 2011), Oxford.
Tafseer Ahmed, Miriam Butt, Annette Hautli, and Sebastian Sulger. 2012. A reference dependency bank for
analyzing complex predicates. In Proceedings of the Eight International Conference on Language Resources
and Evaluation (LREC’12).
Srinivas Bangalore and Aravind Joshi. 2010. Introduction. In Srinivas Bangalore and Aravind Joshi, editors,
Supertagging: Using Complex Lexical Descriptions in Natural Language Processing, pages 1–31. MIT Press,
Cambridge.
Rajesh Bhatt, Owen Rambow, and Fei Xia. 2012. Creating a Tree Adjoining Grammar from a Multilayer Tree-
bank. In Proceedings of the 11th International Workshop on Tree Adjoining Grammars and Related Formalisms
(TAG+11), pages 162–170.
</reference>
<page confidence="0.617184">
135
</page>
<reference confidence="0.999144666666667">
Rajesh Bhatt, Annahita Farudi, and Owen Rambow. 2013. Hindi-Urdu Phrase Structure Annotation Guidelines.
http://verbs.colorado.edu/hindiurdu/guidelines docs/PhraseStructureguidelines.pdf, November.
Miriam Butt. 1995. The Structure of Complex Predicates in Urdu. CSLI Publications, Stanford.
Claudia Claridge. 2000. Multi-word Verbs in Early Modern English: A Corpus-based Study. Editions Rodopi B.
V., Amsterdam-Atlanta edition.
Alice Davison. 2005. Phrasal predicates: How N combines with V in Hindi/Urdu. In Tanmoy Bhattacharya,
editor, Yearbook of South Asian Languages and Linguistics, pages 83–116. Mouton de Gruyter.
Robert Frank. 2002. Phrase Structure Composition and Syntactic Dependencies. MIT Press, Cambridge.
Jane Grimshaw and Armin Mester. 1988. Light verbs and theta-marking. Linguistic Inquiry, 9(2):205–232.
Chung-hye Han and Owen Rambow. 2000. The Sino-Korean light verb construction and lexical argument struc-
ture. In Proceedings of the Fifth International Workshop on Tree-Adjoining Grammars and Related Formalisms,
TAG+5.
Chung-hye Han, Juntae Yoon, Nari Kim, and Martha Palmer. 2000. A Feature based Lexicalized Tree Adjoining
Grammar for Korean. Technical report, Institute for Research in Cognitive Science, University of Pennsylvania,
http://www.cis.upenn.edu/˜xtag/koreantag.
Aravind Joshi and Y. Schabes. 1997. Tree-adjoining grammars. In G. Rozenburg and A. Salomaa, editors,
Handbook of Formal Languages, volume 3, pages 69–124. Springer.
Laura Kallmeyer and Rainer Osswald. 2013. Syntax-driven semantic frame composition in Lexicalized Tree
Adjoining Grammars. Journal of Language Modelling, 1(2):267–330.
Kate Kearns. 1988. Light verbs in English. Manuscript, MIT (revised 2002).
Prashanth Mannem, Aswarth Abhilash, and Akshar Bharati. 2009. LTAG-spinal Treebank and Parser for Hindi.
In Proceedings of ICON-2009: 7th International Conference on Natural Language Processing.
Tara Mohanan. 1995. Wordhood and Lexicality- Noun Incorporation in Hindi. Natural Language and Linguistic
Theory, 13:75–134.
Tara Mohanan. 1997. Multidimensionality of representation- NV complex predicates in Hindi. In Alex Alsina,
Joan Bresnan, and Peter Sells, editors, Complex Predicates. CSLI Publications, Stanford.
Martha Palmer, Rajesh Bhatt, Bhuvana Narasimhan, Owen Rambow, Dipti Misra Sharma, and Fei Xia. 2009.
Hindi Syntax: Annotating Dependency, Lexical Predicate-Argument Structure, and Phrase Structure. In Pro-
ceedings of ICON-2009: 7th International Conference on Natural Language Processing, Hyderabad.
K. Vijay-Shanker and Aravind Joshi. 1988. Feature structure based Tree Adjoining Grammars. In Proceedings of
COLING 1988.
The XTAG-Group. 2001. A Lexicalized Tree Adjoining Grammar for English. Technical report, IRCS, University
of Pennsylvania.
</reference>
<page confidence="0.946133">
136
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.160029">
<title confidence="0.98986">Light verb constructions with ‘do’ and ‘be’ in Hindi: A TAG analysis</title>
<author confidence="0.969726">Ashwini</author>
<affiliation confidence="0.999831">University of</affiliation>
<address confidence="0.760979">Boulder, 80309, USA</address>
<email confidence="0.99954">vaidyaa@colorado.edu</email>
<author confidence="0.882128">Owen</author>
<affiliation confidence="0.815601">Columbia</affiliation>
<address confidence="0.9266505">New York, 10115, USA</address>
<email confidence="0.997702">rambow@ccls.columbia.edu</email>
<author confidence="0.986074">Martha</author>
<affiliation confidence="0.999842">University of</affiliation>
<address confidence="0.7609135">Boulder, 80309, USA</address>
<email confidence="0.999823">mpalmer@colorado.edu</email>
<abstract confidence="0.9983638">In this paper we present a Lexicalized Feature-based Tree-Adjoining Grammar analysis for a type of nominal predicate that occurs in combination with the light verbs “do” and “be” (Hindi Light verb constructions are a challenge for computational grammars because they are a highly productive predicational strategy in Hindi. Such nominals have been discussed in the literature (Mohanan, 1997; Ahmed and Butt, 2011; Bhatt et al., 2013), but this work is a first attempt at a Tree-Adjoining Grammar (TAG) representation. We look at three possibilities for the design of elementary trees in TAG and explore one option in depth using Hindi data. In this analysis, the nominal is represented with all the arguments of the light verb construction, while the light verb adjoins into its elementary tree.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Anne Abeill´e</author>
<author>Marie-H´el`ene Candito</author>
</authors>
<title>FTAG: A Lexicalized Tree-Adjoining Grammar for French. In Tree Adjoining Grammars: Formalisms, Linguistic Analysis and Processing.</title>
<date>2000</date>
<publisher>CSLI Publications.</publisher>
<marker>Abeill´e, Candito, 2000</marker>
<rawString>Anne Abeill´e and Marie-H´el`ene Candito. 2000. FTAG: A Lexicalized Tree-Adjoining Grammar for French. In Tree Adjoining Grammars: Formalisms, Linguistic Analysis and Processing. CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anne Abeill´e</author>
<author>Owen Rambow</author>
</authors>
<title>Tree Adjoining Grammar: An Overview.</title>
<date>2000</date>
<booktitle>In Anne Abeill´e and Owen Rambow, editors, Tree Adjoining Grammars: Formalisms, Linguistic Analysis and Processing.</booktitle>
<publisher>CSLI Publications.</publisher>
<marker>Abeill´e, Rambow, 2000</marker>
<rawString>Anne Abeill´e and Owen Rambow. 2000. Tree Adjoining Grammar: An Overview. In Anne Abeill´e and Owen Rambow, editors, Tree Adjoining Grammars: Formalisms, Linguistic Analysis and Processing. CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anne Abeill´e</author>
</authors>
<title>Light verb constructions and Extraction out of NP</title>
<date>1988</date>
<booktitle>Proceedings of the 24th Annual Meeting of the Chicago Linguistics Society.</booktitle>
<editor>in TAG. In Lynn MacLeod, Gary Larson, and Diane Brentari, editors,</editor>
<marker>Abeill´e, 1988</marker>
<rawString>Anne Abeill´e. 1988. Light verb constructions and Extraction out of NP in TAG. In Lynn MacLeod, Gary Larson, and Diane Brentari, editors, Proceedings of the 24th Annual Meeting of the Chicago Linguistics Society.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tafseer Ahmed</author>
<author>Miriam Butt</author>
</authors>
<title>Discovering Semantic Classes for Urdu N-V Complex Predicates.</title>
<date>2011</date>
<booktitle>In Proceedings of the International Conference on Computational Semantics (IWCS 2011),</booktitle>
<location>Oxford.</location>
<contexts>
<context position="760" citStr="Ahmed and Butt, 2011" startWordPosition="105" endWordPosition="108">lorado.edu Owen Rambow Columbia University New York, NY 10115, USA rambow@ccls.columbia.edu Martha Palmer University of Colorado Boulder, CO 80309, USA mpalmer@colorado.edu Abstract In this paper we present a Lexicalized Feature-based Tree-Adjoining Grammar analysis for a type of nominal predicate that occurs in combination with the light verbs “do” and “be” (Hindi kar and ho respectively). Light verb constructions are a challenge for computational grammars because they are a highly productive predicational strategy in Hindi. Such nominals have been discussed in the literature (Mohanan, 1997; Ahmed and Butt, 2011; Bhatt et al., 2013), but this work is a first attempt at a Tree-Adjoining Grammar (TAG) representation. We look at three possibilities for the design of elementary trees in TAG and explore one option in depth using Hindi data. In this analysis, the nominal is represented with all the arguments of the light verb construction, while the light verb adjoins into its elementary tree. 1 Introduction Lexical resource development for computational analyses in Hindi must contend with a large number of light verb constructions. For instance, in the Hindi Treebank (Palmer et al., 2009), nearly 37% of t</context>
<context position="9685" citStr="Ahmed and Butt, 2011" startWordPosition="1611" endWordPosition="1614">itution and adjunction: h i AGR= 1 MODE=ind h i AGR= 2 MODE= 3 VP h i MODE=ger h i MODE=ger NP Jill h i NP AGR= 1 Jill h i VP MODE=ger 129 same lexical item realized as the anchor of varying syntactic realizations. For example a verb such as run will anchor a different elementary tree for its passive or interrogative variant. 3 Data In this section, we introduce the nominal predicates that will be the focus of our LTAG analysis. Such nominals allow an agentive (ergative-marked2) subject with the light verb kar ‘do’. In contrast, the same nominal does not have an agentive subject with ho ‘be’ (Ahmed and Butt, 2011). The alternation with ho ‘be’ has an intransitivizing effect. In (1) and (2), a change in the light verb results in the presence or absence of the agent argument. The nominal chorii is the same, but the LVC in (1) requires only a Theme argument, whereas (2) needs an Agent and a Theme. (1) gehene chorii hue. jewels.M theft.F be.Perf.MPl ‘The jewels got stolen’ (2) Ram-ne gehene chorii kiye. Ram-Erg jewels.M.Pl theft.F do.Perf.M.Pl ‘Ram stole the jewels ’ In English, a similar alternation structure may be found with light verbs in bring to light vs. come to light (Claridge, 2000). Here, two lig</context>
<context position="24264" citStr="Ahmed and Butt (2011)" startWordPosition="4090" endWordPosition="4093">s approach in an important way. They do not consider the nominal’s alternation with the light verb ho “be” as a light verb construction. Instead, they maintain that it has a resultative reading and provide a different analysis within the Lexical Functional Grammar (LFG) framework. In fact, the alternation with ho “be” provides a useful lexical alternative to an alternative syntactic structure (such as a passive). The alternation of the light verb ho “be” and kar “do” is moreover a characteristic of a certain group of nominals only (not all can show this alternation e.g., intizar “waiting” cf. Ahmed and Butt (2011)). Therefore, we maintain that chorii ho “theft happen” is indeed a light verb construction. Ahmed and Butt (2011)’s analysis looks at the noun and light verb as co-predicators i.e., it is a verb centric analysis. While this is different from the proposed analysis here, it is not impossible to construct elementary trees where the light verb’s elementary tree consists of one argument i.e., the subject and the nominal (with its own argument) adjoins into it. The pros and cons of these two approaches need to be explored more thoroughly within the TAG framework and we leave this to future work. Wh</context>
</contexts>
<marker>Ahmed, Butt, 2011</marker>
<rawString>Tafseer Ahmed and Miriam Butt. 2011. Discovering Semantic Classes for Urdu N-V Complex Predicates. In Proceedings of the International Conference on Computational Semantics (IWCS 2011), Oxford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tafseer Ahmed</author>
<author>Miriam Butt</author>
<author>Annette Hautli</author>
<author>Sebastian Sulger</author>
</authors>
<title>A reference dependency bank for analyzing complex predicates.</title>
<date>2012</date>
<booktitle>In Proceedings of the Eight International Conference on Language Resources and Evaluation (LREC’12).</booktitle>
<contexts>
<context position="2436" citStr="Ahmed et al., 2012" startWordPosition="377" endWordPosition="380">aps between syntax and semantics. Consequently, the argument structure representation for light verb constructions (LVC) has resulted in two opposing views in syntactic theory. One view supports a noun-centric analysis of the LVC, where the noun is represented with all the arguments of the LVC e.g. (Grimshaw and Mester, 1988; Kearns, 1988). The light verb’s only role is to theta-mark the arguments of the LVC, without any semantic contribution. The second view proposes argument sharing between the noun and the light verb as they both contribute to the argument structure of the LVC (Butt, 1995; Ahmed et al., 2012). We refer to such analyses as verb-centric analyses. Within the framework of this debate, we propose to use Lexicalized Feature-based Tree Adjoining Grammar, which is a variant of Tree Adjoining Grammar (TAG). TAG has been used to represent light verb constructions in French (Abeill´e, 1988) and Korean (Han and Rambow, 2000). The primitive structures of TAG are its elementary trees, which encapsulate the syntactic and semantic arguments of its lexical anchor (for a light verb construction, the noun and light verb respectively will be the anchors). The association of a structural object with a</context>
<context position="15918" citStr="Ahmed et al. (2012)" startWordPosition="2632" endWordPosition="2635">ments for the light verb construction is instead represented in the nominal’s tree. The light verb can only choose 3Based on the comments of the reviewers we are now considering a revision of the noun-centric analysis in this paper. It may seem that a verb-centric analysis may be more appropriate for Hindi LVCs. However, due to lack of space, we do not explore the second option fully in this paper and leave it to future work. 131 the semantic property of the nominal it may combine with (e.g., the light verb ho may combine only with nominals that have no agentive arguments). Other analyses e.g Ahmed et al. (2012) represent the light verb kar ‘do’ with arguments of its own. We discuss this in Section 5. Our work follows Han and Rambow (2000)’s representation of Sino-Korean LVCs. This work has also proposed separate trees for the nominal and light verb. The elementary tree of the nominal is an an initial tree, and as it is considered the true predicate, it also chooses a syntactic structure that will realize all its arguments. The light verb on the other hand is represented as an auxiliary tree, therefore it is an adjunct to the nominal’s basic structure. However, as it is a predicate, it is also a spec</context>
<context position="23642" citStr="Ahmed et al. (2012)" startWordPosition="3989" endWordPosition="3992">ue ‘The jewels were stolen’. The feature clash this time is higher in the tree at XP1 and is marked with a box. S h i cat=v tense=+ perf=+ agt=+ h i cat=v tense=+ perf=+ agt=+ h i cat=v tense=+ perf=+ agt=+ agr=mpl h i cat=v tense=+ perf=+ agt=+ agr=mpl h i cat=v tense=+ perf=+ agt=+ agr=mpl h i cat=v tense=+ perf=+ agt=+ agr=mpl h i cat=v tense=+ perf=+ agt=+ agr=mpl h i cat=v tense=+ perf=+ agt=+ agr=mpl VP XP VP 2 V 134 2 5 Discussion The elementary trees for chorii ‘theft’–both agentive and non-agentive are able to capture its alternations with kar “do” and ho ‘be’. This is in contrast to Ahmed et al. (2012)’s approach in an important way. They do not consider the nominal’s alternation with the light verb ho “be” as a light verb construction. Instead, they maintain that it has a resultative reading and provide a different analysis within the Lexical Functional Grammar (LFG) framework. In fact, the alternation with ho “be” provides a useful lexical alternative to an alternative syntactic structure (such as a passive). The alternation of the light verb ho “be” and kar “do” is moreover a characteristic of a certain group of nominals only (not all can show this alternation e.g., intizar “waiting” cf.</context>
</contexts>
<marker>Ahmed, Butt, Hautli, Sulger, 2012</marker>
<rawString>Tafseer Ahmed, Miriam Butt, Annette Hautli, and Sebastian Sulger. 2012. A reference dependency bank for analyzing complex predicates. In Proceedings of the Eight International Conference on Language Resources and Evaluation (LREC’12).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Srinivas Bangalore</author>
<author>Aravind Joshi</author>
</authors>
<date>2010</date>
<booktitle>Introduction. In Srinivas Bangalore and Aravind Joshi, editors, Supertagging: Using Complex Lexical Descriptions in Natural Language Processing,</booktitle>
<pages>1--31</pages>
<publisher>MIT Press,</publisher>
<location>Cambridge.</location>
<contexts>
<context position="15185" citStr="Bangalore and Joshi, 2010" startWordPosition="2503" endWordPosition="2506"> richer and more complex increases ambiguity locally and we then have more descriptions for the same lexical item. But these structures also capture local dependencies i.e., the fact that the lexical item can appear in varying linguistic environments. Second, this is in keeping with the TAG notion of using complex elementary structures to capture linguistic properties and having very general operations (substitution and adjunction) to combine these structures. This has been used effectively in computational applications and is characterised by the slogan complicate locally, simplify globally (Bangalore and Joshi, 2010). 4 Analysis In a noun-centric analysis, the light verb does not have arguments of its own. The full array of arguments for the light verb construction is instead represented in the nominal’s tree. The light verb can only choose 3Based on the comments of the reviewers we are now considering a revision of the noun-centric analysis in this paper. It may seem that a verb-centric analysis may be more appropriate for Hindi LVCs. However, due to lack of space, we do not explore the second option fully in this paper and leave it to future work. 131 the semantic property of the nominal it may combine </context>
</contexts>
<marker>Bangalore, Joshi, 2010</marker>
<rawString>Srinivas Bangalore and Aravind Joshi. 2010. Introduction. In Srinivas Bangalore and Aravind Joshi, editors, Supertagging: Using Complex Lexical Descriptions in Natural Language Processing, pages 1–31. MIT Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rajesh Bhatt</author>
<author>Owen Rambow</author>
<author>Fei Xia</author>
</authors>
<title>Creating a Tree Adjoining Grammar from a Multilayer Treebank.</title>
<date>2012</date>
<booktitle>In Proceedings of the 11th International Workshop on Tree Adjoining Grammars and Related Formalisms (TAG+11),</booktitle>
<pages>162--170</pages>
<contexts>
<context position="25369" citStr="Bhatt et al., 2012" startWordPosition="4276" endWordPosition="4279"> two approaches need to be explored more thoroughly within the TAG framework and we leave this to future work. While this work has examined one class of nominals that occur as part of light verb constructions, it does not complete the analysis of light verb constructions in Hindi. The behaviour of other nominal classes remains to be explored. There are also nominals that occur with light verbs other than kar ‘do’ and ho ‘be’. Finally, while the work presented here is mainly theoretical, it is in keeping with recent proposals for extracting a Hindi TAG grammar from a phrase structure treebank (Bhatt et al., 2012; Mannem et al., 2009). The algorithm in Bhatt et al. (2012) relies on the annotated Hindi Dependency Treebank and proposes a rule extraction system for elementary trees. Therefore, the description of Hindi LVCs in TAG would be a useful addition to the implementation of a grammar extraction task. Acknowledgements The first author was supported by DAAD (Deutscher Akademischer Austausch Dienst) for a research stay at the University of Konstanz in 2013-14s. We are also thankful to Prof Miriam Butt for hosting the first author at the University of Konstanz. We would like to thank Bhuvana Narasimha</context>
</contexts>
<marker>Bhatt, Rambow, Xia, 2012</marker>
<rawString>Rajesh Bhatt, Owen Rambow, and Fei Xia. 2012. Creating a Tree Adjoining Grammar from a Multilayer Treebank. In Proceedings of the 11th International Workshop on Tree Adjoining Grammars and Related Formalisms (TAG+11), pages 162–170.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rajesh Bhatt</author>
<author>Annahita Farudi</author>
<author>Owen Rambow</author>
</authors>
<title>Hindi-Urdu Phrase Structure Annotation Guidelines. http://verbs.colorado.edu/hindiurdu/guidelines docs/PhraseStructureguidelines.pdf,</title>
<date>2013</date>
<booktitle>The Structure of Complex Predicates in Urdu.</booktitle>
<publisher>CSLI Publications, Stanford.</publisher>
<institution>November. Miriam Butt.</institution>
<contexts>
<context position="781" citStr="Bhatt et al., 2013" startWordPosition="109" endWordPosition="112"> Columbia University New York, NY 10115, USA rambow@ccls.columbia.edu Martha Palmer University of Colorado Boulder, CO 80309, USA mpalmer@colorado.edu Abstract In this paper we present a Lexicalized Feature-based Tree-Adjoining Grammar analysis for a type of nominal predicate that occurs in combination with the light verbs “do” and “be” (Hindi kar and ho respectively). Light verb constructions are a challenge for computational grammars because they are a highly productive predicational strategy in Hindi. Such nominals have been discussed in the literature (Mohanan, 1997; Ahmed and Butt, 2011; Bhatt et al., 2013), but this work is a first attempt at a Tree-Adjoining Grammar (TAG) representation. We look at three possibilities for the design of elementary trees in TAG and explore one option in depth using Hindi data. In this analysis, the nominal is represented with all the arguments of the light verb construction, while the light verb adjoins into its elementary tree. 1 Introduction Lexical resource development for computational analyses in Hindi must contend with a large number of light verb constructions. For instance, in the Hindi Treebank (Palmer et al., 2009), nearly 37% of the predicates have be</context>
<context position="20374" citStr="Bhatt et al. (2013" startWordPosition="3412" endWordPosition="3415">] h i cat=[20] tense=- nagr=- case=[15] chorii Figure 5: Tree for nominal chorii ‘theft’ -agentive, as seen in Ram ne gehene chorii kiye “Ram stole the jewels”. The feature clash at XP2 is marked with a box. 4.2 The nominal In contrast to the impoverished argument structure of the light verb, the nominal in Figure 5 has the full array of arguments for chorii ‘theft’. The tree is anchored by the lexical item chorii and the non terminals at NP1 and NP2 are marked with a 1 for substitution with the actual lexical items. The position of the arguments roughly follows the configuration described in Bhatt et al. (2013, p. 59) , where the first position is the ergative-marked argument and is found in a transitive sentence (but only if the property [PERF=+] is also present.) The ‘second’ position is one where the object of the transitive verb is found. In Figure 5, this is represented as NP2 and is the nominative marked argument. The elementary tree for the nominal is not complete, because of the feature clash at XP2 between [TENSE=+] vs. [TENSE=-]. The feature clash represents an obligatory adjunction constraint which will require the light verb to adjoin at this node. The first position in Figure 5 has the</context>
</contexts>
<marker>Bhatt, Farudi, Rambow, 2013</marker>
<rawString>Rajesh Bhatt, Annahita Farudi, and Owen Rambow. 2013. Hindi-Urdu Phrase Structure Annotation Guidelines. http://verbs.colorado.edu/hindiurdu/guidelines docs/PhraseStructureguidelines.pdf, November. Miriam Butt. 1995. The Structure of Complex Predicates in Urdu. CSLI Publications, Stanford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claudia Claridge</author>
</authors>
<title>Multi-word Verbs in Early Modern English: A Corpus-based Study.</title>
<date>2000</date>
<journal>Editions Rodopi B. V., Amsterdam-Atlanta edition.</journal>
<contexts>
<context position="10270" citStr="Claridge, 2000" startWordPosition="1713" endWordPosition="1714">ho ‘be’ (Ahmed and Butt, 2011). The alternation with ho ‘be’ has an intransitivizing effect. In (1) and (2), a change in the light verb results in the presence or absence of the agent argument. The nominal chorii is the same, but the LVC in (1) requires only a Theme argument, whereas (2) needs an Agent and a Theme. (1) gehene chorii hue. jewels.M theft.F be.Perf.MPl ‘The jewels got stolen’ (2) Ram-ne gehene chorii kiye. Ram-Erg jewels.M.Pl theft.F do.Perf.M.Pl ‘Ram stole the jewels ’ In English, a similar alternation structure may be found with light verbs in bring to light vs. come to light (Claridge, 2000). Here, two light verbs bring and come are used to express either a causative or inchoative reading. In the Hindi examples, the light verb ho ‘be’ and the light verb kar ‘do’ are used to express the inchoative vs. causative reading. In Persian, kardan ‘make or do’ and ˆsodan ‘become’ are used in a manner similar (although not identical) to Hindi. The noun chorii ‘theft’ belongs to a particular class of nouns where a change in the light verb does result in a change in the arguments, but the agent argument is always presupposed, irrespective of the light verb. For instance, the addition of a phr</context>
</contexts>
<marker>Claridge, 2000</marker>
<rawString>Claudia Claridge. 2000. Multi-word Verbs in Early Modern English: A Corpus-based Study. Editions Rodopi B. V., Amsterdam-Atlanta edition.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alice Davison</author>
</authors>
<title>Phrasal predicates: How N combines with V in Hindi/Urdu.</title>
<date>2005</date>
<booktitle>In Tanmoy Bhattacharya, editor, Yearbook of South Asian Languages and Linguistics,</booktitle>
<pages>83--116</pages>
<note>Mouton de Gruyter.</note>
<contexts>
<context position="12924" citStr="Davison, 2005" startWordPosition="2155" endWordPosition="2156">ge, where ergative case on the subject is found only with transitive verbs in the perfective aspect. For non-perfective aspect, the subject is nominative. 130 represent the LVC chorii kar ‘theft do; steal’ as the anchor of a single elementary tree– a single multiword expression. While the first two options are worth exploring, we discard the third option for two reasons: first, the LVC is highly productive in Hindi, which would imply that this would result in too many elementary trees in the grammar. Second, there is evidence that the LVC forms a phrasal category in the syntax (Mohanan, 1997; Davison, 2005). This means that individual components of the LVC may be moved away from each other, emphatic particles or negation may intervene and the noun component may be independently modified by an adjective. Therefore, the multi-word option would not be the best approach here. This is in contrast to previous TAG analyses for English LVCs where both nominal and verb are anchored in the same elementary tree (XTAG-Group, 2001). Figure 3 shows the derivation trees (cf. Figure 2) for the three different analysis options as described above for the sentence Ram ne gehene chorii kiye ‘Ram stole the jewels’. </context>
</contexts>
<marker>Davison, 2005</marker>
<rawString>Alice Davison. 2005. Phrasal predicates: How N combines with V in Hindi/Urdu. In Tanmoy Bhattacharya, editor, Yearbook of South Asian Languages and Linguistics, pages 83–116. Mouton de Gruyter.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Frank</author>
</authors>
<title>Phrase Structure Composition and Syntactic Dependencies.</title>
<date>2002</date>
<journal>Linguistic Inquiry,</journal>
<volume>9</volume>
<issue>2</issue>
<publisher>MIT Press,</publisher>
<location>Cambridge. Jane Grimshaw</location>
<contexts>
<context position="8099" citStr="Frank, 2002" startWordPosition="1313" endWordPosition="1314">e resulting tree is called a derived tree, but another by-product of the TAG analysis is also the derivation tree. This tree has numbered node labels that record the history of composition of the elementary trees. For example, the tree for Jill is running can be seen in Figure 2. The root of this tree is labelled with running, which is an initial tree of the type S. An important characteristic of lexicalized elementary trees is their correspondence with that lexical item’s predicate-argument structure. This has sometimes been formalized as the PACP (PredicateArgument Co-occurrence Principle) (Frank, 2002). The PACP restricts the structure of the elementary trees such that they may not be drawn arbitrarily. At the same time, lexicalized TAGs will often have the 1It is possible that many more nouns occur in this group, but all their alternations are not instantiated in the Treebank corpus. 128 running After top-bottom unification: S &amp;quot; AGR= 1 [PERS=3 NUM=sg] VP MODE=ind h i V AGR= 1 MODE=ind is V running Figure 1: LTAG showing feature structures and constraints on adjunction (Example adapted from (Kallmeyer and Osswald, 2013)) running 1 2 Jill is Figure 2: Derivation tree for ‘Jill is running’. T</context>
</contexts>
<marker>Frank, 2002</marker>
<rawString>Robert Frank. 2002. Phrase Structure Composition and Syntactic Dependencies. MIT Press, Cambridge. Jane Grimshaw and Armin Mester. 1988. Light verbs and theta-marking. Linguistic Inquiry, 9(2):205–232.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chung-hye Han</author>
<author>Owen Rambow</author>
</authors>
<title>The Sino-Korean light verb construction and lexical argument structure.</title>
<date>2000</date>
<booktitle>In Proceedings of the Fifth International Workshop on Tree-Adjoining Grammars and Related Formalisms, TAG+5.</booktitle>
<contexts>
<context position="2763" citStr="Han and Rambow, 2000" startWordPosition="428" endWordPosition="431">8; Kearns, 1988). The light verb’s only role is to theta-mark the arguments of the LVC, without any semantic contribution. The second view proposes argument sharing between the noun and the light verb as they both contribute to the argument structure of the LVC (Butt, 1995; Ahmed et al., 2012). We refer to such analyses as verb-centric analyses. Within the framework of this debate, we propose to use Lexicalized Feature-based Tree Adjoining Grammar, which is a variant of Tree Adjoining Grammar (TAG). TAG has been used to represent light verb constructions in French (Abeill´e, 1988) and Korean (Han and Rambow, 2000). The primitive structures of TAG are its elementary trees, which encapsulate the syntactic and semantic arguments of its lexical anchor (for a light verb construction, the noun and light verb respectively will be the anchors). The association of a structural object with a linguistic anchor allows TAG to specify all the linguistic constraints associated with the anchor over a local domain. This is especially advantageous for composing the complex argument structure of a LVC. In comparison with other formalisms (e.g. context-free grammars), this property gives TAG an extended domain of locality</context>
<context position="16048" citStr="Han and Rambow (2000)" startWordPosition="2656" endWordPosition="2659"> comments of the reviewers we are now considering a revision of the noun-centric analysis in this paper. It may seem that a verb-centric analysis may be more appropriate for Hindi LVCs. However, due to lack of space, we do not explore the second option fully in this paper and leave it to future work. 131 the semantic property of the nominal it may combine with (e.g., the light verb ho may combine only with nominals that have no agentive arguments). Other analyses e.g Ahmed et al. (2012) represent the light verb kar ‘do’ with arguments of its own. We discuss this in Section 5. Our work follows Han and Rambow (2000)’s representation of Sino-Korean LVCs. This work has also proposed separate trees for the nominal and light verb. The elementary tree of the nominal is an an initial tree, and as it is considered the true predicate, it also chooses a syntactic structure that will realize all its arguments. The light verb on the other hand is represented as an auxiliary tree, therefore it is an adjunct to the nominal’s basic structure. However, as it is a predicate, it is also a special type of auxiliary tree viz., a predicative auxiliary tree (Abeill´e and Rambow, 2000). The second feature of this analysis, al</context>
</contexts>
<marker>Han, Rambow, 2000</marker>
<rawString>Chung-hye Han and Owen Rambow. 2000. The Sino-Korean light verb construction and lexical argument structure. In Proceedings of the Fifth International Workshop on Tree-Adjoining Grammars and Related Formalisms, TAG+5.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chung-hye Han</author>
<author>Juntae Yoon</author>
<author>Nari Kim</author>
<author>Martha Palmer</author>
</authors>
<title>A Feature based Lexicalized Tree Adjoining Grammar for Korean.</title>
<date>2000</date>
<tech>Technical report,</tech>
<institution>Institute for Research in Cognitive Science, University of Pennsylvania,</institution>
<note>http://www.cis.upenn.edu/˜xtag/koreantag.</note>
<contexts>
<context position="5899" citStr="Han et al., 2000" startWordPosition="926" endWordPosition="929">ature structures (Vijay-Shanker and Joshi, 1988). These can capture linguistic descriptions in a more precise manner and also capture adjunction constraints. TAG with feature structures is also known as FTAG (Feature-structure based TAG). A TAG can also be lexicalized i.e., an elementary tree has a lexical item as one of its terminal nodes. Lexicalized TAG enhanced with feature structures is known as Lexicalized Feature-based Tree-Adjoining Grammar (LF-TAG). This has been used for developing computational grammars for English (XTAG-Group, 2001), French (Abeill´e and Candito, 2000) and Korean (Han et al., 2000). In our analysis, we will also use LF-TAG, but we will refer to it as LTAG for convenience. Figure 1 shows the basic steps for composing elementary trees containing feature structures. Each node has a top and a bottom feature structure. Features can be shared among nodes in an elementary tree. In the tree for the verb running, the variable 1 is used to show that the verb must share the same features as the subject NP. The tree for running is an initial tree with a single terminal for its argument noun phrase (NP). The tree for is, on the other hand, is a special type of elementary tree called</context>
</contexts>
<marker>Han, Yoon, Kim, Palmer, 2000</marker>
<rawString>Chung-hye Han, Juntae Yoon, Nari Kim, and Martha Palmer. 2000. A Feature based Lexicalized Tree Adjoining Grammar for Korean. Technical report, Institute for Research in Cognitive Science, University of Pennsylvania, http://www.cis.upenn.edu/˜xtag/koreantag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aravind Joshi</author>
<author>Y Schabes</author>
</authors>
<title>Tree-adjoining grammars.</title>
<date>1997</date>
<booktitle>Handbook of Formal Languages,</booktitle>
<volume>3</volume>
<pages>69--124</pages>
<editor>In G. Rozenburg and A. Salomaa, editors,</editor>
<publisher>Springer.</publisher>
<contexts>
<context position="4883" citStr="Joshi and Schabes, 1997" startWordPosition="765" endWordPosition="768">in the Treebank. Note that other light verbs also occur in Hindi e.g. de ‘give’, le ‘take’ etc. but they are not part of this study. Section 3 has some examples of these predicating nominals. Before this, Section 2 will introduce the TAG formalism. Section 4 describes the design of the elementary trees that are the basis of the analysis and in the final section we summarize our findings and make suggestions for future work. 2 Lexicalized Feature based Tree Adjoining Grammar Tree-Adjoining Grammar (TAG) is a formal tree-rewriting system that is used to describe the syntax of natural languages (Joshi and Schabes, 1997). The basic structure of a TAG grammar is an elementary tree, which is a fragment of a phrase structure tree labelled with both terminal and non-terminal nodes. The elementary trees are combined by the operations of substitution (where a terminal node is replaced with a new tree) or adjunction (where an internal node is split to add a new tree). The elementary trees in TAG can be enriched with feature structures (Vijay-Shanker and Joshi, 1988). These can capture linguistic descriptions in a more precise manner and also capture adjunction constraints. TAG with feature structures is also known a</context>
</contexts>
<marker>Joshi, Schabes, 1997</marker>
<rawString>Aravind Joshi and Y. Schabes. 1997. Tree-adjoining grammars. In G. Rozenburg and A. Salomaa, editors, Handbook of Formal Languages, volume 3, pages 69–124. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laura Kallmeyer</author>
<author>Rainer Osswald</author>
</authors>
<title>Syntax-driven semantic frame composition in Lexicalized Tree Adjoining Grammars.</title>
<date>2013</date>
<journal>Journal of Language Modelling,</journal>
<volume>1</volume>
<issue>2</issue>
<contexts>
<context position="8627" citStr="Kallmeyer and Osswald, 2013" startWordPosition="1399" endWordPosition="1402"> has sometimes been formalized as the PACP (PredicateArgument Co-occurrence Principle) (Frank, 2002). The PACP restricts the structure of the elementary trees such that they may not be drawn arbitrarily. At the same time, lexicalized TAGs will often have the 1It is possible that many more nouns occur in this group, but all their alternations are not instantiated in the Treebank corpus. 128 running After top-bottom unification: S &amp;quot; AGR= 1 [PERS=3 NUM=sg] VP MODE=ind h i V AGR= 1 MODE=ind is V running Figure 1: LTAG showing feature structures and constraints on adjunction (Example adapted from (Kallmeyer and Osswald, 2013)) running 1 2 Jill is Figure 2: Derivation tree for ‘Jill is running’. The dashed node indicates adjunction and the solid node indicates substitution Jill is is V S h i AGR= 1 MODE=ind h i MODE=ger VP h i NP AGR= 1 [] V h i AGR=[PERS=3 num=sg] running NP N h i AGR= 2 [PERS=3 num=sg] V h i VP AGR= 2 MODE= 3 h i MODE= 3 ind h i VP* MODE=ger S h i AGR= 1 h i agr=[pers=3 num=sg] VP h i MODE= 3 ind h i AGR= 2 [PERS=3 num=sg] V After substitution and adjunction: h i AGR= 1 MODE=ind h i AGR= 2 MODE= 3 VP h i MODE=ger h i MODE=ger NP Jill h i NP AGR= 1 Jill h i VP MODE=ger 129 same lexical item realiz</context>
</contexts>
<marker>Kallmeyer, Osswald, 2013</marker>
<rawString>Laura Kallmeyer and Rainer Osswald. 2013. Syntax-driven semantic frame composition in Lexicalized Tree Adjoining Grammars. Journal of Language Modelling, 1(2):267–330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kate Kearns</author>
</authors>
<date>1988</date>
<note>Light verbs in English. Manuscript, MIT (revised</note>
<contexts>
<context position="2158" citStr="Kearns, 1988" startWordPosition="331" endWordPosition="332">yaad ‘memory’ combines with kar ‘do’ to form yaad kar ‘remember’. In light verb constructions, the noun is a predicating element along with the light verb. The presence of two predicating elements representing a single meaning is a challenge for a linguistic theory that maps between syntax and semantics. Consequently, the argument structure representation for light verb constructions (LVC) has resulted in two opposing views in syntactic theory. One view supports a noun-centric analysis of the LVC, where the noun is represented with all the arguments of the LVC e.g. (Grimshaw and Mester, 1988; Kearns, 1988). The light verb’s only role is to theta-mark the arguments of the LVC, without any semantic contribution. The second view proposes argument sharing between the noun and the light verb as they both contribute to the argument structure of the LVC (Butt, 1995; Ahmed et al., 2012). We refer to such analyses as verb-centric analyses. Within the framework of this debate, we propose to use Lexicalized Feature-based Tree Adjoining Grammar, which is a variant of Tree Adjoining Grammar (TAG). TAG has been used to represent light verb constructions in French (Abeill´e, 1988) and Korean (Han and Rambow, </context>
</contexts>
<marker>Kearns, 1988</marker>
<rawString>Kate Kearns. 1988. Light verbs in English. Manuscript, MIT (revised 2002).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Prashanth Mannem</author>
<author>Aswarth Abhilash</author>
<author>Akshar Bharati</author>
</authors>
<title>LTAG-spinal Treebank and Parser for Hindi.</title>
<date>2009</date>
<booktitle>In Proceedings of ICON-2009: 7th International Conference on Natural Language Processing.</booktitle>
<contexts>
<context position="25391" citStr="Mannem et al., 2009" startWordPosition="4280" endWordPosition="4283"> to be explored more thoroughly within the TAG framework and we leave this to future work. While this work has examined one class of nominals that occur as part of light verb constructions, it does not complete the analysis of light verb constructions in Hindi. The behaviour of other nominal classes remains to be explored. There are also nominals that occur with light verbs other than kar ‘do’ and ho ‘be’. Finally, while the work presented here is mainly theoretical, it is in keeping with recent proposals for extracting a Hindi TAG grammar from a phrase structure treebank (Bhatt et al., 2012; Mannem et al., 2009). The algorithm in Bhatt et al. (2012) relies on the annotated Hindi Dependency Treebank and proposes a rule extraction system for elementary trees. Therefore, the description of Hindi LVCs in TAG would be a useful addition to the implementation of a grammar extraction task. Acknowledgements The first author was supported by DAAD (Deutscher Akademischer Austausch Dienst) for a research stay at the University of Konstanz in 2013-14s. We are also thankful to Prof Miriam Butt for hosting the first author at the University of Konstanz. We would like to thank Bhuvana Narasimhan, Miriam Butt and the</context>
</contexts>
<marker>Mannem, Abhilash, Bharati, 2009</marker>
<rawString>Prashanth Mannem, Aswarth Abhilash, and Akshar Bharati. 2009. LTAG-spinal Treebank and Parser for Hindi. In Proceedings of ICON-2009: 7th International Conference on Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tara Mohanan</author>
</authors>
<title>Wordhood and Lexicality- Noun Incorporation</title>
<date>1995</date>
<booktitle>in Hindi. Natural Language and Linguistic Theory,</booktitle>
<pages>13--75</pages>
<contexts>
<context position="19361" citStr="Mohanan, 1995" startWordPosition="3235" endWordPosition="3236">y tree of a nominal. The CASE value is specified as NOM (nominative) as the light verb will assign nominative case to the noun. The NAGR feature is required when the light verb agrees in number and gender with the predicative nominal itself (Mohanan, 1997). As this will not occur in the examples we are working with, the value for NAGR is negative. For other ‘standard’ cases of agreement, the feature AGR is used (It is also useful to note that the verbal agreement rule in Hindi differs from English as the verb agrees with the highest nominative marked argument- and not necessarily the subject (Mohanan, 1995)). V 132 S ⎡case=erg cat=n ⎢ ⎣perf=+[1] agt=+[2] agr=[13] ⎤ ⎦⎥ NP1 1 h i cat=v tense=+ perf=+[1] agt=+[2] h i cat=v tense=+ perf=[3] agt=[4] h i cat=v tense=+ perf=[3] agt=[4] agr=[11] h i cat=v tense=+ perf=[5] agt=[6]agr=[10] VP XP NP2 1 ⎡ ⎤ case=nom ⎢ ⎥ ⎣cat=n ⎦ agr=[11] h i cat=v tense=+ perf=[5] agt=[6] agr=[10] h i cat=[19] tense=- nagr=- case=[14] X h i cat=[19] tense=- nagr=- case=[14] h i cat=[20] tense=- nagr=- case=[15] chorii Figure 5: Tree for nominal chorii ‘theft’ -agentive, as seen in Ram ne gehene chorii kiye “Ram stole the jewels”. The feature clash at XP2 is marked with a bo</context>
</contexts>
<marker>Mohanan, 1995</marker>
<rawString>Tara Mohanan. 1995. Wordhood and Lexicality- Noun Incorporation in Hindi. Natural Language and Linguistic Theory, 13:75–134.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tara Mohanan</author>
</authors>
<title>Multidimensionality of representation- NV complex predicates in Hindi.</title>
<date>1997</date>
<editor>In Alex Alsina, Joan Bresnan, and Peter Sells, editors, Complex Predicates.</editor>
<publisher>CSLI Publications, Stanford.</publisher>
<contexts>
<context position="738" citStr="Mohanan, 1997" startWordPosition="103" endWordPosition="104"> USA vaidyaa@colorado.edu Owen Rambow Columbia University New York, NY 10115, USA rambow@ccls.columbia.edu Martha Palmer University of Colorado Boulder, CO 80309, USA mpalmer@colorado.edu Abstract In this paper we present a Lexicalized Feature-based Tree-Adjoining Grammar analysis for a type of nominal predicate that occurs in combination with the light verbs “do” and “be” (Hindi kar and ho respectively). Light verb constructions are a challenge for computational grammars because they are a highly productive predicational strategy in Hindi. Such nominals have been discussed in the literature (Mohanan, 1997; Ahmed and Butt, 2011; Bhatt et al., 2013), but this work is a first attempt at a Tree-Adjoining Grammar (TAG) representation. We look at three possibilities for the design of elementary trees in TAG and explore one option in depth using Hindi data. In this analysis, the nominal is represented with all the arguments of the light verb construction, while the light verb adjoins into its elementary tree. 1 Introduction Lexical resource development for computational analyses in Hindi must contend with a large number of light verb constructions. For instance, in the Hindi Treebank (Palmer et al., </context>
<context position="12908" citStr="Mohanan, 1997" startWordPosition="2153" endWordPosition="2154">ergative language, where ergative case on the subject is found only with transitive verbs in the perfective aspect. For non-perfective aspect, the subject is nominative. 130 represent the LVC chorii kar ‘theft do; steal’ as the anchor of a single elementary tree– a single multiword expression. While the first two options are worth exploring, we discard the third option for two reasons: first, the LVC is highly productive in Hindi, which would imply that this would result in too many elementary trees in the grammar. Second, there is evidence that the LVC forms a phrasal category in the syntax (Mohanan, 1997; Davison, 2005). This means that individual components of the LVC may be moved away from each other, emphatic particles or negation may intervene and the noun component may be independently modified by an adjective. Therefore, the multi-word option would not be the best approach here. This is in contrast to previous TAG analyses for English LVCs where both nominal and verb are anchored in the same elementary tree (XTAG-Group, 2001). Figure 3 shows the derivation trees (cf. Figure 2) for the three different analysis options as described above for the sentence Ram ne gehene chorii kiye ‘Ram sto</context>
<context position="19003" citStr="Mohanan, 1997" startWordPosition="3173" endWordPosition="3174">gr=mpl [ ] cat=v tense=+ perf=+ agt=+ agr=mpl [ ] cat=v tense=+ perf=+ agt=+ agr=mpl XP f VP [ ] cat=v tense=+ perf=+ agt=+ agr=mpl [ ] cat=v tense=+ perf=+ agt=+ agr=mpl kiye Figure 4: Elementary tree for light verb kar ‘do’ inflected as kiye‘do.masc.pl.perf’ The XP f (foot) node has [TENSE=-] and [CAT=N], which will enable it to adjoin into the elementary tree of a nominal. The CASE value is specified as NOM (nominative) as the light verb will assign nominative case to the noun. The NAGR feature is required when the light verb agrees in number and gender with the predicative nominal itself (Mohanan, 1997). As this will not occur in the examples we are working with, the value for NAGR is negative. For other ‘standard’ cases of agreement, the feature AGR is used (It is also useful to note that the verbal agreement rule in Hindi differs from English as the verb agrees with the highest nominative marked argument- and not necessarily the subject (Mohanan, 1995)). V 132 S ⎡case=erg cat=n ⎢ ⎣perf=+[1] agt=+[2] agr=[13] ⎤ ⎦⎥ NP1 1 h i cat=v tense=+ perf=+[1] agt=+[2] h i cat=v tense=+ perf=[3] agt=[4] h i cat=v tense=+ perf=[3] agt=[4] agr=[11] h i cat=v tense=+ perf=[5] agt=[6]agr=[10] VP XP NP2 1 ⎡ </context>
</contexts>
<marker>Mohanan, 1997</marker>
<rawString>Tara Mohanan. 1997. Multidimensionality of representation- NV complex predicates in Hindi. In Alex Alsina, Joan Bresnan, and Peter Sells, editors, Complex Predicates. CSLI Publications, Stanford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martha Palmer</author>
<author>Rajesh Bhatt</author>
<author>Bhuvana Narasimhan</author>
<author>Owen Rambow</author>
<author>Dipti Misra Sharma</author>
<author>Fei Xia</author>
</authors>
<title>Hindi Syntax: Annotating Dependency, Lexical Predicate-Argument Structure, and Phrase Structure.</title>
<date>2009</date>
<booktitle>In Proceedings of ICON-2009: 7th International Conference on Natural Language Processing,</booktitle>
<location>Hyderabad.</location>
<contexts>
<context position="1343" citStr="Palmer et al., 2009" startWordPosition="199" endWordPosition="202"> (Mohanan, 1997; Ahmed and Butt, 2011; Bhatt et al., 2013), but this work is a first attempt at a Tree-Adjoining Grammar (TAG) representation. We look at three possibilities for the design of elementary trees in TAG and explore one option in depth using Hindi data. In this analysis, the nominal is represented with all the arguments of the light verb construction, while the light verb adjoins into its elementary tree. 1 Introduction Lexical resource development for computational analyses in Hindi must contend with a large number of light verb constructions. For instance, in the Hindi Treebank (Palmer et al., 2009), nearly 37% of the predicates have been annotated as light verb constructions. Hence, the combination of a noun with a light verb is a productive predicational strategy in Hindi. For example, the noun yaad ‘memory’ combines with kar ‘do’ to form yaad kar ‘remember’. In light verb constructions, the noun is a predicating element along with the light verb. The presence of two predicating elements representing a single meaning is a challenge for a linguistic theory that maps between syntax and semantics. Consequently, the argument structure representation for light verb constructions (LVC) has r</context>
<context position="4191" citStr="Palmer et al., 2009" startWordPosition="651" endWordPosition="654">/4.0/ 127 Proceedings of the Workshop on Lexical and Grammatical Resources for Language Processing, pages 127–136, Coling 2014, Dublin, Ireland, August 24 2014. In this paper, we look at a particular group of nouns that occur with light verbs ‘do’ and ‘be’ (kar and ho) as part of a light verb construction. The same noun alternates with either light verb, resulting in a change in the argument structure of the verb. For example the noun chorii ‘theft’ can occur as either chorii kar ‘theft do’ or chorii ho ‘theft happen’. There are nearly 265 nouns showing this alternation in the Hindi Treebank (Palmer et al., 2009)1. These constitute about 15% of the total light verb constructions in the Treebank. Note that other light verbs also occur in Hindi e.g. de ‘give’, le ‘take’ etc. but they are not part of this study. Section 3 has some examples of these predicating nominals. Before this, Section 2 will introduce the TAG formalism. Section 4 describes the design of the elementary trees that are the basis of the analysis and in the final section we summarize our findings and make suggestions for future work. 2 Lexicalized Feature based Tree Adjoining Grammar Tree-Adjoining Grammar (TAG) is a formal tree-rewriti</context>
</contexts>
<marker>Palmer, Bhatt, Narasimhan, Rambow, Sharma, Xia, 2009</marker>
<rawString>Martha Palmer, Rajesh Bhatt, Bhuvana Narasimhan, Owen Rambow, Dipti Misra Sharma, and Fei Xia. 2009. Hindi Syntax: Annotating Dependency, Lexical Predicate-Argument Structure, and Phrase Structure. In Proceedings of ICON-2009: 7th International Conference on Natural Language Processing, Hyderabad.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
<author>Aravind Joshi</author>
</authors>
<title>Feature structure based Tree Adjoining Grammars.</title>
<date>1988</date>
<booktitle>In Proceedings of COLING</booktitle>
<contexts>
<context position="5330" citStr="Vijay-Shanker and Joshi, 1988" startWordPosition="840" endWordPosition="843"> Feature based Tree Adjoining Grammar Tree-Adjoining Grammar (TAG) is a formal tree-rewriting system that is used to describe the syntax of natural languages (Joshi and Schabes, 1997). The basic structure of a TAG grammar is an elementary tree, which is a fragment of a phrase structure tree labelled with both terminal and non-terminal nodes. The elementary trees are combined by the operations of substitution (where a terminal node is replaced with a new tree) or adjunction (where an internal node is split to add a new tree). The elementary trees in TAG can be enriched with feature structures (Vijay-Shanker and Joshi, 1988). These can capture linguistic descriptions in a more precise manner and also capture adjunction constraints. TAG with feature structures is also known as FTAG (Feature-structure based TAG). A TAG can also be lexicalized i.e., an elementary tree has a lexical item as one of its terminal nodes. Lexicalized TAG enhanced with feature structures is known as Lexicalized Feature-based Tree-Adjoining Grammar (LF-TAG). This has been used for developing computational grammars for English (XTAG-Group, 2001), French (Abeill´e and Candito, 2000) and Korean (Han et al., 2000). In our analysis, we will also</context>
</contexts>
<marker>Vijay-Shanker, Joshi, 1988</marker>
<rawString>K. Vijay-Shanker and Aravind Joshi. 1988. Feature structure based Tree Adjoining Grammars. In Proceedings of COLING 1988.</rawString>
</citation>
<citation valid="true">
<authors>
<author>The XTAG-Group</author>
</authors>
<title>A Lexicalized Tree Adjoining Grammar for English.</title>
<date>2001</date>
<tech>Technical report, IRCS,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="5832" citStr="XTAG-Group, 2001" startWordPosition="917" endWordPosition="918">dd a new tree). The elementary trees in TAG can be enriched with feature structures (Vijay-Shanker and Joshi, 1988). These can capture linguistic descriptions in a more precise manner and also capture adjunction constraints. TAG with feature structures is also known as FTAG (Feature-structure based TAG). A TAG can also be lexicalized i.e., an elementary tree has a lexical item as one of its terminal nodes. Lexicalized TAG enhanced with feature structures is known as Lexicalized Feature-based Tree-Adjoining Grammar (LF-TAG). This has been used for developing computational grammars for English (XTAG-Group, 2001), French (Abeill´e and Candito, 2000) and Korean (Han et al., 2000). In our analysis, we will also use LF-TAG, but we will refer to it as LTAG for convenience. Figure 1 shows the basic steps for composing elementary trees containing feature structures. Each node has a top and a bottom feature structure. Features can be shared among nodes in an elementary tree. In the tree for the verb running, the variable 1 is used to show that the verb must share the same features as the subject NP. The tree for running is an initial tree with a single terminal for its argument noun phrase (NP). The tree for</context>
<context position="13344" citStr="XTAG-Group, 2001" startWordPosition="2223" endWordPosition="2224">i, which would imply that this would result in too many elementary trees in the grammar. Second, there is evidence that the LVC forms a phrasal category in the syntax (Mohanan, 1997; Davison, 2005). This means that individual components of the LVC may be moved away from each other, emphatic particles or negation may intervene and the noun component may be independently modified by an adjective. Therefore, the multi-word option would not be the best approach here. This is in contrast to previous TAG analyses for English LVCs where both nominal and verb are anchored in the same elementary tree (XTAG-Group, 2001). Figure 3 shows the derivation trees (cf. Figure 2) for the three different analysis options as described above for the sentence Ram ne gehene chorii kiye ‘Ram stole the jewels’. The LVC in question is chorii kar ‘theft do’. The dashed line indicates adjunction into the elementary tree, whereas the solid line indicates substitution. In the noun-centric analysis, the light verb adjoins into the nominal’s elementary tree and contributes no arguments of its own. For the verb-centric analysis, the light verb contributes the argument Ram, whereas the nominal contributes jewels. Finally, for the mu</context>
</contexts>
<marker>XTAG-Group, 2001</marker>
<rawString>The XTAG-Group. 2001. A Lexicalized Tree Adjoining Grammar for English. Technical report, IRCS, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>