<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000448">
<title confidence="0.98005">
ReNoun: Fact Extraction for Nominal Attributes
</title>
<author confidence="0.906578">
Mohamed Yahya∗ Steven Euijong Whang, Rahul Gupta, Alon Halevy
</author>
<affiliation confidence="0.87738">
Max Planck Institute for Informatics Google Research
</affiliation>
<email confidence="0.984827">
myahya@mpi-inf.mpg.de {swhang,grahul,halevy}@google.com
</email>
<sectionHeader confidence="0.997204" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999945321428571">
Search engines are increasingly relying on
large knowledge bases of facts to provide
direct answers to users’ queries. How-
ever, the construction of these knowledge
bases is largely manual and does not scale
to the long and heavy tail of facts. Open
information extraction tries to address this
challenge, but typically assumes that facts
are expressed with verb phrases, and there-
fore has had difficulty extracting facts for
noun-based relations.
We describe ReNoun, an open information
extraction system that complements pre-
vious efforts by focusing on nominal at-
tributes and on the long tail. ReNoun’s ap-
proach is based on leveraging a large on-
tology of noun attributes mined from a text
corpus and from user queries. ReNoun
creates a seed set of training data by us-
ing specialized patterns and requiring that
the facts mention an attribute in the ontol-
ogy. ReNoun then generalizes from this
seed set to produce a much larger set of ex-
tractions that are then scored. We describe
experiments that show that we extract facts
with high precision and for attributes that
cannot be extracted with verb-based tech-
niques.
</bodyText>
<sectionHeader confidence="0.999471" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99926894">
One of the major themes driving the current evo-
lution of search engines is to make the search
experience more efficient and mobile friendly
for users by providing them concrete answers to
queries. These answers, that apply to queries
about entities that the search engine knows about
(e.g., famous individuals, organizations or loca-
tions) complement the links that the search en-
∗Work done during an internship at Google Research.
gine typically returns (Sawant and Chakrabati,
2013; Singhal, 2012; Yahya et al., 2012). To
support such answers, the search engine main-
tains a knowledge base that describes various at-
tributes of an entity (e.g., (Nicolas Sarkozy,
wife, Carla Bruni)). Upon receiving a query,
the search engine tries to recognize whether the
answer is in its knowledge base.
For the most part, the aforementioned knowl-
edge bases are constructed using manual tech-
niques and carefully supervised information ex-
traction algorithms. As a result, they obtain high
coverage on head attributes, but low coverage on
tail ones, such as those shown in Table 1. For ex-
ample, they may have the answer for the query
“Sarkozy’s wife”, but not for “Hollande’s ex-
girlfriend” or “Google’s philanthropic arm”. In
addition to broadening the scope of query answer-
ing, extending the coverage of the knowledge base
to long tail attributes can also facilitate providing
Web answers to the user. Specifically, the search
engine can use lower-confidence facts to corrob-
orate an answer that appears in text in one of the
top Web results and highlight them to the user.
This paper describes ReNoun, an open-
information extraction system that focuses on ex-
tracting facts for long tail attributes. The obser-
vation underlying our approach is that attributes
from the long tail are typically expressed as nouns,
whereas most previous work on open-information
extraction (e.g., Mausam et al. (2012)) extend
techniques for extracting attributes expressed in
verb form. Hence, the main contribution of our
work is to develop an extraction system that com-
plements previous efforts, focuses on nominal at-
tributes and is effective for the long tail. To that
end, ReNoun begins with a large but imperfect on-
tology of nominal attributes that is extracted from
text and the query stream (Gupta et al., 2014).
ReNoun proceeds by using a small set of high-
precision extractors that exploit the nominal na-
</bodyText>
<page confidence="0.985104">
325
</page>
<note confidence="0.957068">
Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 325–335,
October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics
</note>
<table confidence="0.894044333333333">
Attribute Fact Phrase Verb form seen
legal affairs (NPR, legal affairs NPR welcomed Nina Totenberg as X
correspondent correspondent, Nina Totenberg) its new legal affairs correspondent.
economist (Princeton, economist, Princeton economist Paul Krugman X
Paul Krugman) was awarded the Nobel prize in 2008.
ex-boyfriend (Trierweiler, ex-boyfriend, Trierweiler did not have any children ✓
Hollande with her ex-boyfriend Hollande.
staff writer (The New Yorker, staff writer, Adam Gopnik is one of The New ✓
Adam Gopnik) Yorker’s best staff writers.
</table>
<tableCaption confidence="0.94235">
Table 1: Examples of noun phrases as attributes, none which are part of a verb phrase. Additionally, the first two attributes do
not occur within a verb phrase in a large corpus (see § 2 for details) in a setting where they can be associated with a triple.
</tableCaption>
<bodyText confidence="0.999984090909091">
ture of the attributes to obtain a training set, and
then generalizes from the training set via distant
supervision to find a much larger set of extraction
patterns. Finally, ReNoun scores extracted facts
by considering how frequently their patterns ex-
tract triples and the coherence of these patterns,
i.e., whether they extract triples for semantically
similar attributes. Our experiments demonstrate
that ReNoun extracts a large body of high preci-
sion facts, and that these facts are not extracted
with techniques based on verb phrases.
</bodyText>
<sectionHeader confidence="0.996927" genericHeader="introduction">
2 Preliminaries
</sectionHeader>
<bodyText confidence="0.963567953488372">
The goal of ReNoun is to extract triples of the form
(S,A,O), where S is subject, A is the attribute, and
O is the object. In our setting, the attribute is al-
ways a noun phrase. We refer to the subject and
object as the arguments of the attribute.
ReNoun takes as input a set of attributes, which
can be collected using the methods described in
Gupta el al. (2014), Lee et al. (2012), and Pasca
and van Durme (2007). In this work, we use Biper-
pedia (Gupta et al., 2014), which is an ontology
of nominal attributes automatically extracted from
Web text and user queries. For every attribute,
Biperpedia supplies the Freebase (Bollacker et al.,
2008) domain type (e.g., whether the attribute ap-
plies to people, organizations or hotels). Since the
attributes themselves are the result of an extraction
algorithm, they may include false positives (i.e.,
attributes that do not make sense).
The focus of ReNoun is on attributes whose val-
ues are concrete objects (e.g., wife, protege,
chief-economist). Other classes of attributes
that we do not consider in this work are (1) nu-
meric (e.g., population, GDP) that are better ex-
tracted from Web tables (Cafarella et al., 2008),
and (2) vague (e.g., culture, economy) whose
value is a narrative that would not fit the current
mode of query answering on search engines.
We make the distinction between the fat head
and long tail of attributes. To define these two sets,
we ordered the attributes in decreasing order of the
number of occurrences in the corpus 1. We defined
the fat head to be the attributes until the point N
in the ordering such that the sum of the total num-
ber of occurrences of attributes before N equaled
the number of total occurrences of the attributes
after N. In our news corpus, the fat head included
218 attributes (i.e., N = 218) and the long tail
included 60K attributes. Table 2 shows examples
from both.
Fat head daughter, headquarters
president, spokesperson,
Long tail chief economist, defender,
philanthropic arm, protege
</bodyText>
<tableCaption confidence="0.98949">
Table 2: Examples of fat head and long tail attributes.
</tableCaption>
<bodyText confidence="0.99947925">
The output of ReNoun is a set of facts, where
each fact could be generated by multiple extrac-
tions. We store the provenance of each extraction
and the number of times each fact was extracted.
</bodyText>
<subsectionHeader confidence="0.783448">
Noun versus verb attributes
</subsectionHeader>
<bodyText confidence="0.999882583333333">
ReNoun’s goal is to extract facts for attributes ex-
pressed as noun phrases. A natural question is
whether we can exploit prior work on open in-
formation extraction, which focused on extracting
relations expressed as verbs. For example, if we
can extract facts for the attribute advised or is
advisor of, we can populate the noun attribute
advisor with the same facts. In Section 7.2 we
demonstrate that this approach is limited for sev-
eral reasons.
First, attributes in knowledge bases are typically
expressed as noun phrases. Table 3 shows that
</bodyText>
<footnote confidence="0.995220666666667">
1The occurrences were weighted by the number of se-
mantic classes they occur with in the ontology because many
classes overlap.
</footnote>
<page confidence="0.996622">
326
</page>
<table confidence="0.99495">
Knowledge Base %Nouns %Verbs
Freebase 97 3
DBpedia 96 4
</table>
<tableCaption confidence="0.923623">
Table 3: Percentage of attributes expressed as nouns phrases
among the 100 attributes with the most facts.
</tableCaption>
<bodyText confidence="0.99991355">
the vast majority of the attributes in both Freebase
and DBpedia (Auer et al., 2007) are expressed as
nouns even for the fat head (and even more so for
the long tail). Hence, if we extract the verb form
of attributes we would need to translate them into
noun form, which would require us to solve the
paraphrasing problem and introduce more sources
of error (Madnani and Dorr, 2010). Second, as we
dig deeper into the long tail, attributes tend to be
expressed in text more in noun form rather than
verb form. One of the reasons is that the attribute
names tend to get longer and therefore unnatural
to express as verbs (e.g. chief privacy officer, au-
tomotive division). Finally, there is often a sub-
tle difference in meaning between verb forms and
noun forms of attributes. For example, it is com-
mon to see the phrase “Obama advised Merkel on
saving the Euro,” but that would not necessarily
mean we want to say that Obama is an advisor of
Angela Merkel, in the common sense of advisor.
</bodyText>
<subsectionHeader confidence="0.861897">
Processed document corpus
</subsectionHeader>
<bodyText confidence="0.998923166666667">
ReNoun extracts facts from a large corpus of
400M news articles. We exploit rich synactic
and linguistic cues, by processing these docu-
ments with a natural language processing pipeline
comprising of – dependency parsing, noun phrase
chunking, named entity recognition, coreference
resolution, and entity resolution to Freebase. The
chunker identifies nominal mentions in the text
that include our attributes of interest. As discussed
later in the paper, we exploit the dependency
parse, coreference and entity resolution heavily
during various stages of our pipeline.
</bodyText>
<sectionHeader confidence="0.902082" genericHeader="method">
3 Overview of ReNoun
</sectionHeader>
<bodyText confidence="0.997388170212766">
Since ReNoun aims at extracting triples for at-
tributes not present in head-heavy knowledge
bases, one key challenge is that we do not have any
labeled data (i.e. known facts) for such attributes,
especially in the long tail. Therefore ReNoun has
an initial seed fact extraction step that automati-
cally generates a small corpus of relatively precise
seed facts for all attributes, so that distant supervi-
sion can be employed. The second big challenge
is to filter the noise from the resulting extractions.
ReNoun’s extraction pipeline, shown in Fig-
ure 1, is composed of four stages.
Seed fact extraction: We begin by extracting a
small number of high-precision facts for our at-
tributes. For this step, we rely on manually spec-
ified lexical patterns that are specifically tailored
for noun phrases, but are general enough to be in-
dependent of any specific attributes. When apply-
ing such patterns, we exploit coreference to make
the generated seed facts more precise by requiring
the attribute and object noun phrases of a seed fact
to refer to the same real-world entity. This is elab-
orated further in Section 4.
Extraction pattern generation: Utilizing the
seed facts, we use distant supervision (Mintz et al.,
2009) to learn a set of dependency parse patterns
that are used to extract a lot more facts from the
text corpus.
Candidate generation: We apply the learned de-
pendency parse patterns from the previous stage
to generate a much larger set of extractions. We
aggregate all the extractions that give rise to the
same fact and store with them the provenance of
the extraction. The extractions generated here are
called candidates because they are assigned scores
that determine how they are used. The applica-
tion consuming an extraction can decide whether
to discard an extraction or use it, and in this case
the manner in which it is used, based on the scores
we attach to it and the application’s precision re-
quirements.
Scoring: In the final stage, we score the facts, re-
flecting our confidence in their correctness. In-
tuitively, we give a pattern a high score if it ex-
tracts many facts that have semantically similar at-
tributes, and then propagate this score to the facts
extracted by the pattern (Section 6).
</bodyText>
<sectionHeader confidence="0.987295" genericHeader="method">
4 Seed fact extraction
</sectionHeader>
<bodyText confidence="0.9999905">
Since we do not have facts, but only attributes, the
first phase of ReNoun’s pipeline is to extract a set
of high-precision seed facts that are used to train
more general extraction patterns. ReNoun extracts
seed facts using a manually crafted set of extrac-
tion rules (see Table 4). However, the extraction
rules and the application of these rules are tailored
to our task of extracting noun-based attributes.
Specifically, when we apply an extraction rule
to generate a triple (S,A,O), we require that (1) A
is an attribute in our ontology, and (2) the value of
A and the object O corefer to the same real-world
</bodyText>
<page confidence="0.96483">
327
</page>
<figure confidence="0.9995016">
Attributes
(Biperpedia)
Annotated Corpus
Seed fact
extraction
Extraction
pattern learning
Fact
Extraction
Fact Scoring
</figure>
<figureCaption confidence="0.822708">
Figure 1: Extraction Pipeline: we begin with a set of high-precision extractors and use distant supervision to train other
extractors. We then apply the new extractors and score the resulting triples based on the frequency and coherence of the
patterns that produce them.
</figureCaption>
<listItem confidence="0.99018875">
1. the A of S, O – the CEO of Google, Larry Page
2. the A of S is O – the CEO of Google is Larry Page
3. O, S A – Larry Page, Google CEO
4. O, S’s A – Larry Page, Google’s CEO
5. O, [the] A of S – Larry Page, [the] CEO of Google
6. SAO – Google CEO Larry Page
7. S A, O – Google CEO, Larry Page
8. S’s A, O – Google’s CEO, Larry Page
</listItem>
<tableCaption confidence="0.5252688">
Table 4: High precision patterns used for seed fact extraction
along with an example of each. Here, the object (O) and the
attribute (A) corefer and the subject (S) is in close proxim-
ity. In all examples, the resulting fact is (Google, CEO,
Larry Page). Patterns are not attribute specific.
</tableCaption>
<bodyText confidence="0.974790222222222">
entity. For example, in Figure 2, CEO is in our on-
tology and we can use a coreference resolver to in-
fer that CEO and Larry Page refer to the same en-
tity. The use of coreference follows from the sim-
ple observation that objects will often be referred
to by nominals, many of which are our attributes of
interest. Since the sentence matches our sixth ex-
traction rule, ReNoun extracts the triple (Google,
CEO, Larry Page).
</bodyText>
<figure confidence="0.85105425">
Document:
“[Google]1 [CEO]2 [Larry Page]2 started his term in 2011,
when [he]2 succeeded [Eric Schmidt]3. [Schmidt]3 has
since assumed the role of executive chairman of [the
company]1.”
(a)
Coreference clusters:
# Phrases Freebase ID
1 Google, the company /m/045c7b
2 Larry Page, CEO, he /m/0gjpq
3 Eric Schmidt, Schmidt /m/01gqf4
(b)
</figure>
<figureCaption confidence="0.999382">
Figure 2: Coreference clusters: (a) a document annotated
</figureCaption>
<bodyText confidence="0.993821628571429">
with coreference clusters; (b) a table showing each cluster
with the representative phrases in bold and the Freebase ID
to which each cluster maps.
We rely on a coreference resolver in the spirit of
Haghighi and Klein (2009). The resolver clusters
the mentions of entities in a document so the ref-
erences in each cluster are assumed to refer to the
same real-world entity. The resolver also chooses
for each cluster a representative phrase, which is a
proper noun or proper adjective (e.g., Canadian).
Other phrases in the same cluster can be other
proper nouns or adjectives, common nouns like
CEO or pronouns like he in the example. Each
cluster is possibly linked by an entity resolver to
a Freebase entity using a unique Freebase ID. Fig-
ure 2(b) shows the coreference clusters from the
sample document, with representative phrases in
bold, along with the Freebase ID of each clus-
ter. Note that in our example the phrase execu-
tive chairman, which is also in our ontology of
attributes, is not part of any coreference cluster.
Therefore, the fact centered around this attribute
in the example will not be part of the seed extrac-
tions, but could be extracted in the next phase. The
resulting facts use Freebase IDs for the subject and
object (for readability, we will use entity names
in the rest of this work). In summary, our seed
extraction proceeds in two steps. First, we find
sentences with candidate attribute-object pairs that
corefer and in which the attribute is in our ontol-
ogy. Second, we match these sentences against our
hand-crafted rules to generate the extractions. In
Section 7 we show that the precision of our seed
facts is 65% for fat head attributes and 80% for
long tail ones.
</bodyText>
<sectionHeader confidence="0.956024" genericHeader="method">
5 Pattern and candidate fact generation
</sectionHeader>
<bodyText confidence="0.9999414">
In this section we describe how ReNoun uses the
seed facts to learn a much broader set of extrac-
tion patterns. ReNoun uses the learned patterns
to extract many more candidate facts that are then
assigned scores reflecting their quality.
</bodyText>
<subsectionHeader confidence="0.994632">
5.1 Dependency patterns
</subsectionHeader>
<bodyText confidence="0.999946">
We use the seed facts to learn patterns over de-
pendency parses of text sentences. A dependency
parse of a sentence is a directed graph whose ver-
tices correspond to tokens labeled with the word
and the POS tag, and the edges are syntactic rela-
tions between the corresponding tokens (de Marn-
effe et al., 2006). A dependency pattern is a sub-
graph of a dependency parse where some words
have been replaced by variables, but the POS tags
</bodyText>
<page confidence="0.993832">
328
</page>
<bodyText confidence="0.999936625">
have been retained (called delexicalization). A de-
pendency pattern enables us to extract sentences
with the same dependency parse as the sentence
that generated the pattern, modulo the delexical-
ized words. We note that one big benefit of using
dependency patterns is that they generalize well,
as they ignore extra tokens in the sentence that do
not belong to the dependency subgraph of interest.
</bodyText>
<subsectionHeader confidence="0.999339">
5.2 Generating dependency patterns
</subsectionHeader>
<bodyText confidence="0.999021166666667">
The procedure for dependency pattern generation
is shown in Algorithm 1, and Figure 3 shows an
example of its application. The input to the algo-
rithm is the ontology of attributes, the seed facts
(Section 4), and our processed text corpus (Sec-
tion 2).
</bodyText>
<construct confidence="0.7266378125">
Algorithm 1: Dependency pattern generation
input : Set of attributes A, Seed facts I, Corpus D.
P := An empty set of dependency pattern-attribute pairs.
foreach sentence s E D do
foreach triple t = (S, A, O) found in s do
if t E I then
G(s) = dependency parse of s
P&apos; = minimal subgraph of G(s)
containing the head tokens of S, A and O
P = Delexicalize(P&apos;, S, A, O)
P=PU{(P,A)}
return P
Attributes: A ={executive chairman}
Seed fact: I = {(Google, executive chairman, Eric Schmidt)}
Sentence: s =“An executive chairman, like Eric Schmidt of Google, wields influence
over company operations.”
</construct>
<figureCaption confidence="0.994563333333333">
Figure 3: Dependency pattern generation using seed facts,
corresponding to Algorithm 1: (a) shows the input to the pro-
cedure (dependency parse partially shown); (b) P&apos;; (c) P.
</figureCaption>
<bodyText confidence="0.999798821428572">
The procedure iterates over the sentences in the
corpus, looking for matches between a sentence
s and a seed fact f. A sentence s matches f if
s contains (i) the attribute in f, and (ii) phrases in
coreference clusters that map to the same Freebase
IDs as the subject and object of f. When a match
is found, we generate a pattern as follows.
We denote by P0 the minimal subgraph of the
dependency parse of s containing the head tokens
of the subject, attribute and object (Figure 3 (b)).
We delexicalize the three vertices corresponding
to the head tokens of the subject, attribute and ob-
ject by variables indicating their roles. The POS
tag associated with the attribute token is always a
noun. The subject and object are additionally al-
lowed to have pronouns and adjectives associated
with their tokens. All POS tags corresponding to
nouns are lifted to N, in order to match the vari-
ous types of nouns. We denote the resulting de-
pendency pattern by P and add it to our output,
associated with the matched attribute. We note
that in principle, the vertex corresponding to the
head of the attribute does not need to be delexi-
calized. However, we do this to improve the ef-
ficiency of pattern-matching, since we will often
have patterns for different attributes differing only
at the attribute vertex.
It is important to note that because of the man-
ner in which the roles of subject and object were
assigned during seed fact extraction, the patterns
ReNoun generates clearly show which argument
will take the role of the subject, and which will
take the role of the object. This is in contrast
to previous work such as Ollie (Mausam at al.,
2012), where the assignment depends on the order
in which the arguments are expressed in the sen-
tence from which the fact is being extracted. For
example, from the sentence “Opel was described
as GM’s most successful subsidiary.” and the seed
fact (GM, subsidiary, Opel), the pattern that
ReNoun generates will consistently extract facts
like (BMW, subsidiary, Rolls-Royce), and not
the incorrect inverse, regardless of the relative or-
dering of the two entities in the sentence.
At this point we have dependency patterns ca-
pable of generating more extractions for their seed
fact attributes. For efficient matching, we use the
output of Algorithm 1 to generate a map from de-
pendency patterns to their attributes with entries
like that shown in Figure 4(a). This way, a pat-
tern match can be propagated to all its mapped at-
tributes in one shot, as we explain in Section 5.3.
Finally, we discard patterns that do not pass a sup-
port threshold, where support is the number of dis-
tinct seed facts from which a pattern could be gen-
erated.
</bodyText>
<figure confidence="0.973902414634146">
det
nn
chairman/NN executive/NN
An/DET
Google/NNP
prep
prep
like/IN
pobj
of/IN
nn Eric/NNP
pobj Schmidt/NNP
prep pobj prep pobj
chairman/NN like/IN Schmidt/NNP of/IN Google/NNP
prep pobj prep pobj
{A/N} like/IN {O/N} of/IN {S/N}
329
prep pob] prep pob]
{A/N} like/IN {O/N} of/IN {S/N}
has/VBZ
attributes: {ex-wife, boyfriend, ex-partner}
frequency(P) = 574, coherence(P) = 0.429
Example: “Putin has two children with his ex-wife,
Lyudmila.”
(a)
nsubj
dobj
children/NNS
{S/N}
prep pobj appos
with/IN {A/N} {O/N}
attributes: {executive chairman, creative director, ...}
(a)
“An executive chairman, like Steve Chase of AOL, is
responsible for representing the company.”
1
(AOL, executive chairman, Steve Chase)
“A creative director, like will.i.am of 3D Systems, may also
be referred to as chief creative officer.”
1
(3D Systems, creative director, will.i.am)
</figure>
<figureCaption confidence="0.995835">
Figure 4: A dependency pattern and its use in extraction: (a)
the pattern in our running example and the set of attributes to
which it applies; (b) and (c) sentences matching the pattern
and the resulting extractions.
</figureCaption>
<subsectionHeader confidence="0.993333">
5.3 Applying the dependency patterns
</subsectionHeader>
<bodyText confidence="0.999980210526316">
Given the learned patterns, we can now generate
new extractions. Each match of a pattern against
the corpus will indicate the heads of the poten-
tial subject, attribute and object. The noun phrase
headed by the token matching the {A/N} vertex is
checked against the set of attributes to which the
pattern is mapped. If the noun phrase is found
among these attributes, then a triple (S, A, O) is
constructed from the attribute and the Freebase en-
tities to which the tokens corresponding to the S
and O nodes in the pattern are resolved. This triple
is then emitted as an extraction along with the pat-
tern that generated it. Figure 4(b) and (c) show two
sentences that match the dependency pattern in our
running example and the resulting extractions.
Finally, we aggregate our extractions by their
generated facts. For each fact f, we save the dis-
tinct dependency patterns that yielded f and the
total number of times it was found in the corpus.
</bodyText>
<sectionHeader confidence="0.953455" genericHeader="method">
6 Scoring extracted facts
</sectionHeader>
<bodyText confidence="0.999764090909091">
In this section we describe how we score the can-
didate facts extracted by applying the dependency
patterns in Section 5. Recall that a fact may be
obtained from multiple extractions, and assigning
scores to each fact (rather than each extraction) en-
ables us to consider all extractions of a fact in ag-
gregate.
We score facts based on the patterns which ex-
tract them. Our scheme balances two character-
istics of a pattern: its frequency and coherence.
Pattern frequency is defined as the number of ex-
</bodyText>
<figure confidence="0.85696975">
attributes: {ex-wife, general manager, subsidiary,... }
frequency(P) = 52349038, coherence(P) = 0.093
Example: “Chelsea F.C. general manager Jos´e Mourinho...”
(b)
</figure>
<figureCaption confidence="0.999607">
Figure 5: (a) a coherent pattern extracting facts for semanti-
cally similar attributes and (b) an incoherent pattern.
</figureCaption>
<bodyText confidence="0.999984542857143">
tractions produced by the pattern. Our first ob-
servation is that patterns with a large number of
extractions are always able to produce correct ex-
tractions (in addition to incorrect ones). We also
observe that generic patterns produce more er-
roneous facts compared to more targeted ones.
To capture this, we introduce pattern coherence,
which reflects how targeted a pattern is based on
the attributes to which it applies. For example,
we observed that if an extraction pattern yields
facts for the coherent set of attributes ex-wife,
boyfriend, and ex-partner, then its output is
consistently good. On the other hand, a pattern
that yields facts for a less coherent set of attributes
ex-wife, general manager, and subsidiary is
more likely to produce noisy extractions. Generic,
more incoherent patterns are more sensitive to
noise in the linguistic annotation of a document.
Figure 5 shows an example pattern for each case,
along with its frequency and coherence.
We capture coherence of attributes using word-
vector representations of attributes that are cre-
ated over large text corpora (Mikolov et al., 2013).
The word-vector representation v(w) for a word
w (multi-word attributes can be preprocessed into
single words) is computed in two steps. First, the
algorithm counts the number of occurrences of a
word w1 that occurs within the text window cen-
tered at w (typically a window of size 10), pro-
ducing an intermediate vector that potentially has
a non-zero value for every word in the corpus.
The intermediate vector is then mapped to a much
smaller dimension (typically less than 1000) to
produce v(w). As shown in (Mikolov et al., 2013),
two words w1 and w2 for which the cosine dis-
</bodyText>
<figure confidence="0.7735675">
{O/N} nn {A/N} {S/N}
nn
</figure>
<page confidence="0.986095">
330
</page>
<bodyText confidence="0.999392">
tance between v(w1) and v(w2) is small tend to
be semantically similar. Therefore, a pattern is co-
herent if it applies to attributes deemed similar as
per their word vectors.
Given an extraction pattern P that extracts facts
for a set of attributes A, we define the coherence
of P to be the average pairwise coherence of all at-
tributes in A, where the pairwise coherence of two
attributes a1 and a2 is the cosine distance between
v(a1) and v(a2).
Finally, we compute the score of a fact f by
summing the product of frequency and coherence
for each pattern of f as shown in Equation 1.
</bodyText>
<equation confidence="0.9985055">
S(f) = � frequency(P) × coherence(P) (1)
P∈Pat(f)
</equation>
<sectionHeader confidence="0.997153" genericHeader="method">
7 Experimental Evaluation
</sectionHeader>
<bodyText confidence="0.999964545454545">
We describe a set of experiments that validate the
contributions of ReNoun. In Sections 7.2 and 7.3
we validate our noun-centric approach: we show
that extractions based on verb phrases cannot yield
the results of ReNoun and that NomBank, the re-
source used by state of the art in semantic role-
labeling for nouns, will not suffice either. In Sec-
tions 7.4-7.6 we evaluate the different components
of ReNoun and its overall quality, and in Sec-
tion 7.7 we discuss the cases in which ReNoun was
unable to extract any facts.
</bodyText>
<subsectionHeader confidence="0.998015">
7.1 Setting
</subsectionHeader>
<bodyText confidence="0.999943625">
We used the fat head (FH) and long tail (LT) at-
tributes and annotated news corpus described in
Section 2. When evaluating facts, we used major-
ity voting among three human judges, unless oth-
erwise noted. The judges were instructed to con-
sider facts with inverted subjects and objects as in-
correct. For example, while (GM, subsidiary,
Opel) is correct, its inverse is incorrect.
</bodyText>
<subsectionHeader confidence="0.99782">
7.2 Verb phrases are not enough
</subsectionHeader>
<bodyText confidence="0.995720833333333">
State-of-art open information extraction systems
like Ollie (Mausam at al., 2012) assume that a re-
lation worth extracting is expressed somewhere in
verb form. We show this is not the case and jus-
tify our noun-centric approach. In this experiment
we compare ReNoun to a custom implementation
of Ollie that uses the same corpus as ReNoun and
supports multi-word attributes. While Ollie does
try to find relations expressed as nouns, its seed
facts are relations expressed as verbs.
We randomly sampled each of FH and LT for
100 attributes for which ReNoun extracts facts and
</bodyText>
<table confidence="0.997672285714286">
ReNoun Ollie
flagship company -
railway minister -
legal affairs correspondent -
spokesperson be spokesperson of
president-elect be president elect of
co-founder be co-founder of
</table>
<tableCaption confidence="0.9892335">
Table 5: ReNoun attributes with and without a corresponding
Ollie relation.
</tableCaption>
<bodyText confidence="0.999919395348837">
asked a judge to find potentially equivalent Ol-
lie relations. Note that we did not require the
judge to find exactly the same triple (thereby bias-
ing the experiment towards finding more attribute
matches). Furthermore, the judge was instructed
that a verb phrase like advised by should be con-
sidered a match to the ReNoun attribute advisor.
However, looking at the data, most facts involving
the relation advised are not synonymous with the
advisor relation as we think of it (e.g., “Obama
advised Merkel on saving the Euro”). This obser-
vation suggests that there is an even more subtle
difference between the meaning of verb expres-
sions and noun-based expressions in text. This ex-
periment, therefore, gives an upper bound on the
number of ReNoun attributes that Ollie can cover.
For FH, not surprisingly, we could find matches
for 99 of the 100 attributes. However, for LT, only
31 of the 100 attributes could be found, even under
our permissive setting. Most attributes that could
not be matched were multi-word noun phrases.
While in principle, one could use the Ollie patterns
that apply to the head of a multi-word attribute, we
found that we generate more interesting patterns
for specific multi-word attributes. Table 5 shows
examples of attributes with and without verb map-
pings in Ollie.
We also compare in the other direction and esti-
mate the portion of Ollie relations centered around
nouns for which ReNoun fails to extract facts. For
this experiment, we randomly sampled 100 Ollie
relations that contained common nouns whose ob-
jects are concrete values, and looked for equivalent
attributes in ReNoun extractions. ReNoun extracts
facts for 48 of the Ollie relations. Among the 52
relations with no facts, 25 are not in Biperpedia
(which means that ReNoun cannot extract facts for
them no matter what). For the other 27 relations,
ReNoun did not extract facts for the following
reasons. First, some relations expressed actions,
which cannot be expressed using nouns only, and
are not considered attributes describing the subject
entity (e.g., citation of in “Obama’s citation
</bodyText>
<page confidence="0.997134">
331
</page>
<bodyText confidence="0.999888307692308">
of the Bible”). Second, some relations have the
object (a common noun) embedded within them
(e.g., have microphone in) and do not have cor-
responding attributes that can be expressed us-
ing nouns only. The remaining relations either
have meaningless extractions or use common noun
phrases as arguments. ReNoun only uses proper
nouns (i.e., entities) for arguments because facts
with common noun arguments are rarely interest-
ing without more context. We note that the major-
ity of the 25 Ollie relations without corresponding
Biperpedia attributes also fall into one of the three
categories above.
</bodyText>
<subsectionHeader confidence="0.99774">
7.3 Comparison against NomBank
</subsectionHeader>
<bodyText confidence="0.999728410256411">
In principle, the task of extracting noun-mediated
relations can be compared to that of semantic role
labeling (SRL) for nouns. The task in SRL is to
identify a relation, expressed either through a verb
or a noun, map it to a semantic frame, and map
the arguments of the relation to the various roles
within the frame. State of the art SRL systems,
such as that of Johansson and Nugues (2008), are
trained on NomBank (Meyers et al., 2004) for
handling nominal relations, which also means that
they are limited by the knowledge it has. We asked
a judge to manually search NomBank for 100 at-
tributes randomly drawn from each of FH and LT
for which ReNoun extracts facts. For multi-word
attributes, we declare a match if its head word was
found. We were able to find 80 matches for the
FH attributes and 42 for LT ones. For example,
we could not find entries for the noun attributes
coach or linebacker (of a football team). This
result is easy to explain by the fact that NomBank
only has 4700 attributes.
In addition, for some nouns, the associated
frames do not allow for the extraction of triples.
For example, all frames for the noun member spec-
ify one argument only, so in the sentence “John
became a member of ACM”, the output relation is
(ACM, member) instead of the desired triple (ACM,
member, John).
As we did with Ollie, we also looked at nouns
from NomBank for which ReNoun does not ex-
tract facts. Out of a random sample of 100 Nom-
Bank nouns, ReNoun did not extract facts for
29 nouns (four of which are not in Biperpedia).
The majority of the missed nouns cannot be used
by ReNoun because they either take single ar-
guments (instead of two) or take either preposi-
tional phrases or common nouns (instead of proper
nouns correponding to entities) as one their argu-
ments.
</bodyText>
<subsectionHeader confidence="0.999395">
7.4 Quality of seed facts
</subsectionHeader>
<bodyText confidence="0.999388512195122">
In Section 4, we described our method for ex-
tracting seed facts for our attributes. Applying
the method to our corpus resulted in 139M extrac-
tions, which boiled down to about 680K unique
facts covering 11319 attributes. We sampled 100
random facts from each of FH and LT, and ob-
tained 65% precision for FH seed facts and 80%
precision for LT ones. This leads us to two obser-
vations.
First, the precision of seed facts for LT attributes
is high, which makes them suitable for use as
a building block in a distant supervision scheme
to learn dependency parse patterns. We are pri-
marily interested in LT attributes, which earlier
approaches cannot deal with satisfactorily as we
demonstrated above.
Second, LT attributes have higher precision than
FH attributes. One reason is that multi-word at-
tributes (which tend to be in LT) are sometimes
incorrectly chunked, and only their head words are
recognized as attributes (which are more likely to
be in FH). For example, in the phrase “America’s
German coach, Klinsmann”, the correct attribute
is German coach (LT), but bad chunking may pro-
duce the attribute coach (FH) with Germany as the
subject. Another reason is that FH attributes are
likely to occur in speculative contexts where the
presence of the attribute is not always an asser-
tion of a fact. (While both FH and LT attributes
can be subject to speculative contexts, we observe
this more for FH than LT in our data.) For ex-
ample, before a person is a railway minister
of a country, there is little mention of her along
with the attribute. However, before a person is
elected president, there is more media about her
candidacy. Speculative contexts, combined with
incorrect linguistic analysis of sentences, can re-
sult in incorrect seed facts (e.g., from “Republi-
can favorite for US president, Mitt Romney, vis-
ited Ohio”, we extract the incorrect seed fact (US,
president, Mitt Romney)).
</bodyText>
<subsectionHeader confidence="0.99446">
7.5 Candidate generation
</subsectionHeader>
<bodyText confidence="0.999945">
Using the seed facts, we ran our candidate gen-
eration algorithm (Section 5). In the first step of
the algorithm we produced a total of about 2 mil-
lion unique dependency patterns. A third of these
</bodyText>
<page confidence="0.995697">
332
</page>
<bodyText confidence="0.9997412">
patterns could extract values for exactly one at-
tribute. Manual inspection of these long tail pat-
terns showed that they were either noise, or do not
generalize. We kept patterns supported by at least
10 seed facts, yielding more than 30K patterns.
We then applied the patterns to the corpus. The
result was over 460M extractions, aggregated into
about 40M unique facts. Of these, about 22M facts
were for LT attributes, and 18M for FH. We now
evaluate the quality of these facts.
</bodyText>
<subsectionHeader confidence="0.99924">
7.6 Scoring extracted facts
</subsectionHeader>
<bodyText confidence="0.998852428571429">
In Section 6, we presented a scheme for scoring
facts using pattern frequency and coherence. To
show its effectiveness we (i) compare it against
other scoring schemes, and (ii) show the quality
of the top-k facts produced using this scheme, for
various k. To compute coherence, we generated
attribute word vectors using the word2vec2 tool
trained on a dump of Wikipedia.
First, we compare the quality of our scoring
scheme (FREQ COH) with three other schemes as
shown in Table 6. The scheme FREQ is identical
to FREQ COH except that all coherences are set
to 1. PATTERN counts the number of distinct pat-
terns that extract the fact while PATTERN COH
sums the pattern coherences. We generated a ran-
dom sample of 252 FH and LT nouns with no en-
tity disambiguation errors by the underlying nat-
ural language processing pipeline. The justifi-
cation is that none of the schemes we consider
here capture such errors. Accounting for such
errors requires elaborate signals from the entity
linking system, which we leave for future work.
For each scoring scheme, we computed the Spear-
man’s rank correlation coefficient ρ between the
scores and manual judgments (by three judges). A
larger ρ indicates more correlation, and comput-
ing ρ was statistically significant (p-value&lt;0.01)
for all schemes.
</bodyText>
<table confidence="0.988684">
Scheme Spearman’s ρ
FREQ 0.486
FREQ COH 0.495
PATTERN 0.265
PATTERN COH 0.257
</table>
<tableCaption confidence="0.998351">
Table 6: Scoring schemes
</tableCaption>
<bodyText confidence="0.99429225">
FREQ and FREQ COH dominate, which shows
that considering the frequency with which patterns
perform extraction helps. The two schemes, how-
ever, are very close to each other. We observed
</bodyText>
<footnote confidence="0.9561">
2https://code.google.com/p/word2vec/
</footnote>
<table confidence="0.999394875">
FH LT
k Precision #Attr Precision #Attr
102 1.00 8 1.00 50
103 0.98 36 1.00 294
104 0.96 78 0.98 1548
105 0.82 106 0.96 5093
106 0.74 124 0.70 7821
All 0.18 141 0.26 11178
</table>
<tableCaption confidence="0.87752">
Table 7: Precision of random samples of the top-k scoring
facts, along with the attribute yield.
</tableCaption>
<bodyText confidence="0.9999074">
that adding coherence helps when two facts have
similar frequencies, but this effect is tempered
when considering a large number of facts.
Second, we evaluate the scoring of facts gener-
ated by ReNoun by the precision of top-k results
for several values of k. In this evaluation, facts
with disambiguation errors are counted as wrong.
The particular context in which ReNoun is applied
will determine where in the ordering to set the
threshold of facts to consider. We compute pre-
cision based on a sample of 50 randomly chosen
facts for each k. Table 7 shows the precision re-
sults, along with the number of distinct attributes
(#Attr) for which values are extracted at each k.
As we can see, ReNoun is capable of generat-
ing a large number of high quality facts (≥70%
precise at 1M), which our scoring method man-
ages to successfully surface to the top. The ma-
jor sources of error were (i) incorrect dependency
parsing mainly due to errors in boilerplate text re-
moval from news documents, (ii) incorrect coref-
erence resolution of pronouns, (iii) incorrect entity
resolution against Freebase, and (iv) cases where
a triple is not sufficient (e.g., ambassador where
both arguments are countries.)
</bodyText>
<subsectionHeader confidence="0.979114">
7.7 Missed extractions
</subsectionHeader>
<bodyText confidence="0.984831166666667">
We analyze why ReNoun does not extract facts for
certain attributes. For FH, we investigate all the 77
attributes for which ReNoun is missing facts. For
LT, there are about 50K attributes without corre-
sponding facts, and we use a random sample of
100 of those attributes.
</bodyText>
<table confidence="0.999263375">
Cause FH LT Example
Vague 23 37 culture
Numeric 4 26 rainfall
Object not KB entity 11 6 email
Plural 30 15 member firms
Bad attribute/misspell 3 4 newsies
Value expected 6 12 nationality
Total 77 100
</table>
<tableCaption confidence="0.999351">
Table 8: Analysis of attributes with no extractions.
</tableCaption>
<page confidence="0.998776">
333
</page>
<bodyText confidence="0.999847764705882">
Table 8 shows the categorization of the missed
attributes. The first three categories are cases that
are currently outside the scope of ReNoun: vague
attributes whose values are long narratives, nu-
meric attributes, and typed attributes (e.g., email)
whose values are not modeled as Freebase enti-
ties. The next two categories are due to limitations
of the ontology, e.g., plural forms of attributes are
not always synonymized with singular forms and
some attributes are bad. Finally, the “Value ex-
pected” category contains the attributes for which
ReNoun should have extracted values. One reason
for missing values is that the corpus itself does not
contain values of all attributes. Another reason is
that some attributes are not verbalized in text. For
example, attributes like nationality are usually
not explicitly stated when expressed in text.
</bodyText>
<sectionHeader confidence="0.999972" genericHeader="related work">
8 Related Work
</sectionHeader>
<bodyText confidence="0.999805923076923">
Open information extraction (OIE) was introduced
by Banko et al. (2007). For a pair of noun phrases,
their system, TEXTRUNNER, looks for the at-
tribute (or more generally the relation) in the text
between them and uses a classifier to judge the
trustworthiness of an extraction. WOEparse (Wu
and Weld, 2010) extends this by using dependency
parsing to connect the subject and object. Both
systems assume that the attribute is between its
two arguments, an assumption that ReNoun drops
since it is not suitable for nominal attributes.
Closest to our work are ReVerb (Fader et al.,
2011) and Ollie (Mausam at al., 2012). ReVerb
uses POS tag patterns to locate verb relations and
then looks at noun phrases to the left and right for
arguments. Ollie uses the ReVerb extractions as
its seeds to train patterns that can further extract
triples. While Ollie’s patterns themselves are not
limited to verb relations (they also support noun
relations), the ReVerb seeds are limited to verbs,
which makes Ollie’s coverage on noun relations
also limited. In comparison, ReNoun take a noun-
centric approach and extracts many facts that do
not exist in Ollie.clo
ClausIE (Del Corro and Gemulla, 2013) is an
OIE framework that exploits knowledge about the
grammar of the English language to find clauses
in a sentence using its dependency parse. The
clauses are subsequently used to generate extrac-
tions at multiple granularities, possibly with more
than triples. While ClausIE comes with a prede-
fined set of rules on how to extract facts from a
dependency parse, ReNoun learns such rules from
its seed facts.
Finally, Nakashole et al. (2014) and Mintz et al.
(2009) find additional facts for attributes that al-
ready have facts in a knowledge base. In contrast,
ReNoun is an OIE framework whose goal is to find
facts for attributes without existing facts.
</bodyText>
<sectionHeader confidence="0.998682" genericHeader="conclusions">
9 Conclusions
</sectionHeader>
<bodyText confidence="0.999975434782609">
We described ReNoun, an open information ex-
traction system for nominal attributes that focuses
on the long tail. The key to our approach is to start
from a large ontology of nominal attributes and ap-
ply noun-specific manual patterns on a large pre-
processed corpus (via standard NLP components)
to extract precise seed facts. We then learn a set of
dependency patterns, which are used to generate a
much larger set of candidate facts. We proposed a
scoring function for filtering candidate facts based
on pattern frequency and coherence. We demon-
strated that the majority of long tail attributes in
ReNoun do not have corresponding verbs in Ol-
lie. Finally, our experiments show that our scor-
ing function is effective in filtering candidate facts
(top-1M facts are ≥70% precise).
In the future, we plan to extend ReNoun to ex-
tract triples whose components are not limited to
Freebase IDs. As an example, extending ReNoun
to handle numerical or typed attributes would in-
volve extending our extraction pattern learning
to accommodate units (e.g., kilograms) and other
special data formats (e.g., addresses).
</bodyText>
<sectionHeader confidence="0.999196" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99997">
We would like to thank Luna Dong, Anjuli Kan-
nan, Tara McIntosh, and Fei Wu for many discus-
sions about the paper.
</bodyText>
<page confidence="0.998538">
334
</page>
<sectionHeader confidence="0.998338" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999748777777778">
S¨oren Auer, Christian Bizer, Georgi Kobilarov, Jens
Lehmann, Richard Cyganiak, and Zachary G. Ives
2007. DBpedia: A Nucleus for a Web of Open Data.
In Proceedings of the International Semantic Web
Conference.
Michele Banko, Michael J. Cafarella, Stephen Soder-
land, Matthew Broadhead, and Oren Etzioni 2007.
Open Information Extraction from the Web. In Pro-
ceedings of the International Joint Conference on
Artificial Intelligence.
Kurt D. Bollacker, Colin Evans, Praveen Paritosh, Tim
Sturge, and Jamie Taylor. 2008. Freebase: a Col-
laboratively Created Graph Database for Structuring
Human Knowledge. In Proceedings of the Interna-
tional Conference on Management of Data.
Michael J. Cafarella, Alon Y. Halevy, Daisy Zhe Wang,
Eugene Wu, and Yang Zhang 2008. WebTables:
Exploring the Power of Tables on the Web. In Pro-
ceedings of the VLDB Endowment.
Luciano Del Corro and Rainer Gemulla. 2013.
ClausIE: Clause-based Open Information Extrac-
tion. In Proceedings of the International World Wide
Web Conference.
Marie-Catherine de Marneffe, Bill MacCartney, and
Christopher D. Manning 2006. Generating Typed
Dependency Parses from Phrase Structure Parses.
In Proceedings of Language Resources and Evalu-
ation.
Anthony Fader, Stephen Soderland, and Oren Etzioni.
2011. Identifying Relations for Open Information
Extraction. In Proceedings of Empirical Methods in
Natural Language Processing.
Rahul Gupta, Alon Halevy, Xuezhi Wang, Steven
Whang, and Fei Wu. 2014. Biperpedia: An On-
tology for Search Applications. In Proceedings of
the VLDB Endowment.
Aria Haghighi and Dan Klein 2009. Simple Corefer-
ence Resolution with Rich Syntactic and Semantic
Features. In Proceedings of Empirical Methods in
Natural Language Processing.
Richard Johansson and Pierre Nugues 2008. The Ef-
fect of Syntactic Representation on Semantic Role
Labeling. In Proceedings of the International Con-
ference on Computational Linguistics.
Taesung Lee, Zhongyuan Wang, Haixun Wang, and
Seung-won Hwang 2013. Attribute Extraction and
Scoring: A Probabilistic Approach. In Proceedings
of the International Conference on Data Engineer-
ing .
Mausam, Michael Schmitz, Stephen Soderland, Robert
Bart, and Oren Etzioni. 2012. Open Language
Learning for Information Extraction. In Proceed-
ings of Empirical Methods in Natural Language
Processing.
Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey
Dean. 2013. Efficient Estimation of Word Repre-
sentations in Vector Space. arXiv.
Mike Mintz, Steven Bills, Rion Snow, and Daniel Ju-
rafsky. 2009. Distant Supervision for Relation Ex-
traction Without Labeled Data. In Proceedings of
the Association for Computational Linguistics.
Adam Meyers, Ruth Reeves, Catherine Macleod,
Rachel Szekely, Veronika Zielinska, Brian Young,
and Ralph Grishman. 2004. Annotating Noun Ar-
gument Structure for NomBank. In Proceedings of
Language Resources and Evaluation.
Nitin Madnani and Bonnie J. Dorr. 2010. Generat-
ing Phrasal and Sentential Paraphrases: A Survey of
Data-Driven Methods. In Computational Linguis-
tics 36(3).
Ndapandula Nakashole, Martin Theobald, and Gerhard
Weikum. 2011. Scalable Knowledge Harvesting
with High Precision and High Recall. In Proceed-
ings of Web Search and Data Mining.
Marius Pasca. 2014. Acquisition of Open-domain
Classes via Intersective Semantics. In Proceedings
of the International World Wide Web Conference.
Marius Pasca and Benjamin Van Durme. 2007. What
You Seek Is What You Get: Extraction of Class At-
tributes from Query Logs. In Proceedings of the
International Joint Conference on Artificial Intelli-
gence .
Uma Sawant and Soumen Chakrabarti. 2013. Learn-
ing Joint Query Interpretation and Response Rank-
ing. In Proceedings of the International World Wide
Web Conference.
Amit Singhal. 2012 Introducing the
Knowledge Graph: things, not strings
http://googleblog.blogspot.com/2012/
05/introducing-knowledge-graph-
things-not.html
Fei Wu and Daniel S. Weld. 2010. Open Information
Extraction Using Wikipedia. In Proceedings of the
the Association for Computational Linguistics.
Mohamed Yahya, Klaus Berberich, Shady Elbas-
suoni, Maya Ramanath, Volker Tresp, and Gerhard
Weikum. 2012. Natural Language Questions for the
Web of Data. In Proceedings of Empirical Methods
in Natural Language Processing.
</reference>
<page confidence="0.999147">
335
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.738597">
<title confidence="0.999364">ReNoun: Fact Extraction for Nominal Attributes</title>
<author confidence="0.9334245">Euijong Whang</author>
<author confidence="0.9334245">Rahul Gupta</author>
<author confidence="0.9334245">Alon Halevy Max Planck Institute for Informatics Google Research</author>
<abstract confidence="0.994816551724138">Search engines are increasingly relying on large knowledge bases of facts to provide direct answers to users’ queries. However, the construction of these knowledge bases is largely manual and does not scale to the long and heavy tail of facts. Open information extraction tries to address this challenge, but typically assumes that facts are expressed with verb phrases, and therefore has had difficulty extracting facts for noun-based relations. We describe ReNoun, an open information extraction system that complements previous efforts by focusing on nominal attributes and on the long tail. ReNoun’s approach is based on leveraging a large ontology of noun attributes mined from a text corpus and from user queries. ReNoun creates a seed set of training data by using specialized patterns and requiring that the facts mention an attribute in the ontology. ReNoun then generalizes from this seed set to produce a much larger set of extractions that are then scored. We describe experiments that show that we extract facts with high precision and for attributes that cannot be extracted with verb-based techniques.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S¨oren Auer</author>
<author>Christian Bizer</author>
<author>Georgi Kobilarov</author>
<author>Jens Lehmann</author>
<author>Richard Cyganiak</author>
<author>Zachary G Ives</author>
</authors>
<title>DBpedia: A Nucleus for a Web of Open Data.</title>
<date>2007</date>
<booktitle>In Proceedings of the International Semantic Web Conference.</booktitle>
<contexts>
<context position="8482" citStr="Auer et al., 2007" startWordPosition="1379" endWordPosition="1382"> can populate the noun attribute advisor with the same facts. In Section 7.2 we demonstrate that this approach is limited for several reasons. First, attributes in knowledge bases are typically expressed as noun phrases. Table 3 shows that 1The occurrences were weighted by the number of semantic classes they occur with in the ontology because many classes overlap. 326 Knowledge Base %Nouns %Verbs Freebase 97 3 DBpedia 96 4 Table 3: Percentage of attributes expressed as nouns phrases among the 100 attributes with the most facts. the vast majority of the attributes in both Freebase and DBpedia (Auer et al., 2007) are expressed as nouns even for the fat head (and even more so for the long tail). Hence, if we extract the verb form of attributes we would need to translate them into noun form, which would require us to solve the paraphrasing problem and introduce more sources of error (Madnani and Dorr, 2010). Second, as we dig deeper into the long tail, attributes tend to be expressed in text more in noun form rather than verb form. One of the reasons is that the attribute names tend to get longer and therefore unnatural to express as verbs (e.g. chief privacy officer, automotive division). Finally, ther</context>
</contexts>
<marker>Auer, Bizer, Kobilarov, Lehmann, Cyganiak, Ives, 2007</marker>
<rawString>S¨oren Auer, Christian Bizer, Georgi Kobilarov, Jens Lehmann, Richard Cyganiak, and Zachary G. Ives 2007. DBpedia: A Nucleus for a Web of Open Data. In Proceedings of the International Semantic Web Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michele Banko</author>
<author>Michael J Cafarella</author>
<author>Stephen Soderland</author>
<author>Matthew Broadhead</author>
<author>Oren Etzioni</author>
</authors>
<title>Open Information Extraction from the Web.</title>
<date>2007</date>
<booktitle>In Proceedings of the International Joint Conference on Artificial Intelligence.</booktitle>
<contexts>
<context position="39961" citStr="Banko et al. (2007)" startWordPosition="6714" endWordPosition="6717">tegories are due to limitations of the ontology, e.g., plural forms of attributes are not always synonymized with singular forms and some attributes are bad. Finally, the “Value expected” category contains the attributes for which ReNoun should have extracted values. One reason for missing values is that the corpus itself does not contain values of all attributes. Another reason is that some attributes are not verbalized in text. For example, attributes like nationality are usually not explicitly stated when expressed in text. 8 Related Work Open information extraction (OIE) was introduced by Banko et al. (2007). For a pair of noun phrases, their system, TEXTRUNNER, looks for the attribute (or more generally the relation) in the text between them and uses a classifier to judge the trustworthiness of an extraction. WOEparse (Wu and Weld, 2010) extends this by using dependency parsing to connect the subject and object. Both systems assume that the attribute is between its two arguments, an assumption that ReNoun drops since it is not suitable for nominal attributes. Closest to our work are ReVerb (Fader et al., 2011) and Ollie (Mausam at al., 2012). ReVerb uses POS tag patterns to locate verb relations</context>
</contexts>
<marker>Banko, Cafarella, Soderland, Broadhead, Etzioni, 2007</marker>
<rawString>Michele Banko, Michael J. Cafarella, Stephen Soderland, Matthew Broadhead, and Oren Etzioni 2007. Open Information Extraction from the Web. In Proceedings of the International Joint Conference on Artificial Intelligence.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kurt D Bollacker</author>
<author>Colin Evans</author>
<author>Praveen Paritosh</author>
<author>Tim Sturge</author>
<author>Jamie Taylor</author>
</authors>
<title>Freebase: a Collaboratively Created Graph Database for Structuring Human Knowledge.</title>
<date>2008</date>
<booktitle>In Proceedings of the International Conference on Management of Data.</booktitle>
<contexts>
<context position="5936" citStr="Bollacker et al., 2008" startWordPosition="950" endWordPosition="953">extract triples of the form (S,A,O), where S is subject, A is the attribute, and O is the object. In our setting, the attribute is always a noun phrase. We refer to the subject and object as the arguments of the attribute. ReNoun takes as input a set of attributes, which can be collected using the methods described in Gupta el al. (2014), Lee et al. (2012), and Pasca and van Durme (2007). In this work, we use Biperpedia (Gupta et al., 2014), which is an ontology of nominal attributes automatically extracted from Web text and user queries. For every attribute, Biperpedia supplies the Freebase (Bollacker et al., 2008) domain type (e.g., whether the attribute applies to people, organizations or hotels). Since the attributes themselves are the result of an extraction algorithm, they may include false positives (i.e., attributes that do not make sense). The focus of ReNoun is on attributes whose values are concrete objects (e.g., wife, protege, chief-economist). Other classes of attributes that we do not consider in this work are (1) numeric (e.g., population, GDP) that are better extracted from Web tables (Cafarella et al., 2008), and (2) vague (e.g., culture, economy) whose value is a narrative that would n</context>
</contexts>
<marker>Bollacker, Evans, Paritosh, Sturge, Taylor, 2008</marker>
<rawString>Kurt D. Bollacker, Colin Evans, Praveen Paritosh, Tim Sturge, and Jamie Taylor. 2008. Freebase: a Collaboratively Created Graph Database for Structuring Human Knowledge. In Proceedings of the International Conference on Management of Data.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael J Cafarella</author>
<author>Alon Y Halevy</author>
<author>Daisy Zhe Wang</author>
<author>Eugene Wu</author>
<author>Yang Zhang</author>
</authors>
<title>WebTables: Exploring the Power of Tables on the Web.</title>
<date>2008</date>
<booktitle>In Proceedings of the VLDB Endowment.</booktitle>
<contexts>
<context position="6456" citStr="Cafarella et al., 2008" startWordPosition="1034" endWordPosition="1037">b text and user queries. For every attribute, Biperpedia supplies the Freebase (Bollacker et al., 2008) domain type (e.g., whether the attribute applies to people, organizations or hotels). Since the attributes themselves are the result of an extraction algorithm, they may include false positives (i.e., attributes that do not make sense). The focus of ReNoun is on attributes whose values are concrete objects (e.g., wife, protege, chief-economist). Other classes of attributes that we do not consider in this work are (1) numeric (e.g., population, GDP) that are better extracted from Web tables (Cafarella et al., 2008), and (2) vague (e.g., culture, economy) whose value is a narrative that would not fit the current mode of query answering on search engines. We make the distinction between the fat head and long tail of attributes. To define these two sets, we ordered the attributes in decreasing order of the number of occurrences in the corpus 1. We defined the fat head to be the attributes until the point N in the ordering such that the sum of the total number of occurrences of attributes before N equaled the number of total occurrences of the attributes after N. In our news corpus, the fat head included 21</context>
</contexts>
<marker>Cafarella, Halevy, Wang, Wu, Zhang, 2008</marker>
<rawString>Michael J. Cafarella, Alon Y. Halevy, Daisy Zhe Wang, Eugene Wu, and Yang Zhang 2008. WebTables: Exploring the Power of Tables on the Web. In Proceedings of the VLDB Endowment.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Luciano Del Corro</author>
<author>Rainer Gemulla</author>
</authors>
<title>ClausIE: Clause-based Open Information Extraction.</title>
<date>2013</date>
<booktitle>In Proceedings of the International World Wide Web Conference.</booktitle>
<contexts>
<context position="41075" citStr="Corro and Gemulla, 2013" startWordPosition="6899" endWordPosition="6902">rb (Fader et al., 2011) and Ollie (Mausam at al., 2012). ReVerb uses POS tag patterns to locate verb relations and then looks at noun phrases to the left and right for arguments. Ollie uses the ReVerb extractions as its seeds to train patterns that can further extract triples. While Ollie’s patterns themselves are not limited to verb relations (they also support noun relations), the ReVerb seeds are limited to verbs, which makes Ollie’s coverage on noun relations also limited. In comparison, ReNoun take a nouncentric approach and extracts many facts that do not exist in Ollie.clo ClausIE (Del Corro and Gemulla, 2013) is an OIE framework that exploits knowledge about the grammar of the English language to find clauses in a sentence using its dependency parse. The clauses are subsequently used to generate extractions at multiple granularities, possibly with more than triples. While ClausIE comes with a predefined set of rules on how to extract facts from a dependency parse, ReNoun learns such rules from its seed facts. Finally, Nakashole et al. (2014) and Mintz et al. (2009) find additional facts for attributes that already have facts in a knowledge base. In contrast, ReNoun is an OIE framework whose goal i</context>
</contexts>
<marker>Corro, Gemulla, 2013</marker>
<rawString>Luciano Del Corro and Rainer Gemulla. 2013. ClausIE: Clause-based Open Information Extraction. In Proceedings of the International World Wide Web Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marie-Catherine de Marneffe</author>
<author>Bill MacCartney</author>
<author>Christopher D Manning</author>
</authors>
<title>Generating Typed Dependency Parses from Phrase Structure Parses.</title>
<date>2006</date>
<booktitle>In Proceedings of Language Resources and Evaluation.</booktitle>
<marker>de Marneffe, MacCartney, Manning, 2006</marker>
<rawString>Marie-Catherine de Marneffe, Bill MacCartney, and Christopher D. Manning 2006. Generating Typed Dependency Parses from Phrase Structure Parses. In Proceedings of Language Resources and Evaluation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony Fader</author>
<author>Stephen Soderland</author>
<author>Oren Etzioni</author>
</authors>
<title>Identifying Relations for Open Information Extraction.</title>
<date>2011</date>
<booktitle>In Proceedings of Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="40474" citStr="Fader et al., 2011" startWordPosition="6800" endWordPosition="6803"> expressed in text. 8 Related Work Open information extraction (OIE) was introduced by Banko et al. (2007). For a pair of noun phrases, their system, TEXTRUNNER, looks for the attribute (or more generally the relation) in the text between them and uses a classifier to judge the trustworthiness of an extraction. WOEparse (Wu and Weld, 2010) extends this by using dependency parsing to connect the subject and object. Both systems assume that the attribute is between its two arguments, an assumption that ReNoun drops since it is not suitable for nominal attributes. Closest to our work are ReVerb (Fader et al., 2011) and Ollie (Mausam at al., 2012). ReVerb uses POS tag patterns to locate verb relations and then looks at noun phrases to the left and right for arguments. Ollie uses the ReVerb extractions as its seeds to train patterns that can further extract triples. While Ollie’s patterns themselves are not limited to verb relations (they also support noun relations), the ReVerb seeds are limited to verbs, which makes Ollie’s coverage on noun relations also limited. In comparison, ReNoun take a nouncentric approach and extracts many facts that do not exist in Ollie.clo ClausIE (Del Corro and Gemulla, 2013</context>
</contexts>
<marker>Fader, Soderland, Etzioni, 2011</marker>
<rawString>Anthony Fader, Stephen Soderland, and Oren Etzioni. 2011. Identifying Relations for Open Information Extraction. In Proceedings of Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rahul Gupta</author>
<author>Alon Halevy</author>
<author>Xuezhi Wang</author>
<author>Steven Whang</author>
<author>Fei Wu</author>
</authors>
<title>Biperpedia: An Ontology for Search Applications.</title>
<date>2014</date>
<booktitle>In Proceedings of the VLDB Endowment.</booktitle>
<contexts>
<context position="3638" citStr="Gupta et al., 2014" startWordPosition="578" endWordPosition="581">ong tail attributes. The observation underlying our approach is that attributes from the long tail are typically expressed as nouns, whereas most previous work on open-information extraction (e.g., Mausam et al. (2012)) extend techniques for extracting attributes expressed in verb form. Hence, the main contribution of our work is to develop an extraction system that complements previous efforts, focuses on nominal attributes and is effective for the long tail. To that end, ReNoun begins with a large but imperfect ontology of nominal attributes that is extracted from text and the query stream (Gupta et al., 2014). ReNoun proceeds by using a small set of highprecision extractors that exploit the nominal na325 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 325–335, October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics Attribute Fact Phrase Verb form seen legal affairs (NPR, legal affairs NPR welcomed Nina Totenberg as X correspondent correspondent, Nina Totenberg) its new legal affairs correspondent. economist (Princeton, economist, Princeton economist Paul Krugman X Paul Krugman) was awarded the Nobel prize in 2008. ex-</context>
<context position="5757" citStr="Gupta et al., 2014" startWordPosition="924" endWordPosition="927">t ReNoun extracts a large body of high precision facts, and that these facts are not extracted with techniques based on verb phrases. 2 Preliminaries The goal of ReNoun is to extract triples of the form (S,A,O), where S is subject, A is the attribute, and O is the object. In our setting, the attribute is always a noun phrase. We refer to the subject and object as the arguments of the attribute. ReNoun takes as input a set of attributes, which can be collected using the methods described in Gupta el al. (2014), Lee et al. (2012), and Pasca and van Durme (2007). In this work, we use Biperpedia (Gupta et al., 2014), which is an ontology of nominal attributes automatically extracted from Web text and user queries. For every attribute, Biperpedia supplies the Freebase (Bollacker et al., 2008) domain type (e.g., whether the attribute applies to people, organizations or hotels). Since the attributes themselves are the result of an extraction algorithm, they may include false positives (i.e., attributes that do not make sense). The focus of ReNoun is on attributes whose values are concrete objects (e.g., wife, protege, chief-economist). Other classes of attributes that we do not consider in this work are (1)</context>
</contexts>
<marker>Gupta, Halevy, Wang, Whang, Wu, 2014</marker>
<rawString>Rahul Gupta, Alon Halevy, Xuezhi Wang, Steven Whang, and Fei Wu. 2014. Biperpedia: An Ontology for Search Applications. In Proceedings of the VLDB Endowment.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aria Haghighi</author>
<author>Dan Klein</author>
</authors>
<title>Simple Coreference Resolution with Rich Syntactic and Semantic Features.</title>
<date>2009</date>
<booktitle>In Proceedings of Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="14911" citStr="Haghighi and Klein (2009)" startWordPosition="2484" endWordPosition="2487">y Page). Document: “[Google]1 [CEO]2 [Larry Page]2 started his term in 2011, when [he]2 succeeded [Eric Schmidt]3. [Schmidt]3 has since assumed the role of executive chairman of [the company]1.” (a) Coreference clusters: # Phrases Freebase ID 1 Google, the company /m/045c7b 2 Larry Page, CEO, he /m/0gjpq 3 Eric Schmidt, Schmidt /m/01gqf4 (b) Figure 2: Coreference clusters: (a) a document annotated with coreference clusters; (b) a table showing each cluster with the representative phrases in bold and the Freebase ID to which each cluster maps. We rely on a coreference resolver in the spirit of Haghighi and Klein (2009). The resolver clusters the mentions of entities in a document so the references in each cluster are assumed to refer to the same real-world entity. The resolver also chooses for each cluster a representative phrase, which is a proper noun or proper adjective (e.g., Canadian). Other phrases in the same cluster can be other proper nouns or adjectives, common nouns like CEO or pronouns like he in the example. Each cluster is possibly linked by an entity resolver to a Freebase entity using a unique Freebase ID. Figure 2(b) shows the coreference clusters from the sample document, with representati</context>
</contexts>
<marker>Haghighi, Klein, 2009</marker>
<rawString>Aria Haghighi and Dan Klein 2009. Simple Coreference Resolution with Rich Syntactic and Semantic Features. In Proceedings of Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Johansson</author>
<author>Pierre Nugues</author>
</authors>
<title>The Effect of Syntactic Representation on Semantic Role Labeling.</title>
<date>2008</date>
<booktitle>In Proceedings of the International Conference on Computational Linguistics.</booktitle>
<contexts>
<context position="31367" citStr="Johansson and Nugues (2008)" startWordPosition="5251" endWordPosition="5254">un arguments are rarely interesting without more context. We note that the majority of the 25 Ollie relations without corresponding Biperpedia attributes also fall into one of the three categories above. 7.3 Comparison against NomBank In principle, the task of extracting noun-mediated relations can be compared to that of semantic role labeling (SRL) for nouns. The task in SRL is to identify a relation, expressed either through a verb or a noun, map it to a semantic frame, and map the arguments of the relation to the various roles within the frame. State of the art SRL systems, such as that of Johansson and Nugues (2008), are trained on NomBank (Meyers et al., 2004) for handling nominal relations, which also means that they are limited by the knowledge it has. We asked a judge to manually search NomBank for 100 attributes randomly drawn from each of FH and LT for which ReNoun extracts facts. For multi-word attributes, we declare a match if its head word was found. We were able to find 80 matches for the FH attributes and 42 for LT ones. For example, we could not find entries for the noun attributes coach or linebacker (of a football team). This result is easy to explain by the fact that NomBank only has 4700 </context>
</contexts>
<marker>Johansson, Nugues, 2008</marker>
<rawString>Richard Johansson and Pierre Nugues 2008. The Effect of Syntactic Representation on Semantic Role Labeling. In Proceedings of the International Conference on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Taesung Lee</author>
<author>Zhongyuan Wang</author>
<author>Haixun Wang</author>
<author>Seung-won Hwang</author>
</authors>
<title>Attribute Extraction and Scoring: A Probabilistic Approach.</title>
<date>2013</date>
<booktitle>In Proceedings of the International Conference on Data Engineering .</booktitle>
<marker>Lee, Wang, Wang, Hwang, 2013</marker>
<rawString>Taesung Lee, Zhongyuan Wang, Haixun Wang, and Seung-won Hwang 2013. Attribute Extraction and Scoring: A Probabilistic Approach. In Proceedings of the International Conference on Data Engineering .</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Schmitz Mausam</author>
<author>Stephen Soderland</author>
<author>Robert Bart</author>
<author>Oren Etzioni</author>
</authors>
<title>Open Language Learning for Information Extraction.</title>
<date>2012</date>
<booktitle>In Proceedings of Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="3237" citStr="Mausam et al. (2012)" startWordPosition="511" endWordPosition="514">g, extending the coverage of the knowledge base to long tail attributes can also facilitate providing Web answers to the user. Specifically, the search engine can use lower-confidence facts to corroborate an answer that appears in text in one of the top Web results and highlight them to the user. This paper describes ReNoun, an openinformation extraction system that focuses on extracting facts for long tail attributes. The observation underlying our approach is that attributes from the long tail are typically expressed as nouns, whereas most previous work on open-information extraction (e.g., Mausam et al. (2012)) extend techniques for extracting attributes expressed in verb form. Hence, the main contribution of our work is to develop an extraction system that complements previous efforts, focuses on nominal attributes and is effective for the long tail. To that end, ReNoun begins with a large but imperfect ontology of nominal attributes that is extracted from text and the query stream (Gupta et al., 2014). ReNoun proceeds by using a small set of highprecision extractors that exploit the nominal na325 Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages</context>
</contexts>
<marker>Mausam, Soderland, Bart, Etzioni, 2012</marker>
<rawString>Mausam, Michael Schmitz, Stephen Soderland, Robert Bart, and Oren Etzioni. 2012. Open Language Learning for Information Extraction. In Proceedings of Empirical Methods in Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tomas Mikolov</author>
<author>Kai Chen</author>
<author>Greg Corrado</author>
<author>Jeffrey Dean</author>
</authors>
<title>Efficient Estimation of Word Representations in Vector Space.</title>
<date>2013</date>
<tech>arXiv.</tech>
<contexts>
<context position="25221" citStr="Mikolov et al., 2013" startWordPosition="4220" endWordPosition="4223"> for the coherent set of attributes ex-wife, boyfriend, and ex-partner, then its output is consistently good. On the other hand, a pattern that yields facts for a less coherent set of attributes ex-wife, general manager, and subsidiary is more likely to produce noisy extractions. Generic, more incoherent patterns are more sensitive to noise in the linguistic annotation of a document. Figure 5 shows an example pattern for each case, along with its frequency and coherence. We capture coherence of attributes using wordvector representations of attributes that are created over large text corpora (Mikolov et al., 2013). The word-vector representation v(w) for a word w (multi-word attributes can be preprocessed into single words) is computed in two steps. First, the algorithm counts the number of occurrences of a word w1 that occurs within the text window centered at w (typically a window of size 10), producing an intermediate vector that potentially has a non-zero value for every word in the corpus. The intermediate vector is then mapped to a much smaller dimension (typically less than 1000) to produce v(w). As shown in (Mikolov et al., 2013), two words w1 and w2 for which the cosine dis{O/N} nn {A/N} {S/N}</context>
</contexts>
<marker>Mikolov, Chen, Corrado, Dean, 2013</marker>
<rawString>Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. 2013. Efficient Estimation of Word Representations in Vector Space. arXiv.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mike Mintz</author>
<author>Steven Bills</author>
<author>Rion Snow</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Distant Supervision for Relation Extraction Without Labeled Data.</title>
<date>2009</date>
<booktitle>In Proceedings of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="11216" citStr="Mintz et al., 2009" startWordPosition="1834" endWordPosition="1837">action: We begin by extracting a small number of high-precision facts for our attributes. For this step, we rely on manually specified lexical patterns that are specifically tailored for noun phrases, but are general enough to be independent of any specific attributes. When applying such patterns, we exploit coreference to make the generated seed facts more precise by requiring the attribute and object noun phrases of a seed fact to refer to the same real-world entity. This is elaborated further in Section 4. Extraction pattern generation: Utilizing the seed facts, we use distant supervision (Mintz et al., 2009) to learn a set of dependency parse patterns that are used to extract a lot more facts from the text corpus. Candidate generation: We apply the learned dependency parse patterns from the previous stage to generate a much larger set of extractions. We aggregate all the extractions that give rise to the same fact and store with them the provenance of the extraction. The extractions generated here are called candidates because they are assigned scores that determine how they are used. The application consuming an extraction can decide whether to discard an extraction or use it, and in this case t</context>
<context position="41540" citStr="Mintz et al. (2009)" startWordPosition="6977" endWordPosition="6980">so limited. In comparison, ReNoun take a nouncentric approach and extracts many facts that do not exist in Ollie.clo ClausIE (Del Corro and Gemulla, 2013) is an OIE framework that exploits knowledge about the grammar of the English language to find clauses in a sentence using its dependency parse. The clauses are subsequently used to generate extractions at multiple granularities, possibly with more than triples. While ClausIE comes with a predefined set of rules on how to extract facts from a dependency parse, ReNoun learns such rules from its seed facts. Finally, Nakashole et al. (2014) and Mintz et al. (2009) find additional facts for attributes that already have facts in a knowledge base. In contrast, ReNoun is an OIE framework whose goal is to find facts for attributes without existing facts. 9 Conclusions We described ReNoun, an open information extraction system for nominal attributes that focuses on the long tail. The key to our approach is to start from a large ontology of nominal attributes and apply noun-specific manual patterns on a large preprocessed corpus (via standard NLP components) to extract precise seed facts. We then learn a set of dependency patterns, which are used to generate </context>
</contexts>
<marker>Mintz, Bills, Snow, Jurafsky, 2009</marker>
<rawString>Mike Mintz, Steven Bills, Rion Snow, and Daniel Jurafsky. 2009. Distant Supervision for Relation Extraction Without Labeled Data. In Proceedings of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Meyers</author>
<author>Ruth Reeves</author>
<author>Catherine Macleod</author>
<author>Rachel Szekely</author>
<author>Veronika Zielinska</author>
<author>Brian Young</author>
<author>Ralph Grishman</author>
</authors>
<title>Annotating Noun Argument Structure for NomBank.</title>
<date>2004</date>
<booktitle>In Proceedings of Language Resources and Evaluation.</booktitle>
<contexts>
<context position="31413" citStr="Meyers et al., 2004" startWordPosition="5259" endWordPosition="5262">ext. We note that the majority of the 25 Ollie relations without corresponding Biperpedia attributes also fall into one of the three categories above. 7.3 Comparison against NomBank In principle, the task of extracting noun-mediated relations can be compared to that of semantic role labeling (SRL) for nouns. The task in SRL is to identify a relation, expressed either through a verb or a noun, map it to a semantic frame, and map the arguments of the relation to the various roles within the frame. State of the art SRL systems, such as that of Johansson and Nugues (2008), are trained on NomBank (Meyers et al., 2004) for handling nominal relations, which also means that they are limited by the knowledge it has. We asked a judge to manually search NomBank for 100 attributes randomly drawn from each of FH and LT for which ReNoun extracts facts. For multi-word attributes, we declare a match if its head word was found. We were able to find 80 matches for the FH attributes and 42 for LT ones. For example, we could not find entries for the noun attributes coach or linebacker (of a football team). This result is easy to explain by the fact that NomBank only has 4700 attributes. In addition, for some nouns, the a</context>
</contexts>
<marker>Meyers, Reeves, Macleod, Szekely, Zielinska, Young, Grishman, 2004</marker>
<rawString>Adam Meyers, Ruth Reeves, Catherine Macleod, Rachel Szekely, Veronika Zielinska, Brian Young, and Ralph Grishman. 2004. Annotating Noun Argument Structure for NomBank. In Proceedings of Language Resources and Evaluation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nitin Madnani</author>
<author>Bonnie J Dorr</author>
</authors>
<title>Generating Phrasal and Sentential Paraphrases: A Survey of Data-Driven Methods.</title>
<date>2010</date>
<journal>In Computational Linguistics</journal>
<volume>36</volume>
<issue>3</issue>
<contexts>
<context position="8780" citStr="Madnani and Dorr, 2010" startWordPosition="1433" endWordPosition="1436">tic classes they occur with in the ontology because many classes overlap. 326 Knowledge Base %Nouns %Verbs Freebase 97 3 DBpedia 96 4 Table 3: Percentage of attributes expressed as nouns phrases among the 100 attributes with the most facts. the vast majority of the attributes in both Freebase and DBpedia (Auer et al., 2007) are expressed as nouns even for the fat head (and even more so for the long tail). Hence, if we extract the verb form of attributes we would need to translate them into noun form, which would require us to solve the paraphrasing problem and introduce more sources of error (Madnani and Dorr, 2010). Second, as we dig deeper into the long tail, attributes tend to be expressed in text more in noun form rather than verb form. One of the reasons is that the attribute names tend to get longer and therefore unnatural to express as verbs (e.g. chief privacy officer, automotive division). Finally, there is often a subtle difference in meaning between verb forms and noun forms of attributes. For example, it is common to see the phrase “Obama advised Merkel on saving the Euro,” but that would not necessarily mean we want to say that Obama is an advisor of Angela Merkel, in the common sense of adv</context>
</contexts>
<marker>Madnani, Dorr, 2010</marker>
<rawString>Nitin Madnani and Bonnie J. Dorr. 2010. Generating Phrasal and Sentential Paraphrases: A Survey of Data-Driven Methods. In Computational Linguistics 36(3).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ndapandula Nakashole</author>
<author>Martin Theobald</author>
<author>Gerhard Weikum</author>
</authors>
<title>Scalable Knowledge Harvesting with High Precision and High Recall.</title>
<date>2011</date>
<booktitle>In Proceedings of Web Search and Data Mining.</booktitle>
<marker>Nakashole, Theobald, Weikum, 2011</marker>
<rawString>Ndapandula Nakashole, Martin Theobald, and Gerhard Weikum. 2011. Scalable Knowledge Harvesting with High Precision and High Recall. In Proceedings of Web Search and Data Mining.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marius Pasca</author>
</authors>
<title>Acquisition of Open-domain Classes via Intersective Semantics.</title>
<date>2014</date>
<booktitle>In Proceedings of the International World Wide Web Conference.</booktitle>
<marker>Pasca, 2014</marker>
<rawString>Marius Pasca. 2014. Acquisition of Open-domain Classes via Intersective Semantics. In Proceedings of the International World Wide Web Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marius Pasca</author>
<author>Benjamin Van Durme</author>
</authors>
<title>What You Seek Is What You Get: Extraction of Class Attributes from Query Logs.</title>
<date>2007</date>
<booktitle>In Proceedings of the International Joint Conference on Artificial Intelligence .</booktitle>
<marker>Pasca, Van Durme, 2007</marker>
<rawString>Marius Pasca and Benjamin Van Durme. 2007. What You Seek Is What You Get: Extraction of Class Attributes from Query Logs. In Proceedings of the International Joint Conference on Artificial Intelligence .</rawString>
</citation>
<citation valid="true">
<authors>
<author>Uma Sawant</author>
<author>Soumen Chakrabarti</author>
</authors>
<title>Learning Joint Query Interpretation and Response Ranking.</title>
<date>2013</date>
<booktitle>In Proceedings of the International World Wide Web Conference.</booktitle>
<marker>Sawant, Chakrabarti, 2013</marker>
<rawString>Uma Sawant and Soumen Chakrabarti. 2013. Learning Joint Query Interpretation and Response Ranking. In Proceedings of the International World Wide Web Conference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Amit Singhal</author>
</authors>
<title>Introducing the Knowledge Graph: things, not strings</title>
<date>2012</date>
<note>http://googleblog.blogspot.com/2012/ 05/introducing-knowledge-graphthings-not.html</note>
<contexts>
<context position="1855" citStr="Singhal, 2012" startWordPosition="288" endWordPosition="289">act facts with high precision and for attributes that cannot be extracted with verb-based techniques. 1 Introduction One of the major themes driving the current evolution of search engines is to make the search experience more efficient and mobile friendly for users by providing them concrete answers to queries. These answers, that apply to queries about entities that the search engine knows about (e.g., famous individuals, organizations or locations) complement the links that the search en∗Work done during an internship at Google Research. gine typically returns (Sawant and Chakrabati, 2013; Singhal, 2012; Yahya et al., 2012). To support such answers, the search engine maintains a knowledge base that describes various attributes of an entity (e.g., (Nicolas Sarkozy, wife, Carla Bruni)). Upon receiving a query, the search engine tries to recognize whether the answer is in its knowledge base. For the most part, the aforementioned knowledge bases are constructed using manual techniques and carefully supervised information extraction algorithms. As a result, they obtain high coverage on head attributes, but low coverage on tail ones, such as those shown in Table 1. For example, they may have the a</context>
</contexts>
<marker>Singhal, 2012</marker>
<rawString>Amit Singhal. 2012 Introducing the Knowledge Graph: things, not strings http://googleblog.blogspot.com/2012/ 05/introducing-knowledge-graphthings-not.html</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fei Wu</author>
<author>Daniel S Weld</author>
</authors>
<title>Open Information Extraction Using Wikipedia.</title>
<date>2010</date>
<booktitle>In Proceedings of the the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="40196" citStr="Wu and Weld, 2010" startWordPosition="6754" endWordPosition="6757">n should have extracted values. One reason for missing values is that the corpus itself does not contain values of all attributes. Another reason is that some attributes are not verbalized in text. For example, attributes like nationality are usually not explicitly stated when expressed in text. 8 Related Work Open information extraction (OIE) was introduced by Banko et al. (2007). For a pair of noun phrases, their system, TEXTRUNNER, looks for the attribute (or more generally the relation) in the text between them and uses a classifier to judge the trustworthiness of an extraction. WOEparse (Wu and Weld, 2010) extends this by using dependency parsing to connect the subject and object. Both systems assume that the attribute is between its two arguments, an assumption that ReNoun drops since it is not suitable for nominal attributes. Closest to our work are ReVerb (Fader et al., 2011) and Ollie (Mausam at al., 2012). ReVerb uses POS tag patterns to locate verb relations and then looks at noun phrases to the left and right for arguments. Ollie uses the ReVerb extractions as its seeds to train patterns that can further extract triples. While Ollie’s patterns themselves are not limited to verb relations</context>
</contexts>
<marker>Wu, Weld, 2010</marker>
<rawString>Fei Wu and Daniel S. Weld. 2010. Open Information Extraction Using Wikipedia. In Proceedings of the the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohamed Yahya</author>
<author>Klaus Berberich</author>
<author>Shady Elbassuoni</author>
<author>Maya Ramanath</author>
<author>Volker Tresp</author>
<author>Gerhard Weikum</author>
</authors>
<title>Natural Language Questions for the Web of Data.</title>
<date>2012</date>
<booktitle>In Proceedings of Empirical Methods in Natural Language Processing.</booktitle>
<contexts>
<context position="1876" citStr="Yahya et al., 2012" startWordPosition="290" endWordPosition="293">high precision and for attributes that cannot be extracted with verb-based techniques. 1 Introduction One of the major themes driving the current evolution of search engines is to make the search experience more efficient and mobile friendly for users by providing them concrete answers to queries. These answers, that apply to queries about entities that the search engine knows about (e.g., famous individuals, organizations or locations) complement the links that the search en∗Work done during an internship at Google Research. gine typically returns (Sawant and Chakrabati, 2013; Singhal, 2012; Yahya et al., 2012). To support such answers, the search engine maintains a knowledge base that describes various attributes of an entity (e.g., (Nicolas Sarkozy, wife, Carla Bruni)). Upon receiving a query, the search engine tries to recognize whether the answer is in its knowledge base. For the most part, the aforementioned knowledge bases are constructed using manual techniques and carefully supervised information extraction algorithms. As a result, they obtain high coverage on head attributes, but low coverage on tail ones, such as those shown in Table 1. For example, they may have the answer for the query “</context>
</contexts>
<marker>Yahya, Berberich, Elbassuoni, Ramanath, Tresp, Weikum, 2012</marker>
<rawString>Mohamed Yahya, Klaus Berberich, Shady Elbassuoni, Maya Ramanath, Volker Tresp, and Gerhard Weikum. 2012. Natural Language Questions for the Web of Data. In Proceedings of Empirical Methods in Natural Language Processing.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>