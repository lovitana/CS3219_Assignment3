<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000001">
<title confidence="0.995625">
Exploiting Community Emotion for Microblog Event Detection
</title>
<author confidence="0.914611">
Gaoyan Ou&apos;,2, Wei Chen&apos;,2,, Tengjiao Wang&apos;,2, Zhongyu Wei&apos;,3,
Binyang Li4, Dongqing Yang&apos;,2 and Kam-Fai Wong&apos;,3
</author>
<affiliation confidence="0.98632425">
&apos;Key Laboratory of High Confidence Software Technologies, Ministry of Education, China
2School of Electronics Engineering and Computer Science, Peking University, China
3Shenzhen Research Institute, The Chinese University of Hong Kong, China
4Dept. of Information Science &amp; Technology, University of International Relations, China
</affiliation>
<email confidence="0.90551">
pekingchenwei@pku.edu.cn
</email>
<figure confidence="0.963873">
������ ������
� ���
Happy Anger
Sad Fear
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
Day (in March 2011)
0.7
0.6
Emotion Distribution
0.5
0.4
0.3
0.2
0.1
0
</figure>
<sectionHeader confidence="0.544006" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.5997205">
Microblog has become a major plat-
form for information about real-world
</bodyText>
<figure confidence="0.89430075">
������� ������
����� ������
events. Automatically discovering real-
������� ������
������ �����
world events from microblog hasattracted
������� �������
������� �����
</figure>
<bodyText confidence="0.926465095238095">
the attention of many researchers. Howev-
er, most of existing work ignore the impor-
�������� �������
�
tance of emotion information forevent de-
�������� ������
tection. We argue that people’s emotion-
al reactions immediately reflect the occur-
ring of real-world events and should be im-
portant for event detection. In this study,
we focus on the problem of community-
related event detection by community e-
motions. To address the problem, we pro-
pose a novel framework which include
the following three key components: mi-
croblog emotion classification, community
emotion aggregation and community emo-
tion burst detection. We evaluate our ap-
proach on real microblog data sets. Exper-
imental results demonstrate the effective-
ness of the proposed framework.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998633230769231">
Microblog has become a popular and convenient
platform for people to share information about so-
cial events in real time. When an external even-
t occurs, it will be quickly propagated between
microblog users. During propagation process of
an event, sufficient amount of users will express
their emotions. Taking Sina Weibo1 as an exam-
ple, more than 12 percent of users use emoticons2
when reposting an event-related microblog mes-
sage.
The emotion information can not only help us
better understand a given event, but also be u-
tilized to discover new events. Figure 1 shows
</bodyText>
<footnote confidence="0.997264">
1http://weibo.com/
2An icon to indicate user’s emotion, as shown in Table 1.
</footnote>
<figureCaption confidence="0.9922975">
Figure 1: The global emotion dynamics
the emotional distribution dynamics of the over-
</figureCaption>
<equation confidence="0.9588704">
��� ��� ��� �
㦟ᇦ䪛↫ࡁ �� � �
all microblog messages inMarch 2011. The
׺ጠ↫ࡁ ���� ���� ��
ӁՊѻ↫ �� ��� �
</equation>
<bodyText confidence="0.633059">
sudden change of the public emotion distribu-
</bodyText>
<equation confidence="0.75939575">
TDWDU ��� ��� �� �
�� ��
tion on March 12 indicates a public event: 3.11
EDFHOOD ��� ���� �� ��
</equation>
<bodyText confidence="0.999843464285714">
Earthquake in Japan. We can see that emotional
changes immediately reflect the occurring of real-
world events, thus it is reasonable to use them to
perform event detection.
Most existing research on microblog event de-
tection (Weng and Lee, 2011; Sakaki et al., 2010;
Becker et al., 2010) only account for the factu-
al information (e.g., burstness of topic keyword-
s). They usually ignore the importance of emo-
tion information for event detection. Although
there have recently been a few papers (Zhao et al.,
2012a; Nguyen et al., 2013; Akcora et al., 2010)
in this direction, they have a number of disad-
vantages. Firstly, they can not detect community-
related events. Since they all aggregate emotion
at global level, they can only discover national at-
tention events, such as public holidays ( “Christ-
mas” and “Spring Festival”) or natural disasters.
In many applications, discovering events related
to a certain group of users or a certain topic is
more meaningful. Consider the following ques-
tions: “what happened in the football communi-
ty last week?” and “what are the most significant
events in the lawyer community last month?” Sec-
ondly, they assign equal weight to each microblog
message or user when aggregating them to a glob-
al emotion score. Such approaches may lead to
incorrect results when a user posts emotion spam
</bodyText>
<page confidence="0.967504">
1159
</page>
<note confidence="0.899534">
Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1159–1168,
October 25-29, 2014, Doha, Qatar. c�2014 Association for Computational Linguistics
</note>
<bodyText confidence="0.9999586">
in the community. Thirdly, there is a lack of quan-
titative evaluation using real-world events in exist-
ing work. For example, there is only case study in
(Zhao et al., 2012a) and (Akcora et al., 2010).
In this study, we focus on a new task of de-
tecting community-related events via community
emotion. Our intuition is inspired from the so-
cial psychology theory of group emotion. In social
psychology, group emotion refers to the moods,
emotions and dispositional affects of a group of
people 3. It can arise as a result of group-relevant
events (Smith et al., 2007). For example, people
will feel happy when their favorite football team
wins a game and feel sad when their team loses
a game. Thus we can use the community emo-
tion as signals to detect community-related events.
To achieve good performance of this new task, the
following two factors must be considered: 1) how
to measure the community emotion based on mi-
croblog message or user emotion and 2) how to
perform event detection based on the sequence of
community emotion.
To measure community emotion, we argue that
in a given community, different users have differ-
ent emotional authorities. The emotion of highly
influential people in the community may be more
important in determining the community emotion
(Bars¨ade and Gibson, 1998). We propose to use
the user’s emotion authority computed by the so-
cial network of the community to weight the us-
er when aggregating community emotion. Since
spam user is unlikely to have high emotion au-
thority in the community, our method can reduce
the effect of emotion spam. Based on the com-
munity emotion, we present an emotion burst de-
tection algorithm for the community emotion dis-
tribution sequence. We identify two emotional s-
tates of the community: “emotion stable” state and
“emotion burst” state. We use the Dirichlet dis-
tribution to model the generation process of the
community emotion distribution. An efficient e-
motion burst detection algorithm is presented to
detect community-related events.
We evaluate our approach on large-scale mi-
croblog data sets by using real-world event list
for each community. Experimental results demon-
strate that the community emotion is an effective
signal for community-related event detection. In
comparison with several baseline methods, our e-
motion burst detection algorithm also improves
</bodyText>
<footnote confidence="0.710614">
3http://en.wikipedia.org/wiki/Group emotion
</footnote>
<bodyText confidence="0.993391">
the event detection performance in terms of pre-
cision, recall and F-measure.
</bodyText>
<sectionHeader confidence="0.999338" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999926333333333">
In this section, we review the related work on sen-
timent analysis and event detection in microblog,
respectively.
</bodyText>
<subsectionHeader confidence="0.530056">
Sentiment Analysis in Microblog: Sentiment
</subsectionHeader>
<bodyText confidence="0.995161953488372">
analysis (Pang and Lee, 2008; Liu, 2012) is main-
ly about analyzing people’s opinions, sentiments
and emotions towards a given event, topic, produc-
t, etc. Microblog platforms like Twitter and Wei-
bo, provide people a convenient way to post their
emotional reactions towards social events in al-
most real time. This leads to increasing number
of interests on sentiment analysis in microblog da-
ta (Davidov et al., 2010; Liu et al., 2012; Go et
al., 2009; Agarwal et al., 2011; Pak and Paroubek,
2010; Jiang et al., 2011; Speriosu et al., 2011;
Bermingham and Smeaton, 2010). The training
data for microblog sentiment analysis are usual-
ly obtained in an automatic manner by utilizing
emoticons, hashtags and smileys. Davidov et al.
(2010) propose an approach to automatically ob-
tain labeled training examples by exploiting hash-
tags and smileys. Liu et al. (2012) proposed an e-
moticon smoothed method to integrate both manu-
ally labeled data and noisy labeled data for Twitter
sentiment classification.
Different from existing microblog sentimen-
t analysis work, which aims at discovering senti-
ments and emotions for an event or topic given in
advance, we are interested in utilizing the emotion
information in microblog messages for real-world
event detection. Our work use sentiment analysis
as a tool to perform microblog emotion classifi-
cation. Then we propose an event detection algo-
rithm based on the sequence of community level
emotion distribution.
Event Detection in Microblog: Event detec-
tion from microblog data has attracted increas-
ing attention recently. We divide existing work
into the following two categories: non-emotion-
based methods and emotion-based methods. Non-
emotion-based methods try to exploit keyword or
activity patterns to discover events (Weng and Lee,
2011; Sakaki et al., 2010; Becker et al., 2010;
Mathioudakis and Koudas, 2010). Mathioudakis
and Koudas (2010) first identify “bursty” key-
words and then discover events by grouping bursty
keywords together. Zhao et al. (2012b) focuses on
</bodyText>
<page confidence="0.983742">
1160
</page>
<bodyText confidence="0.999863375">
identifying event-related burst from social media
based on multiple activities. They propose a uni-
fied optimization model to integrate multiple cor-
related activity streams based on the state machine
in (Kleinberg, 2003).
Emotion-based methods try to exploit the emo-
tional reactions to discover events (Zhao et al.,
2012a; Akcora et al., 2010). Akcora et al. (2010)
model public emotion as an emotion vector com-
puted by counting emotion words and then use a
rule-based method to identify public breakpoints.
Zhao et al. (2012a) use a simple top-k method to
detect abnormal events based on sequence of sen-
timent variance.
Our method is also an emotion-based method.
However, our approach is different from existing
emotion-based methods in the following aspect-
s. Firstly, while existing work aggregates emotion
for all users, we focus on emotion for a certain
community to discover community-related events.
Secondly, existing methods assume that the emo-
tions of different users are of equal importance.
We distinguish user’s emotional authority based
on the community structure of users.
</bodyText>
<sectionHeader confidence="0.99486" genericHeader="method">
3 Preliminary Definitions
</sectionHeader>
<bodyText confidence="0.998835757575757">
In this section, we first give some basic concepts
before formally defining our problem.
Topical Community: A group of connected
users that are interested in a specific topic. A topi-
cal community can be denoted as C = {V, E, M},
where V is the set of community users, E is
the set of relationships of between users. M =
{M1, M2,..., MT} is the microblog message col-
lection in the community, which is segmented ac-
cording to time. Mt is the microblog message col-
lection in time interval t.
Emotion Distribution: An emotion distribu-
tion et is a real-value N-dimension vector sampled
from the emotion space, satisfying the constraint
EN1 et, = 1. It indicates the emotional state of a
microblog message, a user or a community at time
t. At a given time interval t, a user emotion distri-
bution et(u) is computed by an aggregation func-
tion over the emotion distribution of the microblog
messages posted by u in time interval t. Commu-
nity emotion distribution et(c) is computed by an
aggregation function over the emotion distribution
of the community users in c at time interval t.
Community Emotion Burst: Given an emo-
tion distribution sequence et for community c, an
emotion burst is defined as period [ts, te] in which
some event relevant to c takes places. During the
time period, the emotion distribution of c is :1) sig-
nificantly different from its average emotion distri-
bution, or 2) extremely uneven distributed.
Given the above definitions, our object is then to
detect community-related events from the emotion
distribution sequence of the community.
</bodyText>
<sectionHeader confidence="0.990449" genericHeader="method">
4 The Proposed Framework
</sectionHeader>
<bodyText confidence="0.997252166666667">
In this section, we describe our microblog event
detection framework. The framework aims to de-
tect community-related events based on the com-
munity emotion. The overview of our framework
is shown in Figure 2. In particular, we define the
following four main components:
</bodyText>
<listItem confidence="0.985488047619048">
1) Microblog emotion classification: We train
emotion classification model by automatically ac-
quiring training data using the emoticons.
2) Community emotion aggregation: We as-
sume that in a given community, different users
have different weights when aggregating commu-
nity emotion. Thus we propose a novel weighting
approach based on the user’s authority.
3) Community emotion burst detection: Giv-
en the community emotion, we propose an emo-
tion burst detection algorithm to detect community
emotion bursts.
4) Event extraction: The function of this com-
ponent is to extract event keywords for each com-
munity emotion burst. We count the document
frequency (DF) of each term contained in the mi-
croblog messages in the burst period. Then the
top-5 DF terms are used to describe the event oc-
curring during the burst period, although there ex-
ist alternative techniques (Ritter et al., 2012; Li et
al., 2010).
</listItem>
<bodyText confidence="0.998386333333333">
Since the last component is not the main focus
of this work, we only introduce the first three com-
ponents in detail in the following subsections.
</bodyText>
<subsectionHeader confidence="0.997447">
4.1 Microblog Emotion Classification
</subsectionHeader>
<bodyText confidence="0.999907777777778">
We build an emotion classifier using the multino-
mial Naive Bayes classifier for each community
to classify microblog messages into different emo-
tion classes. Here we are interested in the setting
where the microblog messages arrive as stream,
thus it is not appropriate to use a constant set of
manually labeled messages. To avoid manual an-
notation cost, we adopt a distant supervision ap-
proach (Go et al., 2009; Davidov et al., 2010; Hu
</bodyText>
<page confidence="0.992996">
1161
</page>
<figureCaption confidence="0.9950375">
Figure 2: Overview of our community-related
event detection framework
</figureCaption>
<tableCaption confidence="0.96255">
Table 1: List of emoticons
</tableCaption>
<bodyText confidence="0.985295870967742">
Happy(26) good laugh love smile cute
Anger (19) anger hate curse despise crazy
Sad(13) sad disappoint cry unhappy unwell
Fear(11) fear surprise shame doubt fright
et al., 2013) to acquire labeled microblog mes-
sages automatically by using the emoticons. We
first select a set of emoticons which are most fre-
quently used to express emotion in microblog.
Then we manually map each emoticon into four
emotion classes (26 for happy, 19 for anger, 13
for sad and 11 for fear). We only show the top
five emoticons for each emotion type in Table 1.
The labeled emoticons can then be used to acquire
training data to train an emotion classifier for a
community in any time period.
We combine the features which have been
proven effective by previous work, such as punc-
tuation and emotion lexicons. Specifically, we use
the following features : 1) Words appearing in
the microblog message serve as word features, 2)
Number of “!” characters and “?” in the microblog
message, and 3) Each term in a general emotion
lexicon serves as an emotion lexicon feature.
The emotion distribution e(m) of a microblog
message m is represented by a N-dimension dis-
tribution vector. For example, if a microblog mes-
sage m is classified as happy, then its emotion dis-
tribution e(m) is [1, 0, 0, 0]. The emotion distribu-
tion of e(u) of user u at time t is average emotion
distribution of the microblog messages posted by
him during time t.
</bodyText>
<equation confidence="0.940904">
e(m) (1)
</equation>
<bodyText confidence="0.977505">
where Nut is the number of microblog messages
posted by user u at time t.
</bodyText>
<subsectionHeader confidence="0.994271">
4.2 Community-level Emotion Aggregation
</subsectionHeader>
<bodyText confidence="0.999934">
A common strategy to measure community emo-
tion is to compute the average emotion of the com-
munity users. It is based on the assumption that the
emotion of different community users are with e-
qual importance. This is implemented by employ-
ing an average aggregation function on the indi-
vidual emotion distribution et(u):
</bodyText>
<equation confidence="0.998322">
1 � et(c) = Nc u∈c et(u) (2)
</equation>
<bodyText confidence="0.999851521739131">
where Nc is the number of users in community c.
Intuitively, the emotion of user with higher au-
thority in community should be more important in
determining community emotion. Thus we esti-
mate community emotion by taking into account
user’s emotional authority, which is based on the
assumption that different users in a community
have different emotional authorities.
We employ HITS algorithm(Kleinberg, 1999)
to compute the user authority auth(u) based on
the user network {V, E} of the community. Then
auth(u) is used to represent the emotional author-
ity of user u. This authority-based community e-
motion aggregation approach can also reduce the
effect of spam users, since they usually have low
authorities in the community network. For sim-
plicity and computation efficiency, we assume that
auth(u) is time independent, which means that we
only need to run the HITS algorithm once for each
community. Given the user emotion distribution-
s and the user emotional authorities, the emotion
distribution for a community c in time interval t
can be measured as:
</bodyText>
<equation confidence="0.9978755">
1 � et(c) = Act
u∈c auth(u)et(u) (3)
</equation>
<bodyText confidence="0.9989465">
where Act = Eu∈ct auth(u) is the normalization
term.
</bodyText>
<subsectionHeader confidence="0.997149">
4.3 Community Emotion Burst Detection
</subsectionHeader>
<bodyText confidence="0.9999705">
We formulate our problem into the binary state
model framework (Kleinberg, 2003). For a giv-
en community c, there are T time intervals in
total, with community emotion distribution se-
quence e = (e1, e2, ..., eT) and state sequence
q = (q1, q2,..., qT). Each qt can be one of the fol-
lowing two states: qt = 0 (“emotion stable” state)
and qt = 1 (“emotion burst” state). Our objective
</bodyText>
<figure confidence="0.802990266666667">
Community
Network
Microblog
Streams
Community Emotion
Aggregation
Microblog Emotion
Classification
Community Emotion
Burst Detection
Event Extraction
et(u) = 1 Nut
Nut m=1
1162
(a) “emotion stable” state (b) “emotion burst” state
</figure>
<figureCaption confidence="0.9882015">
Figure 3: Emotion probability density for “emo-
tion stable” state and “emotion burst” state
</figureCaption>
<bodyText confidence="0.973154842105263">
is to find an optimal state sequence q* given the
emotion distribution sequence e.
Since each et is a distribution rather than pos-
itive integer, the emotion generation process can
no longer be modeled by a Poisson distribution.
We choose to model the emotion generation pro-
cess by the Dirichlet distribution. This process is
analogous to the document-level topic generation
in the LDA topic model (Blei et al., 2003).
If community c is in an “emotion stable” state in
time interval t, its emotion distribution et should
be close to the average emotion distribution ea.
The density function is defined as f(et, ea, st =
0) = Dirichlet(α0ea), where st = 0 indicates
that the community is in an “emotion stable” s-
tate and α0 is a positive parameter. To ensure
that et closer to ea will get higher probability,
α0 should satisfy the constraint α0 · min ea &gt; 1.
An example of the probability density function of
f(et, ea, st = 0) in a three dimension emotion s-
pace is shown in Figure 3(a).
If community c is in an “emotion burst” s-
tate in time interval t, the emotion distribution
of c is : 1) significantly different from its av-
erage emotion distribution, or 2) extremely un-
even distributed. For example, assume ea =
[0.25, 0.25, 0.25, 0.25], if community is in burst
in time interval t, its emotion distribution is more
likely to be [0.1, 0.4, 0.1, 0.4] (significantly dif-
ferent from ea) or [0.1, 0.7, 0.1, 0.1] (extremely
anger). The density function is then defined as
f(et, ea, st = 1) = Dirichlet(α1ea). st = 1
indicates that the community is in an “emotion
burst” state and α1 should satisfy the constraint:
α1 · max ea &lt; 1. An example of the probabili-
ty density function of f(et, ea, st = 1) in a three
dimension emotion space is shown in Figure 3(b).
an emotion state sequence q can be defined as:
</bodyText>
<equation confidence="0.829066666666667">
− ln(ft(et, ea, qt)) + b ln(1 − 7r
7r
(4)
</equation>
<bodyText confidence="0.96747852">
where 7r is the probability the community will
change the emotion state in two consecutive time
intervals t and t + 1. b denotes the number of e-
motion state changes in the whole time intervals
[1, T].
Equation 4 is exactly the objective function we
need to optimize. This optimization problem can
be efficiently solved by using a dynamic program-
ming procedure, as summarized in Algorithm 1.
Algorithm 1 mainly consists of two phases: a
forward phase (line 5 - line 10) which calculates
the minimal cost for emotion distribution sub-
sequence and a backward phase to construct the
optimal emotion state sequence (line 11 - line 14).
For convenience, we use ft(s) to denote
ft(et, ea, s). 7rs′s = 7r if s′ ≠ s, otherwise
7rs′s = (1 − 7r). ct(s) denotes the minimal cost of
generating the emotion distribution sub-sequence
{e1,..., et} with qt = s. q′t(s) stores the state of
time interval t − 1 for the most likely state sub-
sequence so far with qt = s.
Algorithm 1 Emotion Burst Extraction
Input: The emotion distribution sequence e =
(e1, e2, ..., eT), the state transition cost 7r and the
parameters α0 and α1
</bodyText>
<listItem confidence="0.9788373125">
1: for each s ∈ {0, 1} do
2: Initialize c1(s) = − ln f1(s)
3: Initialize q′1(s) = 0
4: end for
5: for each t = 2, · · · , T do
6: for each s ∈ {0, 1} do
7: ct(s) = mins′(ct_1(s′) − ln ft(s) −
ln 7rs′s)
q′
8: t(s) = arg mins(ct_1(s′) − ln 7rs′s)
9: end for
10: end for
11: q*(T) = arg minscT(s)
12: for each t = T − 1,···,2 do
13: q*(t) = q′t+1(q*(t + 1))
14: end for
</listItem>
<bodyText confidence="0.835463">
Output: The optimal emotion state sequence q*
</bodyText>
<equation confidence="0.98912025">
T
cost(q|e) =
t=1
)
</equation>
<bodyText confidence="0.816397">
Based on above discussion, the cost function for
</bodyText>
<page confidence="0.989876">
1163
</page>
<tableCaption confidence="0.997773">
Table 2: Basic statistics of data sets
</tableCaption>
<table confidence="0.9884228">
Community #User #Link #Microblog #Event
legal cases 4937 97639 269871 31
football 9928 105483 416631 75
economy 2657 65403 179584 46
singer 3759 79458 478265 53
</table>
<sectionHeader confidence="0.992537" genericHeader="method">
5 Experimental Setup
</sectionHeader>
<subsectionHeader confidence="0.990386">
5.1 Data Set
</subsectionHeader>
<bodyText confidence="0.997251884615385">
We use a large microblog data set crawled from
Sina Weibo, which is the most popular mi-
croblog service in China. This data set contains
212,859,466 Chinese microblog messages posted
by 916,126 users in a period of about 8 month-
s (1/12/2010∼ 20/7/2011). We also crawled the
following network, which resulted in 15,681,296
following relationships for the 916,126 users.
We choose four communities: “legal cases”,
“football”, “economy” and “singer”. To obtain the
members for each topical community, we manu-
ally selected several keywords and input them as
queries to the user search page4. After filtering out
the users whose microblog messages are not col-
lected in our corpora, we extract the sub-network
of the users from the whole following network.
We use a simple but efficient method to extract
microblog messages for each topical community:
1) If a microblog message is posted by the com-
munity members and also contains keywords of
the community, it belongs to the community; 2)
If a microblog message is posted by community
member u and it is reposting, commenting on or
replying to another microblog posted by commu-
nity member v, then it belongs to the community.
The basic statistics of our data sets are shown in
</bodyText>
<tableCaption confidence="0.550125">
Table 2.
</tableCaption>
<subsectionHeader confidence="0.999017">
5.2 Ground Truth Generation
</subsectionHeader>
<bodyText confidence="0.999958555555556">
Algorithm 1 generates a list of emotion bursts
for each community. Since our goal is to identi-
fy community-related events, we need to evaluate
how well the generated emotion bursts correspond
to the ground truth real-world events. To gener-
ate the ground truth for evaluation, we utilize the
news website Sina News5. Two PhD students are
invited to manually generate a list of real events
for each community by referring to the annual top-
</bodyText>
<footnote confidence="0.9996095">
4http://s.weibo.com/user/&amp;tag=keyword
5http://news.sina.com.cn
</footnote>
<bodyText confidence="0.999905428571429">
ic summary page6 of Sina News. The annotation
agreement is higher than 90%. Each event is al-
so associated with its occurred date. The number
of events for each community is shown in the last
column of Table 2. For each community, the even-
t list is then used to evaluate the performance of
different event detection models.
</bodyText>
<subsectionHeader confidence="0.992995">
5.3 Evaluation Metric
</subsectionHeader>
<bodyText confidence="0.999908166666667">
We use precision, recall and F-measure as evalu-
ation metric. For each community, we compare
the event list Ec and the generated burst list Bc to
compute the above metric. Specifically, the preci-
sion, recall and F-measure for a community c are
defined as follows:
</bodyText>
<equation confidence="0.999681571428571">
P = E�=1 Ek=1 I(Ejc ∈ Bck) (5)
|Bc|
R = E�£ 1 Ek= 1 I(Ec ∈ Bck) (6)
|Ec|
2 × P × R
F = (7)
P + R
</equation>
<bodyText confidence="0.999898333333333">
where Ecj is the occurring time of the j-th event
in community c, Bck is the k-th identified burst for
community c. I(.) is the indicator function (which
equals 1 if its argument is true and 0 otherwise).
The final precision, recall and F-measure are av-
eraged over different communities.
</bodyText>
<subsectionHeader confidence="0.749792">
5.4 Compared Methods
</subsectionHeader>
<bodyText confidence="0.999307">
We now introduce four methods used for compar-
ison as follows:
EmoPeakFind: The method proposed in (Ak-
cora et al., 2010), which aims at discovering
breakpoints from public emotion. They use the
following simple rule to find breakpoints from e-
motion sequences:
</bodyText>
<equation confidence="0.99552">
Sim(et−1, et) &lt; Sim(et−2, et−1) (8)
Sim(et−1, et) &lt; Sim(et, et+1) (9)
</equation>
<bodyText confidence="0.9998885">
where Sim is a similarity function. We use the
cosine similarity function in our evaluation.
TopKEmoVar: The method used in (Zhao et al.,
2012a). They first derive a sequence of relative
variation V n for each single emotion sequence en.
Then they define a sequence of emotion variation
as (E4n=1 |Vtn |). This sequence is sorted in de-
scending order and the top-k t is selected as burst
</bodyText>
<footnote confidence="0.985203">
6http://news.sina.com.cn/zt/
</footnote>
<page confidence="0.997375">
1164
</page>
<tableCaption confidence="0.91197525">
Table 5: Performance of different weighting
schemes in terms of F-measure
Table 3: Event detection performance of different
methods
</tableCaption>
<table confidence="0.999086333333333">
Method Precision Recall F-measure
EmoPeakFind 0.313 0.625 0.417
TopKEmoVari 0.423 0.423 0.423
KLB 0.575 0.702 0.632
MBurst 0.534 0.497 0.515
Our Method 0.654 0.715 0.683
</table>
<bodyText confidence="0.99462375">
state points, where k is set to be the size of the
event list for each community.
KLB: The method proposed in (Kleinberg,
2003). Note that KLB can only deal with a single
sequence en = (en1, ..., en� , ...en�) for emotion type
n. We first apply KLB to find the optimal state se-
quences for each emotion type. Then we perform
an OR function to merge the N state sequences to
a global emotion state sequence.
MBurst: The method proposed in (Zhao et al.,
2012b) for multi-stream burst detection. MBurst
is evaluated on three activity streams in (Zhao et
al., 2012b). Here we apply MBurst to the N emo-
tion streams. Then we perform an OR function to
merge the N state sequences to a global emotion
state sequence.
</bodyText>
<sectionHeader confidence="0.998663" genericHeader="evaluation">
6 Experimental Results
</sectionHeader>
<subsectionHeader confidence="0.999714">
6.1 Performance Comparison Results
</subsectionHeader>
<bodyText confidence="0.982917771929825">
In this experiment, we compare our method with
different baseline methods as introduced in Sec-
tion 5.4. We use Equation (3) to aggregate com-
munity emotion for all the compared methods.
The parameter a0 and a1 are empirically set to be
mi � ea and m ea , 0.5 respectively. The experimen-
tal results are shown in Table 3.
Table 3 shows that EmoPeakFind and TopKE-
moVari are less effective than other methods. The
simple rule used in EmoPeakFind produced many
noisy bursts, leading to low precision. TopKE-
moVari only considers the relative variation of t-
wo consecutive time intervals. The choose of
k is also nontrivial since it is hard to know the
number of events before the events are identi-
fied. Note that EmoPeakFind and TopKEmoVari
are both rule-based methods, while KLB, MBurst
and Our Method are state machine based method-
s. This demonstrates that for community-related
emotion burst detection, it is more appropriate to
use a state machine based model.
It looks surprising that MBurst performs worse
than KLB, since MBurst is specifically designed
Community Weighting schema
equal HITS-based
legal cases 0.517 0.590
football 0.674 0.765
economy 0.642 0.712
singer 0.589 0.665
avg 0.605 0.683
for multiple streams. However, MBurst is based
on the assumption that the states of multiple
streams in the same time interval tend to be the
same (i.e., there is positive correlation between t-
wo different streams). This assumption no longer
holds in the context of different emotion stream-
s. For example, if a negative event occurs in the
community, while sad emotion is likely to be in a
burst state, happy emotion is not likely to be in a
burst state.
We can see from Table 3 that our method out-
performs the four baselines. The main reason is
that our burst detection method is based on the se-
quence of community emotion distribution. Mod-
eling community emotion as a distribution is more
suitable than modeling several different emotion
types.
We further show some example events detected
by our model in Table 4. Since the event keyword-
s are manually translated from Chinese, one key-
word may include more than one English word-
s. We can see that community emotion can help
to detect emotionally significant events for differ-
ent communities. For example, the “legal cases”
community is in a strong anger emotional state on
December 25, 2010, which indicates an important
event “Qian Yunhui’s case”.
</bodyText>
<subsectionHeader confidence="0.999974">
6.2 Effect of Emotion Aggregation Functions
</subsectionHeader>
<bodyText confidence="0.999967">
In this experiment, we show the importance of cor-
rectly aggregation community level emotion for
community-related event detection. We compare
the two aggregation approaches introduced in sec-
tion 4.2. The first approach assigns equal weight to
each community users, while the second approach
assigns weights to users based on their authorities
in the community.
The performance in terms of F-measure is
shown in Table 5. It is obvious that, for all commu-
</bodyText>
<page confidence="0.997466">
1165
</page>
<tableCaption confidence="0.998214">
Table 4: Examples of events and the corresponding community emotions for two communities. The four
emotion types (happy, anger, sad and fear) are mapped to green, red, blue and yellow color, respectively.
</tableCaption>
<table confidence="0.9980611">
Community Date Emotion Event keywords
legal cases 25/12/2010 Qian Yunhui, village head, Yueqing, run over, Zhejiang
22/4/2011 Yao Jiaxin, death penalty, first instance, Xi’an,
intentional killing
9/5/2011 Xia Junfeng, final judgment, death penalty, pedlar, Shenyang
football 2/12/2010 Qatar, 2022, world cup bid, win, FIFA
OK
14/2/2011 �� �
Ronaldo, retire, legend, football, Brazil
29/5/2011 Barcelona, 2011, Champions League final, win, UEFA ��
</table>
<bodyText confidence="0.994165333333333">
nities, HITS-based weighting approach perform-
s better than equal weighting approach. Thus we
can conclude that user authority is important when
aggregating community emotion.
We further perform an empirically analysis of
the events that successfully identified by HITS-
based approach but failed by equal weighting ap-
proach. By manually analyzing the microblog
messages of the corresponding time intervals, we
found that most of the errors of equal weighting
approach were caused by emotion spam. Users of
low authority post many microblog messages with
extreme emotion to claim the attention of the com-
munity. Since there is no significant community-
related events at that time interval, we do not ob-
serve emotional changes of the high authority us-
es. In the equal weighting method, the existence
of emotion spam lead to wrong result of com-
munity emotion. Since the weights of users who
post emotion spam are small in the HITS-based
approach, they have little effect on the communi-
ty emotion. This is the main reason why HITS-
based weighting method is more effective than e-
qual weighting method.
</bodyText>
<subsectionHeader confidence="0.996698">
6.3 Parameter Sensitivity
</subsectionHeader>
<bodyText confidence="0.912650142857143">
In this experiment, we test the sensitivity of
our model by different choices of the param-
eters α0 and α1. α0 mina, ea is set to be
[2, 3, 4, 5, 6, 7, 8] and α1 max,,, ea is set to be
[0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8]. The event detec-
tion results of different parameter settings are
shown in Figure 4.
It can be seen from Figure 4 that: 1) The per-
formance is relatively good in a particular range
of the parameters. When 2
minn ena ≤ α0 ≤ 7
minn ena
and 0.3 a , the F-measure is
maxn ena ≤ α1 ≤ 0.7
</bodyText>
<footnote confidence="0.475712">
maxn en
</footnote>
<figureCaption confidence="0.912069">
Figure 4: F-measure of our method for event de-
tection in different parameter settings
</figureCaption>
<bodyText confidence="0.999903285714286">
consistently larger than 0.55. 2) In general, the
performance is more sensitive to α1 than to α0.
Note that α1 controls the generation process of
the emotion distribution when the community is in
the “emotion burst” state, thus it is relatively more
important to tune α1 than α0. The experimental
results demonstrates that when0.3 maxn en a ≤ α1 ≤
Microblog has become a popular and convenien-
t platform for people to share information about
social events in real time. In this paper, we focus
on the problem of community-related event detec-
tion by community emotions. We propose a novel
method to compute community-level emotion by
considering the user authority in the community
network. Then we present an effective emotion
burst detection algorithm for the community emo-
tion distribution sequence.
We evaluate our approach on real microblog
data sets. Experimental results demonstrate that
it is important to take into account the user au-
thority when aggregating community emotion for
</bodyText>
<figure confidence="0.997111631578947">
Į1 minea
0.2
0.7
8
F-measure
0.6
0.5
0.4
0.3
6
Į0minea
4
0.8
0.6
2
0.4
0.7
maxn ena , the performance can be relatively good.
7 Conclusion
</figure>
<page confidence="0.988825">
1166
</page>
<bodyText confidence="0.999923666666667">
community-related event detection. Our emotion
burst detection algorithm also achieves better per-
formance than several baseline methods.
</bodyText>
<sectionHeader confidence="0.995491" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9998386875">
The authors would like to thank the anony-
mous reviewers for their insightful comments
and suggestions. This research is support-
ed by the National High Technology Research
and Development Program of China (Grant No.
2012AA011002), Natural Science Foundation of
China (Grant No. 61300003). This research
is partially supported by General Research Fund
of Hong Kong (417112), Shenzhen Fundamental
Research Program (JCYJ20130401172046450)
and Shenzhen International Cooperation Funding
GJHZ20120613110641217. This work is partial-
ly supported by Huawei Noah’s Ark Lab, Hong
Kong. The contact author of this paper, according
to the meaning given to this role by Peking Uni-
versity, is Wei Chen.
</bodyText>
<sectionHeader confidence="0.9991" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999868075">
Apoorv Agarwal, Boyi Xie, Ilia Vovsha, Owen Ram-
bow, and Rebecca Passonneau. 2011. Sentiment
analysis of twitter data. In Proceedings of the Work-
shop on Languages in Social Media, pages 30–38.
Association for Computational Linguistics.
Cuneyt Gurcan Akcora, Murat Ali Bayir, Murat Demir-
bas, and Hakan Ferhatosmanoglu. 2010. Identify-
ing breakpoints in public opinion. In Proceedings of
the First Workshop on Social Media Analytics, pages
62–66. ACM.
Sigal G Bars¨ade and Donald E Gibson. 1998. Group
emotion: A view from top and bottom. Research on
Managing Groups and Teams, 1:81–102.
Hila Becker, Mor Naaman, and Luis Gravano. 2010.
Learning similarity metrics for event identification
in social media. In Proceedings of the third ACM in-
ternational conference on Web search and data min-
ing, pages 291–300. ACM.
Adam Bermingham and Alan F. Smeaton. 2010. Clas-
sifying sentiment in microblogs: is brevity an advan-
tage? In CIKM, pages 1833–1836.
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet allocation. Journal of Ma-
chine Learning Research, 3:993–1022.
Dmitry Davidov, Oren Tsur, and Ari Rappoport. 2010.
Enhanced sentiment learning using twitter hashtags
and smileys. In COLING (Posters), pages 241–249.
Alec Go, Richa Bhayani, and Lei Huang. 2009. Twit-
ter sentiment classification using distant supervision.
CS224N Project Report, Stanford, pages 1–12.
Xia Hu, Jiliang Tang, Huiji Gao, and Huan Liu.
2013. Unsupervised sentiment analysis with emo-
tional signals. In WWW, pages 607–618.
Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and
Tiejun Zhao. 2011. Target-dependent twitter sen-
timent classification. In ACL, pages 151–160.
Jon M Kleinberg. 1999. Authoritative sources in
a hyperlinked environment. Journal of the ACM
(JACM), 46(5):604–632.
Jon Kleinberg. 2003. Bursty and hierarchical structure
in streams. Data Mining and Knowledge Discovery,
7(4):373–397.
Zhenhui Li, Ding Zhou, Yun-Fang Juan, and Jiawei
Han. 2010. Keyword extraction for social snippets.
In Proceedings of the 19th international conference
on World wide web, pages 1143–1144. ACM.
Kun-Lin Liu, Wu-Jun Li, and Minyi Guo. 2012. E-
moticon smoothed language models for twitter sen-
timent analysis. In AAAI.
Bing Liu. 2012. Sentiment analysis and opinion min-
ing. Synthesis Lectures on Human Language Tech-
nologies, 5(1):1–167.
Michael Mathioudakis and Nick Koudas. 2010. Twit-
termonitor: trend detection over the twitter stream.
In Proceedings of the 2010 ACM SIGMOD Inter-
national Conference on Management of data, pages
1155–1158. ACM.
Thin Nguyen, Dinh Q. Phung, Brett Adams, and Svetha
Venkatesh. 2013. Event extraction using behaviors
of sentiment signals and burst structure in social me-
dia. Knowl. Inf. Syst., 37(2):279–304.
Alexander Pak and Patrick Paroubek. 2010. Twitter as
a corpus for sentiment analysis and opinion mining.
In LREC.
Bo Pang and Lillian Lee. 2008. Opinion mining and
sentiment analysis. Foundations and trends in infor-
mation retrieval, 2(1-2):1–135.
Alan Ritter, Oren Etzioni, Sam Clark, et al. 2012.
Open domain event extraction from twitter. In Pro-
ceedings of the 18th ACM SIGKDD international
conference on Knowledge discovery and data min-
ing, pages 1104–1112. ACM.
Takeshi Sakaki, Makoto Okazaki, and Yutaka Matsuo.
2010. Earthquake shakes twitter users: real-time
event detection by social sensors. In WWW, pages
851–860.
Eliot R Smith, Charles R Seger, and Diane M Mackie.
2007. Can emotions be truly group level? evidence
regarding four conceptual criteria. Journal of per-
sonality and social psychology, 93(3):431.
</reference>
<page confidence="0.876222">
1167
</page>
<reference confidence="0.999639055555556">
Michael Speriosu, Nikita Sudan, Sid Upadhyay, and Ja-
son Baldridge. 2011. Twitter polarity classification
with label propagation over lexical links and the fol-
lower graph. In EMNLP, pages 53–63.
Jianshu Weng and Bu-Sung Lee. 2011. Event detec-
tion in twitter. In ICWSM.
Jichang Zhao, Li Dong, Junjie Wu, and Ke Xu. 2012a.
Moodlens: an emoticon-based sentiment analysis
system for chinese tweets. In KDD, pages 1528–
1531.
Wayne Xin Zhao, Baihan Shu, Jing Jiang, Yang Song,
Hongfei Yan, and Xiaoming Li. 2012b. Identifying
event-related bursts via social media activities. In
Proceedings of the 2012 Joint Conference on Empir-
ical Methods in Natural Language Processing and
Computational Natural Language Learning, pages
1466–1477. Association for Computational Linguis-
tics.
</reference>
<page confidence="0.995234">
1168
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.011564">
<title confidence="0.999965">Exploiting Community Emotion for Microblog Event Detection</title>
<author confidence="0.654322">Wei Tengjiao Zhongyu Dongqing</author>
<author confidence="0.654322">Kam-Fai</author>
<affiliation confidence="0.977607666666667">Laboratory of High Confidence Software Technologies, Ministry of Education, of Electronics Engineering and Computer Science, Peking University, Research Institute, The Chinese University of Hong Kong,</affiliation>
<address confidence="0.860283">of Information Science &amp; Technology, University of International Relations, China</address>
<email confidence="0.909378">pekingchenwei@pku.edu.cn</email>
<title confidence="0.582241"></title>
<author confidence="0.9228305">Happy Anger Sad Fear</author>
<phone confidence="0.583579">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31</phone>
<note confidence="0.624459">Day (in March 2011) 0.7 0.6 Emotion Distribution 0.5 0.4 0.3 0.2 0.1 0</note>
<abstract confidence="0.99821815625">has become a major form for information about real-world ������� ������ ����� ������ events. Automatically discovering real- ������� ������ ������ ����� world events from microblog hasattracted ������� ������� ������� ����� the attention of many researchers. However, most of existing work ignore the impor- �������� ������� � tance of emotion information forevent de- �������� ������ tection. We argue that people’s emotional reactions immediately reflect the occurring of real-world events and should be important for event detection. In this study, we focus on the problem of communityrelated event detection by community emotions. To address the problem, we propose a novel framework which include following three key components: miemotion aggregation emoburst We evaluate our approach on real microblog data sets. Experimental results demonstrate the effectiveness of the proposed framework.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Apoorv Agarwal</author>
<author>Boyi Xie</author>
<author>Ilia Vovsha</author>
<author>Owen Rambow</author>
<author>Rebecca Passonneau</author>
</authors>
<title>Sentiment analysis of twitter data.</title>
<date>2011</date>
<booktitle>In Proceedings of the Workshop on Languages in Social Media,</booktitle>
<pages>30--38</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="7326" citStr="Agarwal et al., 2011" startWordPosition="1184" endWordPosition="1187"> section, we review the related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog sentiment analysis work, which aims at di</context>
</contexts>
<marker>Agarwal, Xie, Vovsha, Rambow, Passonneau, 2011</marker>
<rawString>Apoorv Agarwal, Boyi Xie, Ilia Vovsha, Owen Rambow, and Rebecca Passonneau. 2011. Sentiment analysis of twitter data. In Proceedings of the Workshop on Languages in Social Media, pages 30–38. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cuneyt Gurcan Akcora</author>
<author>Murat Ali Bayir</author>
<author>Murat Demirbas</author>
<author>Hakan Ferhatosmanoglu</author>
</authors>
<title>Identifying breakpoints in public opinion.</title>
<date>2010</date>
<booktitle>In Proceedings of the First Workshop on Social Media Analytics,</booktitle>
<pages>62--66</pages>
<publisher>ACM.</publisher>
<contexts>
<context position="3254" citStr="Akcora et al., 2010" startWordPosition="529" endWordPosition="532"> on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disasters. In many applications, discovering events related to a certain group of users or a certain topic is more meaningful. Consider the following questions: “what happened in the football community last week?” and “what are the most significant events in the lawyer community last month?” Secondly, they assign eq</context>
<context position="9214" citStr="Akcora et al., 2010" startWordPosition="1473" endWordPosition="1476"> to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emotion as an emotion vector computed by counting emotion words and then use a rule-based method to identify public breakpoints. Zhao et al. (2012a) use a simple top-k method to detect abnormal events based on sequence of sentiment variance. Our method is also an emotion-based method. However, our approach is different from existing emotion-based methods in the following aspects. Firstly, while existing work aggregates emotion for all users, we focus on emotion for a certain community to discover community-related events. Secondly, existing methods assume th</context>
<context position="23798" citStr="Akcora et al., 2010" startWordPosition="3990" endWordPosition="3994">c. Specifically, the precision, recall and F-measure for a community c are defined as follows: P = E�=1 Ek=1 I(Ejc ∈ Bck) (5) |Bc| R = E�£ 1 Ek= 1 I(Ec ∈ Bck) (6) |Ec| 2 × P × R F = (7) P + R where Ecj is the occurring time of the j-th event in community c, Bck is the k-th identified burst for community c. I(.) is the indicator function (which equals 1 if its argument is true and 0 otherwise). The final precision, recall and F-measure are averaged over different communities. 5.4 Compared Methods We now introduce four methods used for comparison as follows: EmoPeakFind: The method proposed in (Akcora et al., 2010), which aims at discovering breakpoints from public emotion. They use the following simple rule to find breakpoints from emotion sequences: Sim(et−1, et) &lt; Sim(et−2, et−1) (8) Sim(et−1, et) &lt; Sim(et, et+1) (9) where Sim is a similarity function. We use the cosine similarity function in our evaluation. TopKEmoVar: The method used in (Zhao et al., 2012a). They first derive a sequence of relative variation V n for each single emotion sequence en. Then they define a sequence of emotion variation as (E4n=1 |Vtn |). This sequence is sorted in descending order and the top-k t is selected as burst 6ht</context>
</contexts>
<marker>Akcora, Bayir, Demirbas, Ferhatosmanoglu, 2010</marker>
<rawString>Cuneyt Gurcan Akcora, Murat Ali Bayir, Murat Demirbas, and Hakan Ferhatosmanoglu. 2010. Identifying breakpoints in public opinion. In Proceedings of the First Workshop on Social Media Analytics, pages 62–66. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sigal G Bars¨ade</author>
<author>Donald E Gibson</author>
</authors>
<title>Group emotion: A view from top and bottom.</title>
<date>1998</date>
<booktitle>Research on Managing Groups and Teams,</booktitle>
<pages>1--81</pages>
<marker>Bars¨ade, Gibson, 1998</marker>
<rawString>Sigal G Bars¨ade and Donald E Gibson. 1998. Group emotion: A view from top and bottom. Research on Managing Groups and Teams, 1:81–102.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hila Becker</author>
<author>Mor Naaman</author>
<author>Luis Gravano</author>
</authors>
<title>Learning similarity metrics for event identification in social media.</title>
<date>2010</date>
<booktitle>In Proceedings of the third ACM international conference on Web search and data mining,</booktitle>
<pages>291--300</pages>
<publisher>ACM.</publisher>
<contexts>
<context position="2987" citStr="Becker et al., 2010" startWordPosition="484" endWordPosition="487">Table 1. Figure 1: The global emotion dynamics the emotional distribution dynamics of the over��� ��� ��� � 㦟ᇦ䪛↫ �� � � all microblog messages inMarch 2011. The ጠ↫ ���� ���� �� ӁՊѻ↫ �� ��� � sudden change of the public emotion distribuTDWDU ��� ��� �� � �� �� tion on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disasters. In many applications, discovering event</context>
<context position="8675" citStr="Becker et al., 2010" startWordPosition="1392" endWordPosition="1395">n microblog messages for real-world event detection. Our work use sentiment analysis as a tool to perform microblog emotion classification. Then we propose an event detection algorithm based on the sequence of community level emotion distribution. Event Detection in Microblog: Event detection from microblog data has attracted increasing attention recently. We divide existing work into the following two categories: non-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emotion as an emotion vec</context>
</contexts>
<marker>Becker, Naaman, Gravano, 2010</marker>
<rawString>Hila Becker, Mor Naaman, and Luis Gravano. 2010. Learning similarity metrics for event identification in social media. In Proceedings of the third ACM international conference on Web search and data mining, pages 291–300. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Bermingham</author>
<author>Alan F Smeaton</author>
</authors>
<title>Classifying sentiment in microblogs: is brevity an advantage? In</title>
<date>2010</date>
<booktitle>CIKM,</booktitle>
<pages>1833--1836</pages>
<contexts>
<context position="7424" citStr="Bermingham and Smeaton, 2010" startWordPosition="1200" endWordPosition="1203">og, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog sentiment analysis work, which aims at discovering sentiments and emotions for an event or topic given in advance, we are interested in uti</context>
</contexts>
<marker>Bermingham, Smeaton, 2010</marker>
<rawString>Adam Bermingham and Alan F. Smeaton. 2010. Classifying sentiment in microblogs: is brevity an advantage? In CIKM, pages 1833–1836.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David M Blei</author>
<author>Andrew Y Ng</author>
<author>Michael I Jordan</author>
</authors>
<title>Latent dirichlet allocation.</title>
<date>2003</date>
<journal>Journal of Machine Learning Research,</journal>
<pages>3--993</pages>
<contexts>
<context position="17649" citStr="Blei et al., 2003" startWordPosition="2876" endWordPosition="2879">rst Detection Event Extraction et(u) = 1 Nut Nut m=1 1162 (a) “emotion stable” state (b) “emotion burst” state Figure 3: Emotion probability density for “emotion stable” state and “emotion burst” state is to find an optimal state sequence q* given the emotion distribution sequence e. Since each et is a distribution rather than positive integer, the emotion generation process can no longer be modeled by a Poisson distribution. We choose to model the emotion generation process by the Dirichlet distribution. This process is analogous to the document-level topic generation in the LDA topic model (Blei et al., 2003). If community c is in an “emotion stable” state in time interval t, its emotion distribution et should be close to the average emotion distribution ea. The density function is defined as f(et, ea, st = 0) = Dirichlet(α0ea), where st = 0 indicates that the community is in an “emotion stable” state and α0 is a positive parameter. To ensure that et closer to ea will get higher probability, α0 should satisfy the constraint α0 · min ea &gt; 1. An example of the probability density function of f(et, ea, st = 0) in a three dimension emotion space is shown in Figure 3(a). If community c is in an “emotio</context>
</contexts>
<marker>Blei, Ng, Jordan, 2003</marker>
<rawString>David M. Blei, Andrew Y. Ng, and Michael I. Jordan. 2003. Latent dirichlet allocation. Journal of Machine Learning Research, 3:993–1022.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dmitry Davidov</author>
<author>Oren Tsur</author>
<author>Ari Rappoport</author>
</authors>
<title>Enhanced sentiment learning using twitter hashtags and smileys.</title>
<date>2010</date>
<booktitle>In COLING (Posters),</booktitle>
<pages>241--249</pages>
<contexts>
<context position="7269" citStr="Davidov et al., 2010" startWordPosition="1172" endWordPosition="1175">f precision, recall and F-measure. 2 Related Work In this section, we review the related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from exi</context>
<context position="13354" citStr="Davidov et al., 2010" startWordPosition="2153" endWordPosition="2156">0). Since the last component is not the main focus of this work, we only introduce the first three components in detail in the following subsections. 4.1 Microblog Emotion Classification We build an emotion classifier using the multinomial Naive Bayes classifier for each community to classify microblog messages into different emotion classes. Here we are interested in the setting where the microblog messages arrive as stream, thus it is not appropriate to use a constant set of manually labeled messages. To avoid manual annotation cost, we adopt a distant supervision approach (Go et al., 2009; Davidov et al., 2010; Hu 1161 Figure 2: Overview of our community-related event detection framework Table 1: List of emoticons Happy(26) good laugh love smile cute Anger (19) anger hate curse despise crazy Sad(13) sad disappoint cry unhappy unwell Fear(11) fear surprise shame doubt fright et al., 2013) to acquire labeled microblog messages automatically by using the emoticons. We first select a set of emoticons which are most frequently used to express emotion in microblog. Then we manually map each emoticon into four emotion classes (26 for happy, 19 for anger, 13 for sad and 11 for fear). We only show the top f</context>
</contexts>
<marker>Davidov, Tsur, Rappoport, 2010</marker>
<rawString>Dmitry Davidov, Oren Tsur, and Ari Rappoport. 2010. Enhanced sentiment learning using twitter hashtags and smileys. In COLING (Posters), pages 241–249.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alec Go</author>
<author>Richa Bhayani</author>
<author>Lei Huang</author>
</authors>
<title>Twitter sentiment classification using distant supervision. CS224N Project Report,</title>
<date>2009</date>
<pages>1--12</pages>
<location>Stanford,</location>
<contexts>
<context position="7304" citStr="Go et al., 2009" startWordPosition="1180" endWordPosition="1183">ated Work In this section, we review the related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog sentiment analysis </context>
<context position="13332" citStr="Go et al., 2009" startWordPosition="2149" endWordPosition="2152">2; Li et al., 2010). Since the last component is not the main focus of this work, we only introduce the first three components in detail in the following subsections. 4.1 Microblog Emotion Classification We build an emotion classifier using the multinomial Naive Bayes classifier for each community to classify microblog messages into different emotion classes. Here we are interested in the setting where the microblog messages arrive as stream, thus it is not appropriate to use a constant set of manually labeled messages. To avoid manual annotation cost, we adopt a distant supervision approach (Go et al., 2009; Davidov et al., 2010; Hu 1161 Figure 2: Overview of our community-related event detection framework Table 1: List of emoticons Happy(26) good laugh love smile cute Anger (19) anger hate curse despise crazy Sad(13) sad disappoint cry unhappy unwell Fear(11) fear surprise shame doubt fright et al., 2013) to acquire labeled microblog messages automatically by using the emoticons. We first select a set of emoticons which are most frequently used to express emotion in microblog. Then we manually map each emoticon into four emotion classes (26 for happy, 19 for anger, 13 for sad and 11 for fear). </context>
</contexts>
<marker>Go, Bhayani, Huang, 2009</marker>
<rawString>Alec Go, Richa Bhayani, and Lei Huang. 2009. Twitter sentiment classification using distant supervision. CS224N Project Report, Stanford, pages 1–12.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xia Hu</author>
<author>Jiliang Tang</author>
<author>Huiji Gao</author>
<author>Huan Liu</author>
</authors>
<title>Unsupervised sentiment analysis with emotional signals.</title>
<date>2013</date>
<booktitle>In WWW,</booktitle>
<pages>607--618</pages>
<marker>Hu, Tang, Gao, Liu, 2013</marker>
<rawString>Xia Hu, Jiliang Tang, Huiji Gao, and Huan Liu. 2013. Unsupervised sentiment analysis with emotional signals. In WWW, pages 607–618.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Long Jiang</author>
<author>Mo Yu</author>
<author>Ming Zhou</author>
<author>Xiaohua Liu</author>
<author>Tiejun Zhao</author>
</authors>
<title>Target-dependent twitter sentiment classification.</title>
<date>2011</date>
<booktitle>In ACL,</booktitle>
<pages>151--160</pages>
<contexts>
<context position="7370" citStr="Jiang et al., 2011" startWordPosition="1192" endWordPosition="1195">ent analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog sentiment analysis work, which aims at discovering sentiments and emotions for an eve</context>
</contexts>
<marker>Jiang, Yu, Zhou, Liu, Zhao, 2011</marker>
<rawString>Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and Tiejun Zhao. 2011. Target-dependent twitter sentiment classification. In ACL, pages 151–160.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jon M Kleinberg</author>
</authors>
<title>Authoritative sources in a hyperlinked environment.</title>
<date>1999</date>
<journal>Journal of the ACM (JACM),</journal>
<volume>46</volume>
<issue>5</issue>
<contexts>
<context position="15752" citStr="Kleinberg, 1999" startWordPosition="2563" endWordPosition="2564">he emotion of different community users are with equal importance. This is implemented by employing an average aggregation function on the individual emotion distribution et(u): 1 � et(c) = Nc u∈c et(u) (2) where Nc is the number of users in community c. Intuitively, the emotion of user with higher authority in community should be more important in determining community emotion. Thus we estimate community emotion by taking into account user’s emotional authority, which is based on the assumption that different users in a community have different emotional authorities. We employ HITS algorithm(Kleinberg, 1999) to compute the user authority auth(u) based on the user network {V, E} of the community. Then auth(u) is used to represent the emotional authority of user u. This authority-based community emotion aggregation approach can also reduce the effect of spam users, since they usually have low authorities in the community network. For simplicity and computation efficiency, we assume that auth(u) is time independent, which means that we only need to run the HITS algorithm once for each community. Given the user emotion distributions and the user emotional authorities, the emotion distribution for a c</context>
</contexts>
<marker>Kleinberg, 1999</marker>
<rawString>Jon M Kleinberg. 1999. Authoritative sources in a hyperlinked environment. Journal of the ACM (JACM), 46(5):604–632.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jon Kleinberg</author>
</authors>
<title>Bursty and hierarchical structure in streams.</title>
<date>2003</date>
<journal>Data Mining and Knowledge Discovery,</journal>
<volume>7</volume>
<issue>4</issue>
<contexts>
<context position="9091" citStr="Kleinberg, 2003" startWordPosition="1455" endWordPosition="1456">on-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emotion as an emotion vector computed by counting emotion words and then use a rule-based method to identify public breakpoints. Zhao et al. (2012a) use a simple top-k method to detect abnormal events based on sequence of sentiment variance. Our method is also an emotion-based method. However, our approach is different from existing emotion-based methods in the following aspects. Firstly, while existing work aggregates emotion for all us</context>
<context position="16610" citStr="Kleinberg, 2003" startWordPosition="2705" endWordPosition="2706">ect of spam users, since they usually have low authorities in the community network. For simplicity and computation efficiency, we assume that auth(u) is time independent, which means that we only need to run the HITS algorithm once for each community. Given the user emotion distributions and the user emotional authorities, the emotion distribution for a community c in time interval t can be measured as: 1 � et(c) = Act u∈c auth(u)et(u) (3) where Act = Eu∈ct auth(u) is the normalization term. 4.3 Community Emotion Burst Detection We formulate our problem into the binary state model framework (Kleinberg, 2003). For a given community c, there are T time intervals in total, with community emotion distribution sequence e = (e1, e2, ..., eT) and state sequence q = (q1, q2,..., qT). Each qt can be one of the following two states: qt = 0 (“emotion stable” state) and qt = 1 (“emotion burst” state). Our objective Community Network Microblog Streams Community Emotion Aggregation Microblog Emotion Classification Community Emotion Burst Detection Event Extraction et(u) = 1 Nut Nut m=1 1162 (a) “emotion stable” state (b) “emotion burst” state Figure 3: Emotion probability density for “emotion stable” state and</context>
<context position="24858" citStr="Kleinberg, 2003" startWordPosition="4164" endWordPosition="4165">en. Then they define a sequence of emotion variation as (E4n=1 |Vtn |). This sequence is sorted in descending order and the top-k t is selected as burst 6http://news.sina.com.cn/zt/ 1164 Table 5: Performance of different weighting schemes in terms of F-measure Table 3: Event detection performance of different methods Method Precision Recall F-measure EmoPeakFind 0.313 0.625 0.417 TopKEmoVari 0.423 0.423 0.423 KLB 0.575 0.702 0.632 MBurst 0.534 0.497 0.515 Our Method 0.654 0.715 0.683 state points, where k is set to be the size of the event list for each community. KLB: The method proposed in (Kleinberg, 2003). Note that KLB can only deal with a single sequence en = (en1, ..., en� , ...en�) for emotion type n. We first apply KLB to find the optimal state sequences for each emotion type. Then we perform an OR function to merge the N state sequences to a global emotion state sequence. MBurst: The method proposed in (Zhao et al., 2012b) for multi-stream burst detection. MBurst is evaluated on three activity streams in (Zhao et al., 2012b). Here we apply MBurst to the N emotion streams. Then we perform an OR function to merge the N state sequences to a global emotion state sequence. 6 Experimental Resu</context>
</contexts>
<marker>Kleinberg, 2003</marker>
<rawString>Jon Kleinberg. 2003. Bursty and hierarchical structure in streams. Data Mining and Knowledge Discovery, 7(4):373–397.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Zhenhui Li</author>
<author>Ding Zhou</author>
<author>Yun-Fang Juan</author>
<author>Jiawei Han</author>
</authors>
<title>Keyword extraction for social snippets.</title>
<date>2010</date>
<booktitle>In Proceedings of the 19th international conference on World wide web,</booktitle>
<pages>1143--1144</pages>
<publisher>ACM.</publisher>
<contexts>
<context position="12736" citStr="Li et al., 2010" startWordPosition="2050" endWordPosition="2053">s we propose a novel weighting approach based on the user’s authority. 3) Community emotion burst detection: Given the community emotion, we propose an emotion burst detection algorithm to detect community emotion bursts. 4) Event extraction: The function of this component is to extract event keywords for each community emotion burst. We count the document frequency (DF) of each term contained in the microblog messages in the burst period. Then the top-5 DF terms are used to describe the event occurring during the burst period, although there exist alternative techniques (Ritter et al., 2012; Li et al., 2010). Since the last component is not the main focus of this work, we only introduce the first three components in detail in the following subsections. 4.1 Microblog Emotion Classification We build an emotion classifier using the multinomial Naive Bayes classifier for each community to classify microblog messages into different emotion classes. Here we are interested in the setting where the microblog messages arrive as stream, thus it is not appropriate to use a constant set of manually labeled messages. To avoid manual annotation cost, we adopt a distant supervision approach (Go et al., 2009; Da</context>
</contexts>
<marker>Li, Zhou, Juan, Han, 2010</marker>
<rawString>Zhenhui Li, Ding Zhou, Yun-Fang Juan, and Jiawei Han. 2010. Keyword extraction for social snippets. In Proceedings of the 19th international conference on World wide web, pages 1143–1144. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kun-Lin Liu</author>
<author>Wu-Jun Li</author>
<author>Minyi Guo</author>
</authors>
<title>Emoticon smoothed language models for twitter sentiment analysis.</title>
<date>2012</date>
<booktitle>In AAAI.</booktitle>
<contexts>
<context position="7287" citStr="Liu et al., 2012" startWordPosition="1176" endWordPosition="1179">d F-measure. 2 Related Work In this section, we review the related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog se</context>
</contexts>
<marker>Liu, Li, Guo, 2012</marker>
<rawString>Kun-Lin Liu, Wu-Jun Li, and Minyi Guo. 2012. Emoticon smoothed language models for twitter sentiment analysis. In AAAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bing Liu</author>
</authors>
<title>Sentiment analysis and opinion mining.</title>
<date>2012</date>
<journal>Synthesis Lectures on Human Language Technologies,</journal>
<volume>5</volume>
<issue>1</issue>
<contexts>
<context position="6896" citStr="Liu, 2012" startWordPosition="1113" endWordPosition="1114">a sets by using real-world event list for each community. Experimental results demonstrate that the community emotion is an effective signal for community-related event detection. In comparison with several baseline methods, our emotion burst detection algorithm also improves 3http://en.wikipedia.org/wiki/Group emotion the event detection performance in terms of precision, recall and F-measure. 2 Related Work In this section, we review the related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtaine</context>
</contexts>
<marker>Liu, 2012</marker>
<rawString>Bing Liu. 2012. Sentiment analysis and opinion mining. Synthesis Lectures on Human Language Technologies, 5(1):1–167.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Mathioudakis</author>
<author>Nick Koudas</author>
</authors>
<title>Twittermonitor: trend detection over the twitter stream.</title>
<date>2010</date>
<booktitle>In Proceedings of the 2010 ACM SIGMOD International Conference on Management of data,</booktitle>
<pages>1155--1158</pages>
<publisher>ACM.</publisher>
<contexts>
<context position="8707" citStr="Mathioudakis and Koudas, 2010" startWordPosition="1396" endWordPosition="1399">for real-world event detection. Our work use sentiment analysis as a tool to perform microblog emotion classification. Then we propose an event detection algorithm based on the sequence of community level emotion distribution. Event Detection in Microblog: Event detection from microblog data has attracted increasing attention recently. We divide existing work into the following two categories: non-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emotion as an emotion vector computed by counting emotion</context>
</contexts>
<marker>Mathioudakis, Koudas, 2010</marker>
<rawString>Michael Mathioudakis and Nick Koudas. 2010. Twittermonitor: trend detection over the twitter stream. In Proceedings of the 2010 ACM SIGMOD International Conference on Management of data, pages 1155–1158. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thin Nguyen</author>
<author>Dinh Q Phung</author>
<author>Brett Adams</author>
<author>Svetha Venkatesh</author>
</authors>
<title>Event extraction using behaviors of sentiment signals and burst structure in social media.</title>
<date>2013</date>
<journal>Knowl. Inf. Syst.,</journal>
<volume>37</volume>
<issue>2</issue>
<contexts>
<context position="3232" citStr="Nguyen et al., 2013" startWordPosition="525" endWordPosition="528">� ��� �� � �� �� tion on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disasters. In many applications, discovering events related to a certain group of users or a certain topic is more meaningful. Consider the following questions: “what happened in the football community last week?” and “what are the most significant events in the lawyer community last month?” Se</context>
</contexts>
<marker>Nguyen, Phung, Adams, Venkatesh, 2013</marker>
<rawString>Thin Nguyen, Dinh Q. Phung, Brett Adams, and Svetha Venkatesh. 2013. Event extraction using behaviors of sentiment signals and burst structure in social media. Knowl. Inf. Syst., 37(2):279–304.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander Pak</author>
<author>Patrick Paroubek</author>
</authors>
<title>Twitter as a corpus for sentiment analysis and opinion mining.</title>
<date>2010</date>
<booktitle>In LREC.</booktitle>
<contexts>
<context position="7350" citStr="Pak and Paroubek, 2010" startWordPosition="1188" endWordPosition="1191">e related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog sentiment analysis work, which aims at discovering sentiments and</context>
</contexts>
<marker>Pak, Paroubek, 2010</marker>
<rawString>Alexander Pak and Patrick Paroubek. 2010. Twitter as a corpus for sentiment analysis and opinion mining. In LREC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Lillian Lee</author>
</authors>
<title>Opinion mining and sentiment analysis. Foundations and trends in information retrieval,</title>
<date>2008</date>
<pages>2--1</pages>
<contexts>
<context position="6884" citStr="Pang and Lee, 2008" startWordPosition="1109" endWordPosition="1112">-scale microblog data sets by using real-world event list for each community. Experimental results demonstrate that the community emotion is an effective signal for community-related event detection. In comparison with several baseline methods, our emotion burst detection algorithm also improves 3http://en.wikipedia.org/wiki/Group emotion the event detection performance in terms of precision, recall and F-measure. 2 Related Work In this section, we review the related work on sentiment analysis and event detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usu</context>
</contexts>
<marker>Pang, Lee, 2008</marker>
<rawString>Bo Pang and Lillian Lee. 2008. Opinion mining and sentiment analysis. Foundations and trends in information retrieval, 2(1-2):1–135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan Ritter</author>
<author>Oren Etzioni</author>
<author>Sam Clark</author>
</authors>
<title>Open domain event extraction from twitter.</title>
<date>2012</date>
<booktitle>In Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining,</booktitle>
<pages>1104--1112</pages>
<publisher>ACM.</publisher>
<contexts>
<context position="12718" citStr="Ritter et al., 2012" startWordPosition="2046" endWordPosition="2049">ommunity emotion. Thus we propose a novel weighting approach based on the user’s authority. 3) Community emotion burst detection: Given the community emotion, we propose an emotion burst detection algorithm to detect community emotion bursts. 4) Event extraction: The function of this component is to extract event keywords for each community emotion burst. We count the document frequency (DF) of each term contained in the microblog messages in the burst period. Then the top-5 DF terms are used to describe the event occurring during the burst period, although there exist alternative techniques (Ritter et al., 2012; Li et al., 2010). Since the last component is not the main focus of this work, we only introduce the first three components in detail in the following subsections. 4.1 Microblog Emotion Classification We build an emotion classifier using the multinomial Naive Bayes classifier for each community to classify microblog messages into different emotion classes. Here we are interested in the setting where the microblog messages arrive as stream, thus it is not appropriate to use a constant set of manually labeled messages. To avoid manual annotation cost, we adopt a distant supervision approach (G</context>
</contexts>
<marker>Ritter, Etzioni, Clark, 2012</marker>
<rawString>Alan Ritter, Oren Etzioni, Sam Clark, et al. 2012. Open domain event extraction from twitter. In Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 1104–1112. ACM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Takeshi Sakaki</author>
<author>Makoto Okazaki</author>
<author>Yutaka Matsuo</author>
</authors>
<title>Earthquake shakes twitter users: real-time event detection by social sensors.</title>
<date>2010</date>
<booktitle>In WWW,</booktitle>
<pages>851--860</pages>
<contexts>
<context position="2965" citStr="Sakaki et al., 2010" startWordPosition="480" endWordPosition="483">emotion, as shown in Table 1. Figure 1: The global emotion dynamics the emotional distribution dynamics of the over��� ��� ��� � 㦟ᇦ䪛↫ �� � � all microblog messages inMarch 2011. The ጠ↫ ���� ���� �� ӁՊѻ↫ �� ��� � sudden change of the public emotion distribuTDWDU ��� ��� �� � �� �� tion on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disasters. In many applicati</context>
<context position="8654" citStr="Sakaki et al., 2010" startWordPosition="1388" endWordPosition="1391">emotion information in microblog messages for real-world event detection. Our work use sentiment analysis as a tool to perform microblog emotion classification. Then we propose an event detection algorithm based on the sequence of community level emotion distribution. Event Detection in Microblog: Event detection from microblog data has attracted increasing attention recently. We divide existing work into the following two categories: non-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emot</context>
</contexts>
<marker>Sakaki, Okazaki, Matsuo, 2010</marker>
<rawString>Takeshi Sakaki, Makoto Okazaki, and Yutaka Matsuo. 2010. Earthquake shakes twitter users: real-time event detection by social sensors. In WWW, pages 851–860.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eliot R Smith</author>
<author>Charles R Seger</author>
<author>Diane M Mackie</author>
</authors>
<title>Can emotions be truly group level? evidence regarding four conceptual criteria. Journal of personality and social psychology,</title>
<date>2007</date>
<pages>93--3</pages>
<contexts>
<context position="4790" citStr="Smith et al., 2007" startWordPosition="780" endWordPosition="783">atar. c�2014 Association for Computational Linguistics in the community. Thirdly, there is a lack of quantitative evaluation using real-world events in existing work. For example, there is only case study in (Zhao et al., 2012a) and (Akcora et al., 2010). In this study, we focus on a new task of detecting community-related events via community emotion. Our intuition is inspired from the social psychology theory of group emotion. In social psychology, group emotion refers to the moods, emotions and dispositional affects of a group of people 3. It can arise as a result of group-relevant events (Smith et al., 2007). For example, people will feel happy when their favorite football team wins a game and feel sad when their team loses a game. Thus we can use the community emotion as signals to detect community-related events. To achieve good performance of this new task, the following two factors must be considered: 1) how to measure the community emotion based on microblog message or user emotion and 2) how to perform event detection based on the sequence of community emotion. To measure community emotion, we argue that in a given community, different users have different emotional authorities. The emotion</context>
</contexts>
<marker>Smith, Seger, Mackie, 2007</marker>
<rawString>Eliot R Smith, Charles R Seger, and Diane M Mackie. 2007. Can emotions be truly group level? evidence regarding four conceptual criteria. Journal of personality and social psychology, 93(3):431.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Speriosu</author>
<author>Nikita Sudan</author>
<author>Sid Upadhyay</author>
<author>Jason Baldridge</author>
</authors>
<title>Twitter polarity classification with label propagation over lexical links and the follower graph.</title>
<date>2011</date>
<booktitle>In EMNLP,</booktitle>
<pages>53--63</pages>
<contexts>
<context position="7393" citStr="Speriosu et al., 2011" startWordPosition="1196" endWordPosition="1199">nt detection in microblog, respectively. Sentiment Analysis in Microblog: Sentiment analysis (Pang and Lee, 2008; Liu, 2012) is mainly about analyzing people’s opinions, sentiments and emotions towards a given event, topic, product, etc. Microblog platforms like Twitter and Weibo, provide people a convenient way to post their emotional reactions towards social events in almost real time. This leads to increasing number of interests on sentiment analysis in microblog data (Davidov et al., 2010; Liu et al., 2012; Go et al., 2009; Agarwal et al., 2011; Pak and Paroubek, 2010; Jiang et al., 2011; Speriosu et al., 2011; Bermingham and Smeaton, 2010). The training data for microblog sentiment analysis are usually obtained in an automatic manner by utilizing emoticons, hashtags and smileys. Davidov et al. (2010) propose an approach to automatically obtain labeled training examples by exploiting hashtags and smileys. Liu et al. (2012) proposed an emoticon smoothed method to integrate both manually labeled data and noisy labeled data for Twitter sentiment classification. Different from existing microblog sentiment analysis work, which aims at discovering sentiments and emotions for an event or topic given in ad</context>
</contexts>
<marker>Speriosu, Sudan, Upadhyay, Baldridge, 2011</marker>
<rawString>Michael Speriosu, Nikita Sudan, Sid Upadhyay, and Jason Baldridge. 2011. Twitter polarity classification with label propagation over lexical links and the follower graph. In EMNLP, pages 53–63.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jianshu Weng</author>
<author>Bu-Sung Lee</author>
</authors>
<title>Event detection in twitter.</title>
<date>2011</date>
<booktitle>In ICWSM.</booktitle>
<contexts>
<context position="2944" citStr="Weng and Lee, 2011" startWordPosition="476" endWordPosition="479"> to indicate user’s emotion, as shown in Table 1. Figure 1: The global emotion dynamics the emotional distribution dynamics of the over��� ��� ��� � 㦟ᇦ䪛↫ �� � � all microblog messages inMarch 2011. The ጠ↫ ���� ���� �� ӁՊѻ↫ �� ��� � sudden change of the public emotion distribuTDWDU ��� ��� �� � �� �� tion on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disaste</context>
<context position="8633" citStr="Weng and Lee, 2011" startWordPosition="1384" endWordPosition="1387">ed in utilizing the emotion information in microblog messages for real-world event detection. Our work use sentiment analysis as a tool to perform microblog emotion classification. Then we propose an event detection algorithm based on the sequence of community level emotion distribution. Event Detection in Microblog: Event detection from microblog data has attracted increasing attention recently. We divide existing work into the following two categories: non-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (20</context>
</contexts>
<marker>Weng, Lee, 2011</marker>
<rawString>Jianshu Weng and Bu-Sung Lee. 2011. Event detection in twitter. In ICWSM.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jichang Zhao</author>
<author>Li Dong</author>
<author>Junjie Wu</author>
<author>Ke Xu</author>
</authors>
<title>Moodlens: an emoticon-based sentiment analysis system for chinese tweets. In</title>
<date>2012</date>
<booktitle>KDD,</booktitle>
<pages>1528--1531</pages>
<contexts>
<context position="3210" citStr="Zhao et al., 2012" startWordPosition="521" endWordPosition="524">ion distribuTDWDU ��� ��� �� � �� �� tion on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disasters. In many applications, discovering events related to a certain group of users or a certain topic is more meaningful. Consider the following questions: “what happened in the football community last week?” and “what are the most significant events in the lawyer com</context>
<context position="8853" citStr="Zhao et al. (2012" startWordPosition="1418" endWordPosition="1421">ithm based on the sequence of community level emotion distribution. Event Detection in Microblog: Event detection from microblog data has attracted increasing attention recently. We divide existing work into the following two categories: non-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emotion as an emotion vector computed by counting emotion words and then use a rule-based method to identify public breakpoints. Zhao et al. (2012a) use a simple top-k method to detect abnormal events ba</context>
<context position="24150" citStr="Zhao et al., 2012" startWordPosition="4048" endWordPosition="4051">if its argument is true and 0 otherwise). The final precision, recall and F-measure are averaged over different communities. 5.4 Compared Methods We now introduce four methods used for comparison as follows: EmoPeakFind: The method proposed in (Akcora et al., 2010), which aims at discovering breakpoints from public emotion. They use the following simple rule to find breakpoints from emotion sequences: Sim(et−1, et) &lt; Sim(et−2, et−1) (8) Sim(et−1, et) &lt; Sim(et, et+1) (9) where Sim is a similarity function. We use the cosine similarity function in our evaluation. TopKEmoVar: The method used in (Zhao et al., 2012a). They first derive a sequence of relative variation V n for each single emotion sequence en. Then they define a sequence of emotion variation as (E4n=1 |Vtn |). This sequence is sorted in descending order and the top-k t is selected as burst 6http://news.sina.com.cn/zt/ 1164 Table 5: Performance of different weighting schemes in terms of F-measure Table 3: Event detection performance of different methods Method Precision Recall F-measure EmoPeakFind 0.313 0.625 0.417 TopKEmoVari 0.423 0.423 0.423 KLB 0.575 0.702 0.632 MBurst 0.534 0.497 0.515 Our Method 0.654 0.715 0.683 state points, where</context>
</contexts>
<marker>Zhao, Dong, Wu, Xu, 2012</marker>
<rawString>Jichang Zhao, Li Dong, Junjie Wu, and Ke Xu. 2012a. Moodlens: an emoticon-based sentiment analysis system for chinese tweets. In KDD, pages 1528– 1531.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wayne Xin Zhao</author>
<author>Baihan Shu</author>
<author>Jing Jiang</author>
<author>Yang Song</author>
<author>Hongfei Yan</author>
<author>Xiaoming Li</author>
</authors>
<title>Identifying event-related bursts via social media activities.</title>
<date>2012</date>
<booktitle>In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning,</booktitle>
<pages>1466--1477</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="3210" citStr="Zhao et al., 2012" startWordPosition="521" endWordPosition="524">ion distribuTDWDU ��� ��� �� � �� �� tion on March 12 indicates a public event: 3.11 EDFHOOD ��� ���� �� �� Earthquake in Japan. We can see that emotional changes immediately reflect the occurring of realworld events, thus it is reasonable to use them to perform event detection. Most existing research on microblog event detection (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010) only account for the factual information (e.g., burstness of topic keywords). They usually ignore the importance of emotion information for event detection. Although there have recently been a few papers (Zhao et al., 2012a; Nguyen et al., 2013; Akcora et al., 2010) in this direction, they have a number of disadvantages. Firstly, they can not detect communityrelated events. Since they all aggregate emotion at global level, they can only discover national attention events, such as public holidays ( “Christmas” and “Spring Festival”) or natural disasters. In many applications, discovering events related to a certain group of users or a certain topic is more meaningful. Consider the following questions: “what happened in the football community last week?” and “what are the most significant events in the lawyer com</context>
<context position="8853" citStr="Zhao et al. (2012" startWordPosition="1418" endWordPosition="1421">ithm based on the sequence of community level emotion distribution. Event Detection in Microblog: Event detection from microblog data has attracted increasing attention recently. We divide existing work into the following two categories: non-emotionbased methods and emotion-based methods. Nonemotion-based methods try to exploit keyword or activity patterns to discover events (Weng and Lee, 2011; Sakaki et al., 2010; Becker et al., 2010; Mathioudakis and Koudas, 2010). Mathioudakis and Koudas (2010) first identify “bursty” keywords and then discover events by grouping bursty keywords together. Zhao et al. (2012b) focuses on 1160 identifying event-related burst from social media based on multiple activities. They propose a unified optimization model to integrate multiple correlated activity streams based on the state machine in (Kleinberg, 2003). Emotion-based methods try to exploit the emotional reactions to discover events (Zhao et al., 2012a; Akcora et al., 2010). Akcora et al. (2010) model public emotion as an emotion vector computed by counting emotion words and then use a rule-based method to identify public breakpoints. Zhao et al. (2012a) use a simple top-k method to detect abnormal events ba</context>
<context position="24150" citStr="Zhao et al., 2012" startWordPosition="4048" endWordPosition="4051">if its argument is true and 0 otherwise). The final precision, recall and F-measure are averaged over different communities. 5.4 Compared Methods We now introduce four methods used for comparison as follows: EmoPeakFind: The method proposed in (Akcora et al., 2010), which aims at discovering breakpoints from public emotion. They use the following simple rule to find breakpoints from emotion sequences: Sim(et−1, et) &lt; Sim(et−2, et−1) (8) Sim(et−1, et) &lt; Sim(et, et+1) (9) where Sim is a similarity function. We use the cosine similarity function in our evaluation. TopKEmoVar: The method used in (Zhao et al., 2012a). They first derive a sequence of relative variation V n for each single emotion sequence en. Then they define a sequence of emotion variation as (E4n=1 |Vtn |). This sequence is sorted in descending order and the top-k t is selected as burst 6http://news.sina.com.cn/zt/ 1164 Table 5: Performance of different weighting schemes in terms of F-measure Table 3: Event detection performance of different methods Method Precision Recall F-measure EmoPeakFind 0.313 0.625 0.417 TopKEmoVari 0.423 0.423 0.423 KLB 0.575 0.702 0.632 MBurst 0.534 0.497 0.515 Our Method 0.654 0.715 0.683 state points, where</context>
</contexts>
<marker>Zhao, Shu, Jiang, Song, Yan, Li, 2012</marker>
<rawString>Wayne Xin Zhao, Baihan Shu, Jing Jiang, Yang Song, Hongfei Yan, and Xiaoming Li. 2012b. Identifying event-related bursts via social media activities. In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 1466–1477. Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>