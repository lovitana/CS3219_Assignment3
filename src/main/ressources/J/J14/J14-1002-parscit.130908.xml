<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.941517">
Frame-Semantic Parsing
</title>
<author confidence="0.987132">
Dipanjan Das*
</author>
<affiliation confidence="0.881637">
Google Inc.
</affiliation>
<author confidence="0.992377">
Desai Chen**
</author>
<affiliation confidence="0.995207">
Massachusetts Institute of Technology
</affiliation>
<author confidence="0.957309">
Andr´e F. T. Martinst
</author>
<affiliation confidence="0.9088815">
Priberam Labs
Instituto de Telecomunicac¸˜oes
</affiliation>
<author confidence="0.995552">
Nathan Schneider$
</author>
<affiliation confidence="0.995591">
Carnegie Mellon University
</affiliation>
<author confidence="0.978443">
Noah A. Smith§
</author>
<affiliation confidence="0.983024">
Carnegie Mellon University
</affiliation>
<bodyText confidence="0.983853142857143">
Frame semantics is a linguistic theory that has been instantiated for English in the FrameNet
lexicon. We solve the problem of frame-semantic parsing using a two-stage statistical model
that takes lexical targets (i.e., content words and phrases) in their sentential contexts and
predicts frame-semantic structures. Given a target in context, the first stage disambiguates it to a
semantic frame. This model uses latent variables and semi-supervised learning to improve frame
disambiguation for targets unseen at training time. The second stage finds the target’s locally
expressed semantic arguments. At inference time, a fast exact dual decomposition algorithm
collectively predicts all the arguments of a frame at once in order to respect declaratively stated
linguistic constraints, resulting in qualitatively better structures than na¨ıve local predictors.
Both components are feature-based and discriminatively trained on a small set of annotated
frame-semantic parses. On the SemEval 2007 benchmark data set, the approach, along with a
heuristic identifier offrame-evoking targets, outperforms the prior state of the art by significant
margins. Additionally, we present experiments on the much larger FrameNet 1.5 data set. We
have released our frame-semantic parser as open-source software.
</bodyText>
<affiliation confidence="0.621869714285714">
* Google Inc., New York, NY 10011. E-mail: dipanjand®google.com.
** Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology,
Cambridge, MA 02139. E-mail: desaic®csail.mit.edu.
t Alameda D. Afonso Henriques, 41 - 2.◦ Andar,1000-123, Lisboa, Portugal. E-mail: atm®priberam.pt.
t School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213.
E-mail: nschneid®cs.cmu.edu.
§ School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213.
</affiliation>
<email confidence="0.905651">
E-mail: nasmith®cs.cmu.edu.
</email>
<note confidence="0.973534">
Submission received: 4 May 2012; revised submission received: 10 November 2012; accepted for publication:
22 December 2012.
doi:10.1162/COLI a 00163
© 2014 Association for Computational Linguistics
Computational Linguistics Volume 40, Number 1
</note>
<sectionHeader confidence="0.988368" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999792107142857">
FrameNet (Fillmore, Johnson, and Petruck 2003) is a linguistic resource storing consider-
able information about lexical and predicate-argument semantics in English. Grounded
in the theory of frame semantics (Fillmore 1982), it suggests—but does not formally
define—a semantic representation that blends representations familiar from word-sense
disambiguation (Ide and V´eronis 1998) and semantic role labeling (SRL; Gildea and
Jurafsky 2002). Given the limited size of available resources, accurately producing
richly structured frame-semantic structures with high coverage will require data-driven
techniques beyond simple supervised classification, such as latent variable modeling,
semi-supervised learning, and joint inference.
In this article, we present a computational and statistical model for frame-semantic
parsing, the problem of extracting from text semantic predicate-argument structures
such as those shown in Figure 1. We aim to predict a frame-semantic representation
with two statistical models rather than a collection of local classifiers, unlike earlier ap-
proaches (Baker, Ellsworth, and Erk 2007). We use a probabilistic framework that cleanly
integrates the FrameNet lexicon and limited available training data. The probabilistic
framework we adopt is highly amenable to future extension through new features, more
relaxed independence assumptions, and additional semi-supervised models.
Carefully constructed lexical resources and annotated data sets from FrameNet,
detailed in Section 3, form the basis of the frame structure prediction task. We de-
compose this task into three subproblems: target identification (Section 4), in which
frame-evoking predicates are marked in the sentence; frame identification (Section 5),
in which the evoked frame is selected for each predicate; and argument identification
(Section 6), in which arguments to each frame are identified and labeled with a role from
that frame. Experiments demonstrating favorable performance to the previous state of
the art on SemEval 2007 and FrameNet data sets are described in each section. Some
novel aspects of our approach include a latent-variable model (Section 5.2) and a semi-
supervised extension of the predicate lexicon (Section 5.5) to facilitate disambiguation of
words not in the FrameNet lexicon; a unified model for finding and labeling arguments
</bodyText>
<figureCaption confidence="0.736965">
Figure 1
</figureCaption>
<bodyText confidence="0.989042142857143">
An example sentence from the annotations released as part of FrameNet 1.5 with three targets
marked in bold. Note that this annotation is partial because not all potential targets have been
annotated with predicate-argument structures. Each target has its evoked semantic frame
marked above it, enclosed in a distinct shape or border style. For each frame, its semantic roles
are shown enclosed within the same shape or border style, and the spans fulfilling the roles are
connected to the latter using dotted lines. For example, manner evokes the CONDUCT frame, and
has the AGENT and MANNER roles fulfilled by Austria and most un-Viennese, respectively.
</bodyText>
<page confidence="0.997379">
10
</page>
<note confidence="0.981855">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999212076923077">
(Section 6) that diverges from prior work in semantic role labeling; and an exact dual
decomposition algorithm (Section 7) that collectively predicts all the arguments of a
frame together, thereby incorporating linguistic constraints in a principled fashion.
Our open-source parser, named SEMAFOR (Semantic Analyzer of Frame Represen-
tations)1 achieves the best published results to date on the SemEval 2007 frame-semantic
structure extraction task (Baker, Ellsworth, and Erk 2007). Herein, we also present
results on newly released data with FrameNet 1.5, the latest edition of the lexicon.
Some of the material presented in this article has appeared in previously published
conference papers: Das et al. (2010) presented the basic model, Das and Smith (2011)
described semi-supervised lexicon expansion, Das and Smith (2012) demonstrated a
sparse variant of lexicon expansion, and Das, Martins, and Smith (2012) presented the
dual decomposition algorithm for constrained joint argument identification. We present
here a synthesis of those results and several additional details:
</bodyText>
<listItem confidence="0.992023714285714">
1. The set of features used in the two statistical models for frame identification and
argument identification.
2. Details of a greedy beam search algorithm for argument identification that avoids
illegal argument overlap.
3. Error analysis pertaining to the dual decomposition argument identification algo-
rithm, in contrast with the beam search algorithm.
4. Results on full frame-semantic parsing using graph-based semi-supervised learn-
</listItem>
<bodyText confidence="0.927231">
ing with sparsity-inducing penalties; this expands the small FrameNet predicate
lexicon, enabling us to handle unknown predicates.
Our primary contributions are the use of efficient structured prediction tech-
niques suited to shallow semantic parsing problems, novel methods in semi-supervised
learning that improve the lexical coverage of our parser, and making frame-semantic
structures a viable computational semantic representation usable in other language
technologies. To set the stage, we next consider related work in the automatic prediction
of predicate-argument semantic structures.
</bodyText>
<sectionHeader confidence="0.999833" genericHeader="related work">
2. Related Work
</sectionHeader>
<bodyText confidence="0.9999255">
In this section, we will focus on previous scientific work relevant to the problem of
frame-semantic parsing. First, we will briefly discuss work done on PropBank-style
semantic role labeling, following which we will concentrate on the more relevant prob-
lem of frame-semantic structure extraction. Next, we review previous work that has
used semi-supervised learning for shallow semantic parsing. Finally, we discuss prior
work on joint structure prediction relevant to frame-semantic parsing.
</bodyText>
<subsectionHeader confidence="0.975173">
2.1 Semantic Role Labeling
</subsectionHeader>
<bodyText confidence="0.997307166666667">
Since Gildea and Jurafsky (2002) pioneered statistical semantic role labeling, there
has been a great deal of computational work using predicate-argument structures
for semantics. The development of PropBank (Kingsbury and Palmer 2002), followed
by CoNLL shared tasks on semantic role labeling (Carreras and M`arquez 2004,
2005) boosted research in this area. Figure 2(a) shows an annotation from PropBank.
PropBank annotations are closely tied to syntax, because the data set consists of the
</bodyText>
<footnote confidence="0.893807">
1 See http://www.ark.cs.cmu.edu/SEMAFOR.
</footnote>
<page confidence="0.997043">
11
</page>
<note confidence="0.540326">
Computational Linguistics Volume 40, Number 1
</note>
<figureCaption confidence="0.945027">
Figure 2
</figureCaption>
<listItem confidence="0.818721375">
(a) A phrase-structure tree taken from the Penn Treebank and annotated with PropBank
predicate-argument structures. The verbs created and pushed serve as predicates in this
sentence. Dotted arrows connect each predicate to its semantic arguments (bracketed phrases).
(b) A partial depiction of frame-semantic structures for the same sentence. The words in bold
are targets, which instantiate a (lemmatized and part-of-speech–tagged) lexical unit and evoke
a semantic frame. Every frame annotation is shown enclosed in a distint shape or border style,
and its argument labels are shown together on the same vertical tier below the sentence.
See text for explanation of abbreviations.
</listItem>
<bodyText confidence="0.999907473684211">
phrase-structure syntax trees from the Wall Street Journal section of the Penn Treebank
(Marcus, Marcinkiewicz, and Santorini 1993) annotated with predicate-argument
structures for verbs. In Figure 2(a), the syntax tree for the sentence is marked with
various semantic roles. The two main verbs in the sentence, created and pushed, are
the predicates. For the former, the constituent more than 1.2 million jobs serves as the
semantic role ARG1 and the constituent In that time serves as the role ARGM-TMP. Similarly
for the latter verb, roles ARG1, ARG2, ARGM-DIR, and ARGM-TMP are shown in the figure.
PropBank defines core roles ARG0 through ARG5, which receive different interpretations
for different predicates. Additional modifier roles ARGM-* include ARGM-TMP (temporal)
and ARGM-DIR (directional), as shown in Figure 2(a). The PropBank representation
therefore has a small number of roles, and the training data set comprises some
40,000 sentences, thus making the semantic role labeling task an attractive one from the
perspective of machine learning.
There are many instances of influential work on semantic role labeling using
PropBank conventions. Pradhan et al. (2004) present a system that uses support vector
machines (SVMs) to identify the arguments in a syntax tree that can serve as semantic
roles, followed by classification of the identified arguments to role names via a collection
of binary SVMs. Punyakanok et al. (2004) describe a semantic role labeler that uses inte-
ger linear programming for inference and uses several global constraints to find the best
</bodyText>
<page confidence="0.99656">
12
</page>
<note confidence="0.981916">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999701739130435">
suited predicate-argument structures. Joint modeling for semantic role labeling with
discriminative log-linear models is presented by Toutanova, Haghighi, and Manning
(2005), where global features looking at all arguments of a particular verb together are
incorporated into a dynamic programming and reranking framework. The Computa-
tional Linguistics special issue on semantic role labeling (M`arquez et al. 2008) includes
other interesting papers on the topic, leveraging the PropBank conventions for labeling
shallow semantic structures. Recently, there have been initiatives to predict syntactic
dependencies as well as PropBank-style predicate-argument structures together using
one joint model (Surdeanu et al. 2008; Hajiˇc et al. 2009).
Here, we focus on the related problem of frame-semantic parsing. Note from the
annotated semantic roles for the two verbs in the sentence of Figure 2(a) that it is
unclear what the core roles ARG1 or ARG2 represent linguistically. To better understand
the roles’ meaning for a given verb, one has to refer to a verb-specific file provided along
with the PropBank corpus. Although collapsing these verb-specific core roles into tags
ARG0-ARG5 leads to a small set of classes to be learned from a reasonable sized corpus,
analysis shows that the roles ARG2–ARG5 serve many different purposes for different
verbs. Yi, Loper, and Palmer (2007) point out that these four roles are highly overloaded
and inconsistent, and they mapped them to VerbNet (Schuler 2005) thematic roles to
get improvements on the SRL task. Recently, Bauer and Rambow (2011) presented
a method to improve the syntactic subcategorization patterns for FrameNet lexical
units using VerbNet. Instead of working with PropBank, we focus on shallow semantic
parsing of sentences in the paradigm of frame semantics (Fillmore 1982), to which we
turn next.
</bodyText>
<subsectionHeader confidence="0.978196">
2.2 Frame-Semantic Parsing
</subsectionHeader>
<bodyText confidence="0.998725476190476">
The FrameNet lexicon (Fillmore, Johnson, and Petruck 2003) contains rich linguistic
information about lexical items and predicate-argument structures. A semantic frame
present in this lexicon includes a list of lexical units, which are associated words
and phrases that can potentially evoke it in a natural language utterance. Each frame
in the lexicon also enumerates several roles corresponding to facets of the scenario
represented by the frame. In a frame-analyzed sentence, predicates evoking frames
are known as targets, and a word or phrase filling a role is known as an argument.
Figure 2(b) shows frame-semantic annotations for the same sentence as in Figure 2(a).
(In the figure, for example, the CARDINAL NUMBERS frame, “M” denotes the role Multiplier
and “E” denotes the role Entity.) Note that the verbs created and pushed evoke the frames
INTENTIONALLY CREATE and CAUSE CHANGE POSITION ON A SCALE, respectively. The correspond-
ing lexical units2 from the FrameNet lexicon, create.V and push.V, are also shown.
The PropBank analysis in Figure 2(a) also has annotations for these two verbs. While
PropBank labels the roles of these verbs with its limited set of tags, the frame-
semantic parse labels each frame’s arguments with frame-specific roles shown in the
figure, making it immediately clear what those arguments mean. For example, for the
INTENTIONALLY CREATE frame, more than 1.2 million jobs is the Created entity, and In that time is
the Time when the jobs were created. FrameNet also allows non-verbal words and phrases
to evoke semantic frames: in this sentence, million evokes the frame CARDINAL NUMBERS
and doubles as its Number argument, with 1.2 as Multiplier, jobs as the Entity being quantified,
and more than as the Precision of the quantity expression.
</bodyText>
<page confidence="0.682279">
2 See Section 5.1 for a detailed description of lexical units.
13
</page>
<figure confidence="0.995035761904762">
Computational Linguistics Volume 40, Number 1
OBJECTIVE_INFLUENCE
event.n, happen.v,
occur.v, take place.v, ...
affect.v, effect.n,
impact.n, impact.v, ...
Dependent_entity
uencing_situation
uencing_entity
EVENT
Event
Place
Time
Place
Time
TRANSITIVE_ACTION
Patient
Cause
Agent
Event
Place
Time
—
CAUSE_TO_MAKE_NOISE
Inheritance relation Causative_of relation
Excludes relation
blare.v, honk.v, play.v,
ring.v, toot.v, ...
Sound_maker
Purpose
Cause
Agent
Place
Time
cough.v, gobble.v,
hiss.v, ring.v, yodel.v, ...
Sound_source
Noisy_event
MAKE_NOISE
Sound
Place
Time
</figure>
<figureCaption confidence="0.90642">
Figure 3
Partial illustration of frames, roles, and lexical units related to the CAUSE TO MAKE NOISE frame,
from the FrameNet lexicon. Core roles are filled bars. Non-core roles (such as Place and Time) are
unfilled bars. No particular significance is ascribed to the ordering of a frame’s roles in its
lexicon entry (the selection and ordering of roles above is for illustrative convenience).
CAUSE TO MAKE NOISE defines a total of 14 roles, many of them not shown here.
</figureCaption>
<bodyText confidence="0.99992712">
Whereas PropBank contains verbal predicates and NomBank (Meyers et al. 2004) con-
tains nominal predicates, FrameNet counts these as well as allowing adjectives, adverbs,
and prepositions among its lexical units. Finally, FrameNet frames organize predicates
according to semantic principles, both by allowing related terms to evoke a common
frame (e.g., push.V, raise.V, and growth.N for CAUSE CHANGE POSITION ON A SCALE) and by
defining frames and their roles within a hierarchy (see Figure 3). PropBank does not
explicitly encode relationships among predicates.
Most early work on frame-semantic parsing has made use of the exemplar sentences
in the FrameNet corpus (see Section 3.1), each of which is annotated for a single frame
and its arguments. Gildea and Jurafsky (2002) presented a discriminative model for
arguments given the frame; Thompson, Levy, and Manning (2003) used a generative
model for both the frame and its arguments. Fleischman, Kwon, and Hovy (2003) first
used maximum entropy models to find and label arguments given the frame. Shi and
Mihalcea (2004) developed a rule-based system to predict frames and their arguments
in text, and Erk and Pad´o (2006) introduced the Shalmaneser tool, which uses naive
Bayes classifiers to do the same. Other FrameNet SRL systems (Giuglea and Moschitti
2006, for instance) have used SVMs. Most of this work was done on an older, smaller
version of FrameNet, containing around 300 frames and fewer than 500 unique semantic
roles. Unlike this body of work, we experimented with the larger SemEval 2007 shared
task data set, and also the newer FrameNet 1.5,3 which lists 877 frames and 1,068 role
types—thus handling many more labels, and resulting in richer frame-semantic parses.
Recent work in frame-semantic parsing—in which sentences may contain multiple
frames which need to be recognized along with their arguments—was undertaken
as the SemEval 2007 task 19 of frame-semantic structure extraction (Baker, Ellsworth,
and Erk 2007). This task leveraged FrameNet 1.3, and also released a small corpus
</bodyText>
<footnote confidence="0.566794">
3 Available at http://framenet.icsi.berkeley.edu as of 19 January 2013.
</footnote>
<page confidence="0.996671">
14
</page>
<note confidence="0.982073">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999229185185185">
containing a little more than 2,000 sentences with full text annotations. The LTH system
of Johansson and Nugues (2007), which we use as our baseline (Section 3.4), had the
best performance in the SemEval 2007 task in terms of full frame-semantic parsing.
Johansson and Nugues broke down the task as identifying targets that could evoke
frames in a sentence, identifying the correct semantic frame for a target, and finally
determining the arguments that fill the semantic roles of a frame. They used a series
of SVMs to classify the frames for a given target, associating unseen lexical items to
frames and identifying and classifying token spans as various semantic roles. Both
the full text annotation corpus as well as the FrameNet exemplar sentences were
used to train their models. Unlike Johansson and Nugues, we use only the full text
annotated sentences as training data, model the whole problem with only two statis-
tical models, and obtain significantly better overall parsing scores. We also model the
argument identification problem using a joint structure prediction model and use semi-
supervised learning to improve predicate coverage. We also present experiments on
recently released FrameNet 1.5 data.
In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) in-
vestigated various uses of FrameNet’s taxonomic relations for learning generalizations
over roles; they trained a log-linear model on the SemEval 2007 data to evaluate features
for the subtask of argument identification. Another line of work has sought to extend
the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea
2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries
and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado
and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application
of frame-semantic structures to tasks such as information extraction (Moschitti,
Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt
and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu
2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005).
</bodyText>
<sectionHeader confidence="0.599651" genericHeader="method">
2.3 Semi-Supervised Methods
</sectionHeader>
<bodyText confidence="0.99913315">
Although there has been a significant amount of work in supervised shallow semantic
parsing using both PropBank- and FrameNet-style representations, a few improve-
ments over vanilla supervised methods using unlabeled data are notable. F¨urstenau and
Lapata (2009b) present a method of projecting predicate-argument structures from some
seed examples to unlabeled sentences, and use a linear program formulation to find
the best alignment explaining the projection. Next, the projected information as well
as the seeds are used to train statistical model(s) for SRL. The authors ran experiments
using a set of randomly chosen verbs from the exemplar sentences of FrameNet and
found improvements over supervised methods. In an extension to this work, F¨urstenau
and Lapata (2009a) present a method for finding examples for unseen verbs using a
graph alignment method; this method represents sentences and their syntactic analysis
as graphs and graph alignment is used to project annotations from seed examples to
unlabeled sentences. This alignment problem is again modeled as a linear program.
F¨urstenau and Lapata (2012) present an detailed expansion of the aforementioned
papers. Although this line of work presents a novel direction in the area of SRL, the
published approach does not yet deal with non-verbal predicates and does not evaluate
the presented methods on the full text annotations of the FrameNet releases.
Deschacht and Moens (2009) present a technique of incorporating additional infor-
mation from unlabeled data by using a latent words language model. Latent variables
are used to model the underlying representation of words, and parameters of this model
</bodyText>
<page confidence="0.985372">
15
</page>
<note confidence="0.335495">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.999761157894737">
are estimated using standard unsupervised methods. Next, the latent information is
used as features for an SRL model. Improvements over supervised SRL techniques
are observed with the augmentation of these extra features. The authors also compare
their method with the aforementioned two methods of F¨urstenau and Lapata (2009a,
2009b) and show relative improvements. Experiments are performed on the CoNLL
2008 shared task data set (Surdeanu et al. 2008), which follows the PropBank conven-
tions and only labels verbal and nominal predicates—in contrast to our work, which
includes most lexicosyntactic categories. A similar approach is presented by Weston,
Ratle, and Collobert (2008), who use neural embeddings of words, which are eventu-
ally used for SRL; improvements over state-of-the-art PropBank-style SRL systems are
observed.
Recently, there has been related work in unsupervised semantic role labeling (Lang
and Lapata 2010, 2011; Titov and Klementiev 2012) that attempts to induce semantic
roles automatically from unannotated data. This line of work may be useful in discov-
ering new semantic frames and roles, but here we stick to the concrete representation
provided in FrameNet, without seeking to expand its inventory of semantic types. We
present a new semi-supervised technique to expand the set of lexical items with the
potential semantic frames that they could evoke; we use a graph-based semi-supervised
learning framework to achieve this goal (Section 5.5).
</bodyText>
<subsectionHeader confidence="0.999484">
2.4 Joint Inference and Shallow Semantic Parsing
</subsectionHeader>
<bodyText confidence="0.999397652173913">
Most high-performance SRL systems that use conventions from PropBank (Kingsbury
and Palmer 2002) and NomBank (Meyers et al. 2004) utilize joint inference for seman-
tic role labeling (M`arquez et al. 2008). To our knowledge, the separate line of work
investigating frame-semantic parsing has not previously dealt with joint inference. A
common trait in prior work, both in PropBank and FrameNet conventions, has been
the use of a two-stage model that identifies arguments first, then labels them, often
using dynamic programming or integer linear programs (ILPs); we treat both problems
together here.4
Recent work in natural language processing (NLP) problems has focused on ILP for-
mulations for complex structure prediction tasks like dependency parsing (Riedel and
Clarke 2006; Martins, Smith, and Xing 2009; Martins et al. 2010), sequence tagging (Roth
and Yih 2004), as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work
in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush
et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian
relaxation) as a way of exploiting the structure of the problem and existing combina-
torial algorithms. The method allows the combination of models that are individually
tractable, but not jointly tractable, by solving a relaxation of the original problem. Since
then, dual decomposition has been used to build more accurate models for dependency
parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing
(Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and
Macherey 2011; Rush and Collins 2011).
Recently, Martins et al. (2011b) showed that the success of subgradient-based dual
decomposition strongly relies on breaking down the original problem into a “good”
</bodyText>
<footnote confidence="0.996784333333333">
4 In prior work, there are exceptions where identification and classification of arguments have been treated
in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on
semantic role labeling (Carreras and M`arquez 2004).
</footnote>
<page confidence="0.998187">
16
</page>
<note confidence="0.866279">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999913888888889">
decomposition, that is, one with few overlapping components. This leaves out many
declarative constrained problems, for which such a good decomposition is not readily
available. For those, Martins et al. proposed the Alternating Directions Dual Decom-
position (AD3) algorithm, which retains the modularity of previous methods, but can
handle thousands of small overlapping components. We adopt that algorithm as it
perfectly suits the problem of argument identification, as we observe in Section 7.5 We
also contribute an exact branch-and-bound technique wrapped around AD3.
Before delving into the details of our modeling framework, we describe in detail the
structure of the FrameNet lexicon and the data sets used to train our models.
</bodyText>
<sectionHeader confidence="0.933682" genericHeader="method">
3. Resources and Task
</sectionHeader>
<bodyText confidence="0.998492">
We consider frame-semantic parsing resources consisting of a lexicon and annotated
sentences with frame-semantic structures, evaluation strategies, and previous baselines.
</bodyText>
<subsectionHeader confidence="0.998572">
3.1 FrameNet Lexicon
</subsectionHeader>
<bodyText confidence="0.999971230769231">
The FrameNet lexicon is a taxonomy of manually identified general-purpose semantic
frames for English.6 Listed in the lexicon with each frame are a set of lemmas (with
parts of speech) that can denote the frame or some aspect of it—these are called lexical
units (LUs). In a sentence, word or phrase tokens that evoke a frame are known as
targets. The set of LUs listed for a frame in FrameNet may not be exhaustive; we may
see a target in new data that does not correspond to an LU for the frame it evokes.
Each frame definition also includes a set of frame elements, or roles, corresponding
to different aspects of the concept represented by the frame, such as participants,
props, and attributes. We use the term argument to refer to a sequence of word tokens
annotated as filling a frame role. Figure 1 shows an example sentence from the training
data with annotated targets, LUs, frames, and role-argument pairs. The FrameNet
lexicon also provides information about relations between frames and between roles
(e.g., INHERITANCE). Figure 3 shows a subset of the relations between five frames and
their roles.
Accompanying most frame definitions in the FrameNet lexicon is a set of lexico-
graphic exemplar sentences (primarily from the British National Corpus) annotated
for that frame. Typically chosen to illustrate variation in argument realization pat-
terns for the frame in question, these sentences only contain annotations for a single
frame.
In preliminary experiments, we found that using exemplar sentences directly to
train our models hurt performance as evaluated on SemEval 2007 data, which formed
a benchmark for comparison with previous state of the art. This was a noteworthy
observation, given that the number of exemplar sentences is an order of magnitude
larger than the number of sentences in training data that we consider in our experiments
(Section 3.2). This is presumably because the exemplars are not representative as a
sample, do not have complete annotations, and are not from a domain similar to the
</bodyText>
<footnote confidence="0.99886175">
5 AD3 was previously referred to as “DD-ADMM,” in reference to the use of dual decomposition with the
alternating directions method of multipliers.
6 Like the SemEval 2007 participants, we used FrameNet 1.3 and also the newer version of the lexicon,
FrameNet 1.5 (http://framenet.icsi.berkeley.edu).
</footnote>
<page confidence="0.997294">
17
</page>
<note confidence="0.333815">
Computational Linguistics Volume 40, Number 1
</note>
<tableCaption confidence="0.603654666666667">
Table 1
Salient statistics of the data sets used in our experiments. There is a significant overlap between
the two data sets.
</tableCaption>
<table confidence="0.94067025">
SemEval 2007 Data FrameNet 1.5 Release
count count
Exemplar sentences 139,439 154,607
Frame labels (types) 665 877
Role labels (types) 720 1,068
Sentences in training data 2,198 3,256
Targets in training data 11,195 19,582
Sentences in test data 120 2,420
Targets in test data 1,059 4,458
Unseen targets in test data 210 144
test data. Instead, we make use of these exemplars in the construction of features
(Section 5.2).
</table>
<subsectionHeader confidence="0.997293">
3.2 Data
</subsectionHeader>
<bodyText confidence="0.998984">
In our experiments on frame-semantic parsing, we use two sets of data:
</bodyText>
<listItem confidence="0.957573782608696">
1. SemEval 2007 data: In benchmark experiments for comparison with previous
state of the art, we use a data set that was released as part of the SemEval 2007
shared task on frame-semantic structure extraction (Baker, Ellsworth, and Erk 2007).
Full text annotations in this data set consisted of a few thousand sentences con-
taining multiple targets, each annotated with a frame and its arguments. The then-
current version of the lexicon (FrameNet 1.3) was used for the shared task as the
inventory of frames, roles, and lexical units (Figure 3 illustrates a small portion
of the lexicon). In addition to the frame hierarchy, FrameNet 1.3 also contained
139,439 exemplar sentences containing one target each. Statistics of the data used
for the SemEval 2007 shared task are given in the first column of Table 1. A total
of 665 frame types and 720 role types appear in the exemplars and the training
portion of the data. We adopted the same training and test split as the SemEval
2007 shared task; however, we removed four documents from the training set7 for
development. Table 2 shows some additional information about the SemEval data
set; the variety of lexicosyntactic categories of targets stands in marked contrast
with the PropBank-style SRL data and task.
2. FrameNet 1.5 release: A more recent version of the FrameNet lexicon was released
in 2010.8 We also test our statistical models (only frame identification and argu-
ment identification) on this data set to get an estimate of how much improvement
additional data can provide. Details of this data set are shown in the second col-
umn of Table 1. Of the 78 documents in this release with full text annotations, we
selected 55 (19,582 targets) for training and held out the remaining 23 (4,458 tar-
gets) for testing. There are fewer target annotations per sentence in the test set than
</listItem>
<footnote confidence="0.742716333333333">
7 These were: StephanopoulousCrimes, Iran Biological, NorthKorea Introduction, and WMDNews 042106.
8 Released on 15 September 2010, and downloadable from http://framenet.icsi.berkeley.edu as of
13 February 2013. In our experiments, we used a version downloaded on 22 September 2010.
</footnote>
<page confidence="0.998675">
18
</page>
<note confidence="0.894464">
Das et al. Frame-Semantic Parsing
</note>
<tableCaption confidence="0.985887">
Table 2
</tableCaption>
<bodyText confidence="0.96896125">
Breakdown of targets and arguments in the SemEval 2007 training set in terms of part of speech.
The target POS is based on the LU annotation for the frame instance. For arguments, this reflects
the part of speech of the head word (estimated from an automatic dependency parse); the
percentage is out of all overt arguments.
</bodyText>
<table confidence="0.994337545454545">
targets arguments
count % count %
Noun 5,155 52 Noun 9,439 55
Verb 2,785 28 Preposition or
Adjective 1,411 14 complementizer 2,553 15
Preposition 296 3 Adjective 1,744 10
Adverb 103 1 Verb 1,156 7
Number 63 1 Pronoun 736 4
Conjunction 8 Adverb 373 2
Article 3 Other 1,047 6
9,824 17,048
</table>
<bodyText confidence="0.990040727272727">
the training set.9 Das and Smith (2011, supplementary material) give the names
of the test documents for fair replication of our work. We also randomly selected
4,462 targets from the training data for development of the argument identification
model (Section 6.1).
Preprocessing. We preprocessed sentences in our data set with a standard set of anno-
tations: POS tags from MXPOST (Ratnaparkhi 1996) and dependency parses from the
MST parser (McDonald, Crammer, and Pereira 2005); manual syntactic parses are not
available for most of the FrameNet-annotated documents. We used WordNet (Fellbaum
1998) for lemmatization. Our models treat these pieces of information as observations.
We also labeled each verb in the data as having ACTIVE or PASSIVE voice, using code
from the SRL system described by Johansson and Nugues (2008).
</bodyText>
<subsectionHeader confidence="0.999124">
3.3 Task and Evaluation Methodology
</subsectionHeader>
<bodyText confidence="0.9993751">
Automatic annotations of frame-semantic structure can be broken into three parts:
(1) targets, the words or phrases that evoke frames; (2) the frame type, defined in the
lexicon, evoked by each target; and (3) the arguments, or spans of words that serve
to fill roles defined by each evoked frame. These correspond to the three subtasks
in our parser, each described and evaluated in turn: target identification (Section 4),
frame identification (Section 5, not unlike word-sense disambiguation), and argument
identification (Section 6, essentially the same as semantic role labeling).
The standard evaluation script from the SemEval 2007 shared task calculates pre-
cision, recall, and F1-measure for frames and arguments; it also provides a score that
gives partial credit for hypothesizing a frame related to the correct one. We present
</bodyText>
<footnote confidence="0.9749295">
9 For creating the splits, we first included the documents that had incomplete annotations as mentioned in
the initial FrameNet 1.5 data release in the test set; because we do not evaluate target identification for
this version of data, the small number of targets per sentence does not matter. After these documents
were put into the test set, we randomly selected 55 remaining documents for training, and picked the
rest for additional testing. The final test set contains a total of 23 documents. When these documents
are annotated in their entirety, the test set will become larger and the training set will be unaltered.
</footnote>
<page confidence="0.996748">
19
</page>
<note confidence="0.339296">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.999850285714286">
precision, recall, and F1-measure microaveraged across the test documents, report labels-
only matching scores (spans must match exactly), and do not use named entity labels.10
More details can be found in the task description paper from SemEval 2007 (Baker,
Ellsworth, and Erk 2007). For our experiments, statistical significance is measured using
a reimplementation of Dan Bikel’s randomized parsing evaluation comparator, a strat-
ified shuffling test whose original implementation11 is accompanied by the following
description (quoted verbatim, with explanations of our use of the test given in square
brackets):
The null hypothesis is that the two models that produced the observed results are the
same, such that for each test instance [here, a set of predicate-argument structures for a
sentence], the two observed scores are equally likely. This null hypothesis is tested by
randomly shuffling individual sentences’ scores between the two models and then
re-computing the evaluation metrics [precision, recall or F1 score in our case]. If the
difference in a particular metric after a shuffling is equal to or greater than the original
observed difference in that metric, then a counter for that metric is incremented. Ideally,
one would perform all 2n shuffles, where n is the number of test cases (sentences), but
given that this is often prohibitively expensive, the default number of iterations is
10,000 [we use independently sampled 10,000 shuffles]. After all iterations, the
likelihood of incorrectly rejecting the null [hypothesis, i.e., the p-value] is simply
(nc + 1)/(nt + 1), where nc is the number of random differences greater than the
original observed difference, and nt is the total number of iterations.
</bodyText>
<subsectionHeader confidence="0.918834">
3.4 Baseline
</subsectionHeader>
<bodyText confidence="0.999840052631579">
A strong baseline for frame-semantic parsing is the system presented by Johansson and
Nugues (2007, hereafter J&amp;N’07), the best system in the SemEval 2007 shared task. That
system is based on a collection of SVMs. They used a set of rules for target identification
which we describe in Appendix A. For frame identification, they used an SVM classifier
to disambiguate frames for known frame-evoking words. They used WordNet synsets
to extend the vocabulary of frame-evoking words to cover unknown words, and then
used a collection of separate SVM classifiers—one for each frame—to predict a single
evoked frame for each occurrence of a word in the extended set.
J&amp;N’07 followed Xue and Palmer (2004) in dividing the argument identification
problem into two subtasks: First, they classified candidate spans as to whether they
were arguments or not; then they assigned roles to those that were identified as ar-
guments. Both phases used SVMs. Thus, their formulation of the problem involves
a multitude of independently trained classifiers that share no information—whereas
ours uses two log-linear models, each with a single set of parameters shared across all
contexts, to find a full frame-semantic parse.
We compare our models with J&amp;N’07 using the benchmark data set from SemEval
2007. However, because we are not aware of any other work using the FrameNet 1.5 full
text annotations, we report our results on that data set without comparison to any other
system.
</bodyText>
<footnote confidence="0.9953456">
10 For microaveraging, we concatenated all sentences of the test documents and measured precision and
recall over the concatenation. Macroaveraging, on the other hand, would mean calculating these metrics
for each document, then averaging them. Microaveraging treats every frame or argument as a unit,
regardless of the length of the document in which it occurs.
11 See http://www.cis.upenn.edu/-dbikel/software.html#comparator.
</footnote>
<page confidence="0.994229">
20
</page>
<note confidence="0.94911">
Das et al. Frame-Semantic Parsing
</note>
<sectionHeader confidence="0.949493" genericHeader="method">
4. Target Identification
</sectionHeader>
<bodyText confidence="0.96645465">
Target identification is the problem of deciding which word tokens (or word token
sequences) evoke frames in a given sentence. In other semantic role labeling schemes
(e.g., PropBank), simple part-of-speech criteria typically distinguish targets from non-
targets. But in frame semantics, verbs, nouns, adjectives, and even prepositions can
evoke frames under certain conditions. One complication is that semantically impov-
erished support predicates (such as make in make a request) do not evoke frames in the
context of a frame-evoking, syntactically dependent noun (request). Furthermore, only
temporal, locative, and directional senses of prepositions evoke frames.12
Preliminary experiments using a statistical method for target identification gave
unsatisfactory results; instead, we followed J&amp;N’07 in using a small set of rules to
identify targets. First, we created a master list of all the morphological variants of
targets that appear in the exemplar sentences and a given training set. For a sentence in
new data, we considered as candidate targets only those substrings that appear in this
master list. We also did not attempt to capture discontinuous frame targets: for example,
we treat there would have been as a single span even though the corresponding LU is
there be.V.13
Next, we pruned the candidate target set by applying a series of rules identical
to the ones described by Johansson and Nugues (2007, see Appendix A), with two
exceptions. First, they identified locative, temporal, and directional prepositions using
a dependency parser so as to retain them as valid LUs. In contrast, we pruned all types
of prepositions because we found them to hurt our performance on the development
set due to errors in syntactic parsing. In a second departure from their target extraction
rules, we did not remove the candidate targets that had been tagged as support verbs
for some other target. Note that we used a conservative white list that filters out targets
whose morphological variants were not seen either in the lexicon or the training data.14
Therefore, when this conservative process of automatic target identification is used, our
system loses the capability to predict frames for completely unseen LUs, despite the fact
that our powerful frame identification model (Section 5) can accurately label frames for
new LUs.15
Results. Table 3 shows results on target identification tested on the SemEval 2007 test
set; our system gains 3 F1 points over the baseline. This is statistically significant with
p &lt; 0.01. Our results are also significant in terms of precision (p &lt; 0.05) and recall (p &lt;
0.01). There are 85 distinct LUs for which the baseline fails to identify the correct target
while our system succeeds. A considerable proportion of these units have more than
12 Note that there have been dedicated shared tasks to determine relationships between nominals (Girju
et al. 2007) and word-sense disambiguation of prepositions (Litkowski and Hargraves 2007), but we do
not build specific models for predicates of these categories.
13 There are 629 multiword LUs in the lexicon, and they correspond to 4.8% of the targets in the training
set; among them are screw up.V, shoot the breeze.V, and weapon of mass destruction.N. In the SemEval 2007
training data, there are just 99 discontinuous multiword targets (1% of all targets).
</bodyText>
<footnote confidence="0.985577125">
14 This conservative approach violates theoretical linguistic assumptions about frame-evoking targets as
governed by frame semantics. It also goes against the spirit of using linguistic constraints to improve
the separate subtask of argument identification (see Section 7); however, due to varying distributions
of target annotations, high empirical error in identifying locative, temporal, and directional prepositions,
and support verbs, we resorted to this aggressive filtering heuristic to avoid making too many target
identification mistakes.
15 To predict frames and roles for new and unseen LUs, SEMAFOR provides the user with an option to
mark those LUs in the input.
</footnote>
<page confidence="0.998308">
21
</page>
<note confidence="0.332878">
Computational Linguistics Volume 40, Number 1
</note>
<tableCaption confidence="0.989444">
Table 3
</tableCaption>
<table confidence="0.6393352">
Target identification results for our system and the baseline on the SemEval’07 data set. Scores in
bold denote significant improvements over the baseline (p &lt; 0.05).
TARGET IDENTIFICATION P R F1
Our technique (§4) 89.92 70.79 79.21
Baseline: J&amp;N’07 87.87 67.11 76.10
</table>
<bodyText confidence="0.9985704">
one token (e.g., chemical and biological weapon.N, ballistic missile.N), which J&amp;N’07 do not
model. The baseline also does not label variants of there be.V (e.g., there are and there has
been), which we correctly label as targets. Some examples of other single token LUs that
the baseline fails to identify are names of months, LUs that belong to the ORIGIN frame
(e.g., iranian.A), and directions (e.g., north.A or north-south.A).16
</bodyText>
<sectionHeader confidence="0.96833" genericHeader="method">
5. Frame Identification
</sectionHeader>
<bodyText confidence="0.986288">
Given targets, our parser next identifies their frames, using a statistical model.
</bodyText>
<subsectionHeader confidence="0.989004">
5.1 Lexical Units
</subsectionHeader>
<bodyText confidence="0.973739821428572">
FrameNet specifies a great deal of structural information both within and among
frames. For frame identification we make use of frame-evoking lexical units, the (lem-
matized and POS-tagged) words and phrases listed in the lexicon as referring to specific
frames. For example, listed with the BRAGGING frame are 10 LUs, including boast.N,
boast.V, boastful.A, brag.V, and braggart.N. Of course, due to polysemy and homonymy,
the same LU may be associated with multiple frames; for example, gobble.V is listed
under both the INGESTION and MAKE NOISE frames. We thus term gobble.V an ambiguous
LU. All targets in the exemplar sentences, our training data, and most in our test data,
correspond to known LUs. (See Section 5.4 for statistics of unknown LUs in the test sets.)
To incorporate frame-evoking expressions found in the training data but not the
lexicon—and to avoid the possibility of lemmatization errors—our frame identification
model will incorporate, via a latent variable, features based directly on exemplar and
training targets rather than LUs. Let L be the set of (unlemmatized and automati-
cally POS-tagged) targets found in the exemplar sentences of the lexicon and/or the
sentences in our training set. Let Lf C L be the subset of these targets annotated as
evoking a particular frame f.17 Let Ll and Llf denote the lemmatized versions of L and
Lf , respectively. Then, we write boasted.VBD ∈ LBRAGGING and boast.VBD ∈ LlBRAGGINGto
indicate that this inflected verb boasted and its lemma boast have been seen to evoke the
BRAGGING frame. Significantly, however, another target, such as toot your own horn, might
be used elsewhere to evoke this frame. We thus face the additional hurdle of predicting
frames for unknown words.
16 We do not evaluate the target identification module on the FrameNet 1.5 data set; we instead ran
controlled experiments on those data to measure performance of the statistical frame identification and
argument identification subtasks, assuming that the correct targets were given. Moreover, as discussed
in Section 3.2, the target annotations on the FrameNet 1.5 test set were fewer in number in comparison
to the training set, resulting in a mismatch of target distributions between train and test settings.
17 For example, on average, there are 34 targets per frame in the SemEval 2007 data set; the average frame
ambiguity of each target in L is 1.17.
</bodyText>
<page confidence="0.969164">
22
</page>
<note confidence="0.79514">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.9999794">
In producing full text annotations for the SemEval 2007 data set, annotators created
several domain-critical frames that were not already present in version 1.3 of the lexicon.
For our experiments we omit frames attested in neither the training data nor the exem-
plar sentences from the lexicon.18 This leaves a total of 665 frames for the SemEval 2007
data set and a total of 877 frames for the FrameNet 1.5 data set.
</bodyText>
<subsectionHeader confidence="0.998722">
5.2 Model
</subsectionHeader>
<bodyText confidence="0.999979846153846">
For a given sentence x with frame-evoking targets t, let ti denote the ith target (a word
sequence).19 Let tli denote its lemma. We seek a list f = (f1,...,fm) of frames, one per
target. In our model, the set of candidate frames for ti is defined to include every frame
f such that tli ∈ Ll f —or if tli ∈~ Ll, then every known frame (the latter condition applies
for 4.7% of the annotated targets in the SemEval 2007 development set). In both cases,
we let Fi be the set of candidate frames for the ith target in x. We denote the entire set
of frames in the lexicon as F.
To allow frame identification for targets whose lemmas were seen in neither the
exemplars nor the training data, our model includes an additional variable, fi. This
variable ranges over the seen targets in Lfi, which can be thought of as prototypes
for the expression of the frame. Importantly, frames are predicted, but prototypes are
summed over via the latent variable. The prediction rule requires a probabilistic model
over frames for a target:
</bodyText>
<equation confidence="0.952741">
1:
fi ← argmax pθ(f, f  |ti,x) (1)
fEFi EELf
</equation>
<bodyText confidence="0.913515173913043">
We model the probability of a frame f and the prototype unit f, given the target and the
sentence x as:
/� exp eTg(f, f, ti, x) (2)
pθ f  |ti, x) =
exp eTg(fi,f
f�EF E�ELfr
i, ti, x)
This is a conditional log-linear model: for f ∈ Fi and f ∈ Lf, where θ are the model
weights, and g is a vector-valued feature function. This discriminative formulation is
very flexible, allowing for a variety of (possibly overlapping) features; for example, a
feature might relate a frame type to a prototype, represent a lexical-semantic relation-
ship between a prototype and a target, or encode part of the syntax of the sentence.
Previous work has exploited WordNet for better coverage during frame identifica-
tion (Burchardt, Erk, and Frank 2005; Johansson and Nugues 2007, e.g., by expanding
the set of targets using synsets), and others have sought to extend the lexicon itself.
We differ in our use of a latent variable to incorporate lexical-semantic features in a
discriminative model, relating known lexical units to unknown words that may evoke
frames. Here we are able to take advantage of the large inventory of partially annotated
18 Automatically predicting new frames is a challenge not yet attempted to our knowledge (including here).
Note that the scoring metric (Section 3.3) gives partial credit for related frames (e.g., a more general frame
from the lexicon).
19 Here each ti is a word sequence (wu, ... , wv), 1 ≤ u ≤ v ≤ n, though in principle targets can be
noncontiguous.
</bodyText>
<page confidence="0.993936">
23
</page>
<note confidence="0.345868">
Computational Linguistics Volume 40, Number 1
</note>
<tableCaption confidence="0.992262">
Table 4
</tableCaption>
<bodyText confidence="0.984998">
Features used for frame identification (Equation (2)). All also incorporate f, the frame being
scored. E = (wE, πt) consists of the words and POS tags20 of a target seen in an exemplar or
training sentence as evoking f . The features with starred bullets were also used by Johansson
and Nugues (2007).
</bodyText>
<listItem confidence="0.994142">
• the POS of the parent of the head word of ti
•∗ the set of syntactic dependencies of the head word21 of ti
•∗ if the head word of ti is a verb, then the set of dependency labels of its children
• the dependency label on the edge connecting the head of ti and its parent
• the sequence of words in the prototype, wt
• the lemmatized sequence of words in the prototype
• the lemmatized sequence of words in the prototype and their part-of-speech tags πt
• WordNet relation22 ρ holds between E and ti
• WordNet relation22 ρ holds between E and ti, and the prototype is E
• WordNet relation22 ρ holds between E and ti, the POS tag sequence of E is πf, and the POS
tag sequence of ti is πt
</listItem>
<bodyText confidence="0.95343">
exemplar sentences. Note that this model makes an independence assumption: Each
frame is predicted independently of all others in the document. In this way the model
is similar to J&amp;N’07. However, ours is a single conditional model that shares features
and weights across all targets, frames, and prototypes, whereas the approach of J&amp;N’07
consists of many separately trained models. Moreover, our model is unique in that it
uses a latent variable to smooth over frames for unknown or ambiguous LUs.
Frame identification features depend on the preprocessed sentence x, the prototype
f and its WordNet lexical-semantic relationship with the target ti, and of course the
frame f. Our model uses binary features, which are detailed in Table 4.
</bodyText>
<subsectionHeader confidence="0.992198">
5.3 Parameter Estimation
</subsectionHeader>
<bodyText confidence="0.961404666666667">
Given a training data set (either SemEval 2007 data set or the FrameNet 1.5 full text
annotations), which is of the form ((x(j),t(j),f(j),A(j)))Nj=1, we discriminatively train the
frame identification model by maximizing the training data log-likelihood:23
</bodyText>
<equation confidence="0.9501785">
max N � mj � pθ(f (j)
θ j=1 i=1 log i , f |t(j)
E∈Lf (j) i ,x(j)) (3)
i
</equation>
<bodyText confidence="0.941544">
In Equation (3), mj denotes the number of frames in a sentence indexed by j. Note
that the training problem is non-convex because of the summed-out prototype latent
20 POS tags are found automatically during preprocessing.
21 If the target is not a subtree in the parse, we consider the words that have parents outside the span,
and apply three heuristic rules to select the head: (1) choose the first word if it is a verb; (2) choose the
last word if the first word is an adjective; (3) if the target contains the word of, and the first word is a
noun, we choose it. If none of these hold, choose the last word with an external parent to be the head.
22 These are: IDENTICAL-WORD, SYNONYM, ANTONYM (including extended and indirect antonyms),
HYPERNYM, HYPONYM, DERIVED FORM, MORPHOLOGICAL VARIANT (e.g., plural form), VERB
GROUP, ENTAILMENT, ENTAILED-BY, SEE-ALSO, CAUSAL RELATION, and NO RELATION.
23 We found no benefit on either development data set from using an L2 regularizer (zero-mean
Gaussian prior).
</bodyText>
<page confidence="0.986532">
24
</page>
<note confidence="0.782715">
Das et al. Frame-Semantic Parsing
</note>
<tableCaption confidence="0.982326">
Table 5
</tableCaption>
<bodyText confidence="0.86780375">
Frame identification results on both the SemEval 2007 data set and the FrameNet 1.5 release.
Precision, recall, and F1 were evaluated under exact and partial frame matching; see Section 3.3.
Bold indicates best results on the SemEval 2007 data, which are also statistically significant with
respect to the baseline (p &lt; 0.05).
</bodyText>
<table confidence="0.998792">
FRAME IDENTIFICATION (§5.2) exact matching partial matching
P R F1 P R F1
SemEval 2007 Data gold targets 60.21 60.21 60.21 74.21 74.21 74.21
FrameNet 1.5 Release automatic targets (§4) 69.75 54.91 61.44 77.51 61.03 68.29
J&amp;N’07 targets 65.34 49.91 56.59 74.30 56.74 64.34
Baseline: J&amp;N’07 66.22 50.57 57.34 73.86 56.41 63.97
gold targets 82.97 82.97 82.97 90.51 90.51 90.51
– unsupported features 80.30 80.30 80.30 88.91 88.91 88.91
&amp; – latent variable 75.54 75.54 75.54 85.92 85.92 85.92
</table>
<bodyText confidence="0.998949333333333">
variable f for each frame. To calculate the objective function, we need to cope with a
sum over frames and prototypes for each target (see Equation (2)), often an expensive
operation. We locally optimize the function using a distributed implementation of L-
BFGS.24 This is the most expensive model that we train: With 100 parallelized CPUs
using MapReduce (Dean and Ghemawat 2008), training takes several hours.25 Decoding
takes only a few minutes on one CPU for the test set.
</bodyText>
<subsectionHeader confidence="0.99589">
5.4 Supervised Results
</subsectionHeader>
<bodyText confidence="0.965942545454545">
SemEval 2007 Data. On the SemEval 2007 data set, we evaluate the performance of
our frame identification model given gold-standard targets and automatically identified
targets (Section 4); see Table 5. Together, our target and frame identification outperform
the baseline by 4 F1 points. To compare the frame identification stage in isolation with
that of J&amp;N’07, we ran our frame identification model with the targets identified by their
system as input. With partial matching, our model achieves a relative improvement of
0.6% F1 over J&amp;N’07, as shown in the third row of Table 5 (though this is not significant).
Note that for exact matching, the F1 score of the automatic targets setting is better than
the gold target setting. This is due to the fact that there are many unseen predicates in
the test set on which the frame identification model performs poorly; however, for the
automatic targets that are mostly seen in the lexicon and training data, the model gets
high precision, resulting in better overall F1 score.
Our frame identification model thus performs on par with the previous state of the
art for this task, and offers several advantages over J&amp;N’s formulation of the problem:
It requires only a single model, learns lexical-semantic features as part of that model
rather than requiring a preprocessing step to expand the vocabulary of frame-evoking
words, and is probabilistic, which can facilitate global reasoning.
24 We do not experiment with the initialization of model parameters during this non-convex optimization
process; all parameters are initialized to 0.0 before running the optimizer. However, in future work,
experiments can be conducted with different random initialization points to seek non-local optima.
25 In later experiments, we used another implementation with 128 parallel cores in a multi-core MPI setup
(Gropp, Lusk, and Skjellum 1994), where training took several hours.
</bodyText>
<page confidence="0.973672">
25
</page>
<note confidence="0.322707">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.999957465116279">
In the SemEval 2007 data set, for gold-standard targets, 210 out of 1,059 lemmas
were not present in the white list that we used for target identification (see Section 4).
Our model correctly identifies the frames for 4 of these 210 lemmas. For 44 of these
lemmas, the evaluation script assigns a score of 0.5 or more, suggesting that our model
predicts a closely related frame. Finally, for 190 of the 210 lemmas, a positive score is
assigned by the evaluation script. This suggests that the hidden variable model helps
in identifying related (but rarely exact) frames for unseen targets, and explains why
under exact—but not partial—frame matching, the F1 score using automatic targets is
commensurate with the score for oracle targets.26
For automatically identified targets, the F1 score falls because the model fails
to predict frames for unseen lemmas. However, our model outperforms J&amp;N’07 by
4 F1 points. The partial frame matching F1 score of our model represents a significant
improvement over the baseline (p &lt; 0.01). The precision and recall measures are
significant as well (p &lt; 0.05 and p &lt; 0.01, respectively). However, because targets
identified by J&amp;N’07 and frames classified by our frame identification model resulted
in scores on par with the baseline, we note that the significant results follow due to
better target identification. Note from the results that the automatic target identification
model shows an increase in precision, at the expense of recall. This is because the white
list for target identification restricts the model to predict frames only for known LUs.
If we label the subset of test set with already seen LUs (seen only in the training set,
excluding the exemplars) with their corresponding most frequent frame, we achieve
an exact match accuracy between 52.9% and 91.2%, depending on the accuracy of the
unseen LUs (these bounds assume, respectively, that they are all incorrectly labeled or
all correctly labeled).
FrameNet 1.5 Release. The bottom three rows of Table 5 show results on the full text
annotation test set of the FrameNet 1.5 release. Because the number of annotations
nearly doubled, we see large improvements in frame identification accuracy. Note that
we only evaluate with gold targets as input to frame identification. (As mentioned in
Section 3.2, some documents in the test set have not been annotated for all targets, so
evaluating automatic target identification would not be informative.) We found that
50.1% of the targets in the test set were ambiguous (i.e., they associated with more than
one frame either in FrameNet or our training data). On these targets, the exact frame
identification accuracy is 73.10% and the partial accuracy is 85.77%, which indicates that
the frame identification model is robust to target ambiguity. On this data set, the most
frequent frame baseline achieves an exact match accuracy between 74.0% and 88.1%,
depending on the accuracy of the unseen LUs.
We conducted further experiments with ablation of the latent variable in our frame
identification model. Recall that the decoding objective used to choose a frame by
marginalizing over a latent variable f, whose values range over targets known to
associate with the frame f being considered (see Equations (1) and (2)) in training. How
much do the prototypes, captured by the latent variable, contribute to performance?
Instead of treating f as a marginalized latent variable, we can fix its value to the observed
target.
</bodyText>
<footnote confidence="0.619888">
26 J&amp;N’07 did not report frame identification results for oracle targets; thus directly comparing the frame
identification models is difficult.
</footnote>
<page confidence="0.980095">
26
</page>
<note confidence="0.806208">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999969789473684">
An immediate effect of this choice is a blow-up in the number of features; we
must instantiate features (see Table 4) for all 4,194 unique targets observed in training.
Because each of these features needs to be associated with all 877 frames in the partition
function of Equation (2), the result is an 80-fold blowup of the feature space (the latent
variable model had 465,317 features). Such a model is not computationally feasible in
our engineering framework, so we considered a model using only features observed to
fire at some point in the training data (called “supported” features),27 resulting in only
72,058 supported features. In Table 5, we see a significant performance drop (on both
exact and partial matching accuracy) with this latent variable–free model, compared
both with our latent variable model with all features and with only supported features
(of which there are 165,200). This establishes that the latent variable in our frame
identification model helps in terms of accuracy, and lets us use a moderately sized
feature set incorporating helpful unsupported features.
Finally, in our test set, we found that 144 out of the 4,458 annotated targets were un-
seen, and our full frame identification model only labeled 23.1% of the frames correctly
for those unseen targets; in terms of partial match accuracy, the model achieved a score
of 46.6%. This, along with the results on the SemEval 2007 unseen targets, shows that
there is substantial opportunity for improvement when unseen targets are presented to
the system. We address this issue next.
</bodyText>
<subsectionHeader confidence="0.995503">
5.5 Semi-Supervised Lexicon Expansion
</subsectionHeader>
<bodyText confidence="0.99087712">
We next address the poor performance of our frame identification model on targets that
were unseen as LUs in FrameNet or as instances in training data, and briefly describe
a technique for expanding the set of lexical units with potential semantic frames that
they can associate with. These experiments were carried out on the FrameNet 1.5 data
only. We use a semi-supervised learning (SSL) technique that uses a graph constructed
from labeled and unlabeled data. The widely used graph-based SSL framework—see
Bengio, Delalleau, and Le Roux (2006) and Zhu (2008) for introductory material on this
topic—has been shown to perform better than several other semi-supervised algorithms
on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method
constructs a graph where a small portion of vertices correspond to labeled instances,
and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting
the similarity between the pair. Traditionally, Markov random walks (Szummer and
Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness
properties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, and
Lafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels from
the labeled vertices to the unlabeled ones. In our work, we are interested in multi-class
generalizations of graph-propagation algorithms suitable for NLP applications, where
each graph vertex can assume one or more out of many possible labels (Subramanya and
Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to
natural language types (not tokens) and undirected edges between them are weighted
using a similarity metric. Recently, this set-up has been used to learn soft labels on
natural language types (say, word n-grams or in our case, syntactically disambiguated
27 The use of unsupported features (i.e., those that can fire for an analysis in the partition function but not
observed to fire in the training data) has been observed to give performance improvements in NLP
problems; see, for example, Sha and Pereira (2003) and Martins et al. (2010).
</bodyText>
<page confidence="0.970675">
27
</page>
<note confidence="0.320826">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.990550548387097">
predicates) from seed data, resulting in large but noisy lexicons, which are used to
constrain structured prediction models. Applications have ranged from domain adap-
tation of sequence models (Subramanya, Petrov, and Pereira 2010) to unsupervised
learning of POS taggers by using bilingual graph-based projections (Das and Petrov
2011).
We describe our approach to graph construction, propagation for lexicon expansion,
and the use of the result to impose constraints on frame identification.
5.5.1 Graph Construction. We construct a graph with lexical units as vertices. Thus, each
vertex corresponds to a lemmatized word or phrase appended with a coarse POS tag.
We use two resources for graph construction. First, we take all the words and phrases
present in a dependency-based thesaurus constructed using syntactic cooccurrence
statistics (Lin 1998), and aggregate words and phrases that share the same lemma and
coarse POS tag. To construct this resource, Lin used a corpus containing 64 million
words that was parsed with a fast dependency parser (Lin 1993, 1994), and syntactic
contexts were used to find similar lexical items for a given word or phrase. Lin sepa-
rately treated nouns, verbs, and adjectives/adverbs, so these form the three parts of the
thesaurus. This resource gave us a list of possible LUs, much larger in size than the LUs
present in FrameNet data.
The second component of graph construction comes from FrameNet itself. We
scanned the exemplar sentences in FrameNet 1.5 and the training section of the full
text annotations and gathered a distribution over frames for each LU appearing in
FrameNet data. For a pair of LUs, we measured the Euclidean distance between their
frame distributions. This distance was next converted to a similarity score and inter-
polated with the similarity score from Lin’s dependency thesaurus. We omit further
details about the interpolation and refer the reader to full details given in Das and Smith
(2011).
For each LU, we create a vertex and link it to the K nearest neighbor LUs under the
interpolated similarity metric. The resulting graph has 64,480 vertices, 9,263 of which
are labeled seeds from FrameNet 1.5 and 55,217 of which are unlabeled. Each vertex has
a possible set of labels corresponding to the 877 frames defined in the lexicon. Figure 4
shows an excerpt from the constructed graph.
</bodyText>
<figureCaption confidence="0.623271">
Figure 4
</figureCaption>
<bodyText confidence="0.999099">
Excerpt from our constructed graph over LUs. Green LUs are observed in the FrameNet 1.5 data.
Above/below them are shown the most frequently observed frame that these LUs associate
with. The black LUs are unobserved and graph propagation produces a distribution over most
likely frames that they could evoke as target instances.
</bodyText>
<page confidence="0.986609">
28
</page>
<note confidence="0.825929">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.95125725">
5.5.2 Propagation by Optimization. Once the graph is constructed, the 9,263 seed ver-
tices with supervised frame distributions are used to propagate the semantic frame
information via their nearest neighbors to all vertices. Here we discuss two graph-
based SSL objective functions. Das and Smith (2012) compare several other graph-based
SSL algorithms for this problem; we refer the interested reader to that paper. Let V
denote the set of all vertices in our graph, Vˆ C V be the set of seed vertices, and X
denote the set of all frames. Let N (v) denote the set of neighbors of vertex v E V. Let
q = {q1, q2, . . . , q|V|} be the set of frame distributions, one per vertex. For each seed
vertex v E ˆV, we have a supervised frame distribution ˆqv. All
edges in the graph are
weighted according to the aforementioned interpolated similarity score, denoted wuv
for the edge adjacent to vertices u and v. We find q by solving:
</bodyText>
<equation confidence="0.993202">
NGF-$2 : arg min � � �wuv11qv − qu112 2 + v 11qv −1
q, s.t. q≥0, v∈ Vˆ 11ˆqv − qv1122 + µ v∈V |X|112 2
∀v∈V,IIqv111=1 v∈V,u∈N(v) (4)
</equation>
<bodyText confidence="0.9999065">
We call the objective in Equation (4) NGF-$2 because it uses normalized probability dis-
tributions at each vertex and is a Gaussian field; it also utilizes a uniform $2 penalty—the
third term in the objective function. This is a multiclass generalization of the quadratic
cost criterion (Bengio, Delalleau, and Le Roux 2006), also used by Subramanya, Petrov,
and Pereira (2010) and Das and Petrov (2011). Our second graph objective function is as
follows:
</bodyText>
<equation confidence="0.864251666666667">
� � �
UJSF-$1,2 : arg min DJS(ˆqv11qv) + µ wuvDJS(qv11qu) + v 11qv112 1 (5)
q, s.t. q≥0 v∈ Vˆ v∈V,u∈N(v) v∈V
</equation>
<bodyText confidence="0.998397473684211">
We call it UJSF-$1,2 because it uses unnormalized probability measures at each vertex
and is a Jensen-Shannon field, utilizing pairwise Jensen-Shannon divergences (Lin 1991;
Burbea and Rao 2006) and a sparse $1,2 penalty (Kowalski and Torr´esani 2009) as the
third term. Das and Smith (2012) proposed the objective function in Equation (5). It seeks
at each graph vertex a sparse measure, as we expect in a lexicon (i.e., few frames have
nonzero probability for a given target). These two graph objectives can be optimized
by iterative updates, whose details we omit in this article; more information about the
motivation behind using the $1,2 penalty in the UJSF-$1,2 objective, the optimization
procedure, and an empirical comparison of these and other objectives on another NLP
task can be found in Das and Smith (2012).
5.5.3 Constraints for Frame Identification. Once a graph-based SSL objective function is
minimized, we arrive at the optimal set of frame distributions q∗, which we use to
constrain our frame identification inference rule, expressed in Equation (1). In that
rule, ti is the ith target in a sentence x, and fi is the corresponding evoked frame. We
now add a constraint to that rule. Recall from Section 5.2 that for targets with known
lemmatized forms, Xi was defined to be the set of frames that associate with lemma tli
in the supervised data. For unknown lemmas, Xi was defined to be all the frames in the
lexicon. If the LU corresponding to ti is present in the graph, let it be the vertex vi. For
such targets ti covered by the graph, we redefine Xi as:
</bodyText>
<equation confidence="0.56498">
Xi = {f : f E M-best frames under q∗vi} (6)
</equation>
<page confidence="0.991069">
29
</page>
<table confidence="0.440354">
Computational Linguistics Volume 40, Number 1
</table>
<tableCaption confidence="0.9917455">
Table 6
Exact and partial frame identification accuracy on the FrameNet 1.5 data set with the size of
lexicon (in terms of non-zero frame components in the truncated frame distributions) used for
frame identification, given gold targets. The supervised model is compared with alternatives in
Table 5. Bold indicates best results. UJSF-t1,2 produces statistically significant results (p &lt; 0.001)
for all metrics with respect to the supervised baseline for both the unseen LUs as well as the
whole test set. Although the NGF-t2 and UJSF-t1,2 models are statistically indistinguishable,
it is noteworthy that the UJSF-t1,2 objective produces a much smaller lexicon.
</tableCaption>
<table confidence="0.809204142857143">
UNKNOWN TARGETS ALL TARGETS Graph
exact partial exact partial Lexicon
frame matching frame matching frame matching frame matching Size
Supervised 23.08 46.62 82.97 90.51 –
Self-training 18.88 42.67 82.27 90.02 –
NGF-t2 39.86 62.35 83.51 91.02 128,960
UJSF-t1,2 42.67 65.29 83.60 91.12 45,544
</table>
<bodyText confidence="0.999640888888889">
For targets ti in test data whose LUs are not present in the graph (and hence in
supervised data), Fi is the set of all frames. Note that in this semi-supervised extension
of our frame identification inference procedure, we introduced several hyperparam-
eters, namely, µ, v, K (the number of nearest neighbors for each vertex included in
the graph) and M (the number of highest scoring frames per vertex according to the
induced frame distribution). We choose these hyperparameters using cross-validation
by tuning the frame identification accuracy on unseen targets. (Different values of the
first three hyperparameters were chosen for the different graph objectives and we omit
their values here for brevity; M turned out to be 2 for all models.)
Table 6 shows frame identification accuracy, both using exact match as well as
partial match. Performance is shown on the portion of the test set containing unknown
LUs, as well as the whole test set. The final column presents lexicon size in terms
of the set of truncated frame distributions (filtered according to the top M frames in
qv for a vertex v) for all the LUs in a graph. For comparison with a semi-supervised
baseline, we consider a self-trained system. For this system, we used the supervised
frame identification system to label 70,000 sentences from the English Gigaword corpus
with frame-semantic parses. For finding targets in a raw sentence, we used a relaxed
target identification scheme, where we marked as potential frame-evoking units all
targets seen in the lexicon and all other words which were not prepositions, particles,
proper nouns, foreign words, or WH-words. We appended these automatic annotations
to the training data, resulting in 711,401 frame annotations, more than 36 times the
annotated data. These data were next used to train a frame identification model.28 This
set-up is very similar to that of Bejan (2009) who used self-training to improve frame
identification. In our setting, however, self-training hurts relative to the fully supervised
approach (Table 6).
Note that for the unknown part of the test set the graph-based objectives outperform
both the supervised model as well as the self-training baseline by a margin of ∼20%
</bodyText>
<footnote confidence="0.776991333333333">
28 We ran self-training with smaller amounts of data, but found no significant difference with the results
achieved with 711,401 frame annotations. As we observe in Table 6, in our case, self-training performs
worse than the supervised model, and we do not hope to improve with even more data.
</footnote>
<page confidence="0.989797">
30
</page>
<note confidence="0.926942">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999848125">
absolute. The best model is UJSF-f1,2, and its performance is significantly better than
the supervised model (p &lt; 0.01). It also produces a smaller lexicon (using the sparsity-
inducing penalty) than NGF-f2, requiring less memory during frame identification
inference. The small footprint can be attributed to the removal of LUs for which all
frame components were zero (qi = 0). The improvements of the graph-based objectives
over the supervised and the self-trained models are modest for the whole test set,
but the best model still has statistically significant improvements over the supervised
model (p &lt; 0.01).
</bodyText>
<sectionHeader confidence="0.985116" genericHeader="method">
6. Argument Identification
</sectionHeader>
<bodyText confidence="0.9998474">
Given a sentence x = (x1, ... , xn), the set of targets t = (t1, ... , tm), and a list of evoked
frames f = (f1, ... ,fm) corresponding to each target, argument identification is the task
of choosing which of each fi’s roles are filled, and by which parts of x. This task is most
similar to the problem of semantic role labeling, but uses a richer set of frame-specific
labels than PropBank annotations.
</bodyText>
<subsectionHeader confidence="0.991344">
6.1 Model
</subsectionHeader>
<bodyText confidence="0.999987863636364">
Let Rfi = {r1, ... , r Rfi } denote frame fi’s roles (named frame element types) observed
in an exemplar sentence and/or our training set. A subset of each frame’s roles are
marked as core roles; these roles are conceptually and/or syntactically necessary for
any given use of the frame, though they need not be overt in every sentence involving
the frame. These are roughly analogous to the core arguments ARG0–ARG5 in PropBank.
Non-core roles—analogous to the various ARGM-* in PropBank—loosely correspond to
syntactic adjuncts, and carry broadly applicable information such as the time, place,
or purpose of an event. The lexicon imposes some additional structure on roles, in-
cluding relations to other roles in the same or related frames, and semantic types with
respect to a small ontology (marking, for instance, that the entity filling the protag-
onist role must be sentient for frames of cognition). Figure 3 illustrates some of the
structural elements comprising the frame lexicon by considering the CAUSE TO MAKE NOISE
frame.
We identify a set S of spans that are candidates for filling any role r G Rfi. In
principle, S could contain any subsequence of x, but in this work we only consider
the set of contiguous spans that (a) contain a single word or (b) comprise a valid subtree
of a word and all its descendants in the dependency parse produced by the MST parser.
This covers approximately 80% of arguments in the development data for both data
sets.
The empty span, denoted ∅, is also included in S, since some roles are not explicitly
filled; in the SemEval 2007 development data, the average number of roles an evoked
frame defines is 6.7, but the average number of overt arguments is only 1.7.29 In
</bodyText>
<footnote confidence="0.8866944">
29 In the annotated data, each core role is filled with one of three types of null instantiations indicating how
the role is conveyed implicitly. For instance, the imperative construction implicitly designates a role as
filled by the addressee, and the corresponding filler is thus CNI (constructional null instantiation). In this
work we do not distinguish different types of null instantiation. The interested reader may refer to Chen
et al. (2010), who handle the different types of null instantions during argument identification.
</footnote>
<page confidence="0.999239">
31
</page>
<note confidence="0.523339">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.96924575">
training, if a labeled argument is not a subtree of the dependency parse, we add its
span to S.30
Let Ai denote the mapping of roles in Rfi to spans in S. Our model makes a
prediction for each Ai(rk) (for all roles rk E Rfi) using:
</bodyText>
<equation confidence="0.860153375">
Ai(rk) ← argmax pψ(s  |rk,fi, ti, x) (7)
sES
We use a conditional log-linear model over spans for each role of each evoked frame:
pψ( �
✓Ji (rk) S Jt x) � exp T h(s, rk,fi, ti, x) (8)
= ti� = T
Eexp h(si , rk,fi, ti, x)
s,ES
</equation>
<bodyText confidence="0.937153041666667">
Note that our model chooses the span for each role separately from the other roles
and ignores all frames except the frame the role belongs to. Our model departs
from the traditional SRL literature by modeling the argument identification problem
in a single stage, rather than first classifying token spans as arguments and then
labeling them. A constraint implicit in our formulation restricts each role to have at
most one overt argument, which is consistent with 96.5% of the role instances in the
SemEval 2007 training data and 96.4% of the role instances in the FrameNet 1.5 full text
annotations.
Out of the overt argument spans in the training data, 12% are duplicates, having
been used by some previous frame in the sentence (supposing some arbitrary ordering
of frames). Our role-filling model, unlike a sentence-global argument detection-and-
classification approach,31 permits this sort of argument sharing among frames. Word
tokens belong to an average of 1.6 argument spans, including the quarter of words that
do not belong to any argument.
Appending together the local inference decisions from Equation (7) gives us the best
mapping ˆAt for target t. Features for our log-linear model (Equation (8)) depend on the
preprocessed sentence x; the target t; a role r of frame f; and a candidate argument span
s E S.32 For features using the head word of the target t or a candidate argument span
s, we use the heuristic described in footnote 21 for selecting the head of non-subtree
spans.
Table 7 lists the feature templates used in our model. Every feature template has
a version that does not take into account the role being filled (so as to incorporate
overall biases). The C symbol indicates that the feature template also has a variant that
is conjoined with r, the name of the role being filled; and • indicates that the feature
</bodyText>
<footnote confidence="0.925594888888889">
30 Here is an example in the FrameNet 1.5 training data where this occurs. In the sentence: As capital of
Europe’s most explosive economy, Dublin seems to be changing before your very eyes, the word economy
evokes the ECONOMY frame with the phrase most explosive fulfilling the Descriptor role. However,
in the dependency parse for the sentence the phrase is not a subtree because both words in the frame
attach to the word economy. Future work may consider better heuristics to select potential arguments
from the dependency parses to recover more gold arguments than what the current work achieves.
31 J&amp;N’07, like us, identify arguments for each target.
32 In this section we use t, f, and r without subscripts because the features only consider a single role of a
single target’s frame.
</footnote>
<page confidence="0.971928">
32
</page>
<note confidence="0.778299">
Das et al. Frame-Semantic Parsing
</note>
<tableCaption confidence="0.900512333333333">
Table 7
Features used for argument identification. Section 6.1 describes the meanings of the different
circles attached to each feature.
Features with both null and non-null variants: These features come in two flavors:
if the argument is null, then one version fires; if it is overt (non-null), then another
version fires.
</tableCaption>
<figure confidence="0.522015875">
• some word in t has lemma λ • some word in t has POS π
C some word in t has lemma λ, and the
sentence uses PASSIVE voice
C some word in t has lemma λ, and the
sentence uses ACTIVE voice
* the head of t has subcategorization C some syntactic dependent of the head of t
sequence τ = (τ1, τ2, ... ) has dependency type τ
• the head of t has c syntactic dependents • bias feature (always fires)
Span content features: apply to overt argument candidates.
O POS tag π occurs for some word in s O the head word of s has POS π
O the first word of s has POS π • |s|, the number of words in the span
O the last word of s has POS π O the first word of s has lemma λ
• the syntactic dependency type τs1 of the
first word with respect to its head
O the head word of s has lemma λ • τs2, provided that |s |&gt; 2
O the last word of s: ws|s |has lemma λ • τs|s|, provided that |s |&gt; 3
</figure>
<listItem confidence="0.8772798">
• ws|s|, and its closed-class POS tag πs|s|,
provided that |s |&gt; 3
C lemma λ is realized in some word in s,
the voice denoted in the span (ACTIVE
or PASSIVE)
</listItem>
<bodyText confidence="0.965614714285714">
Syntactic features: apply to overt argument candidates.
O dependency path: sequence of labeled, O length of the dependency path
directed edges from the head word of s to
the head word of t
Span context POS features: for overt candidates, up to 6 of these features will be active.
O a word with POS π occurs up to 3 words O a word with POS π occurs up to 3 words
before the first word of s after the last word of s
</bodyText>
<figure confidence="0.439229636363636">
O the head word of s has syntactic
dependency type τ
• ws2 and its closed-class POS tag πs2,
provided that |s |&gt; 2
• the first word of s: ws1, and its POS tag πs1,
if πs1 is a closed-class POS
C lemma λ is realized in some word in s
C lemma λ is realized in some word in s, the
voice denoted in the span, s’s position
with respect to t (BEFORE, AFTER, or
OVERLAPPING)
</figure>
<listItem confidence="0.55703">
Ordering features: apply to overt argument candidates.
• the position of s with respect to the span O target-argument crossing: there is at least
</listItem>
<bodyText confidence="0.915631333333333">
of t: BEFORE, AFTER, or OVERLAPPING (i.e. one word shared by s and t, at least one
there is at least one word shared by s and t) word in s that is not in t, and at least one
word in t that is not in s
O linear word distance between the nearest
word of s and the nearest word of t,
provided s and t do not overlap
O linear word distance between the middle
word of s and the middle word of t,
provided s and t do not overlap
template additionally has a variant that is conjoined with both r and f, the name of the
frame.33 The role-name-only variants provide for smoothing over frames for common
types of roles such as Time and Place; see Matsubayashi, Okazaki, and Tsujii (2009) for
a detailed analysis of the effects of using role features at varying levels of granularity.
Certain features in our model rely on closed-class POS tags, which are defined to be
all Penn Treebank tags except for CD and tags that start with V, N, J, or R. Finally, the
</bodyText>
<page confidence="0.9338885">
33 That is, the • symbol subsumes C, which in turn subsumes O.
33
</page>
<note confidence="0.491042">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.8724025">
features that encode a count or a number are binned into groups: (−∞, −20], [−19, −10],
[−9, −5], −4, −3, −2, −1, 0, 1, 2, 3, 4, [5, 9], [10,19], [20, ∞).
</bodyText>
<subsectionHeader confidence="0.994967">
6.2 Parameter Estimation
</subsectionHeader>
<bodyText confidence="0.999706">
We train the argument identification model by:
</bodyText>
<equation confidence="0.9854166">
log pψ(A(j)
i (rk)  |f (j)
i ,t(j)
i ,x(j)) − C �ψ�2 (9)
2
</equation>
<bodyText confidence="0.9996285">
Here, N is the number of data points (sentences) in the training set, and m is the number
of frame annotations per sentence. This objective function is concave. For experiments
with the SemEval 2007 data, we trained the model using stochastic gradient ascent
(Bottou 2004) with no Gaussian regularization (C = 0).34 Early stopping was done by
tuning on the development set, and the best results were obtained with a batch size of 2
and 23 passes through the data.
On the FrameNet 1.5 release, we trained this model using L-BFGS (Liu and Nocedal
1989) and ran it for 1,000 iterations. C was tuned on the development data, and we
obtained best results for C = 1.0. We did not use stochastic gradient descent for this
data set as the number of training instances increased and parallelization of L-BFGS
on a multicore setup implementing MPI (Gropp, Lusk, and Skjellum 1994) gave faster
training speeds.
</bodyText>
<subsectionHeader confidence="0.999902">
6.3 Decoding with Beam Search
</subsectionHeader>
<bodyText confidence="0.9998741875">
Naive prediction of roles using Equation (7) may result in overlap among arguments
filling different roles of a frame, because the argument identification model fills each role
independently of the others. We want to enforce the constraint that two roles of a single
frame cannot be filled by overlapping spans.35 Toutanova, Haghighi, and Manning
(2005) presented a dynamic programming algorithm to prevent overlapping arguments
for SRL; however, their approach used an orthogonal view to the argument identi-
fication stage, wherein they labeled phrase-structure tree constituents with semantic
roles. That formulation admitted a dynamic programming approach; our formulation
of finding the best argument span for each role does not.
To eliminate illegal overlap, we adopt the beam search technique detailed in
Algorithm 1. The algorithm produces a set of k-best hypotheses for a frame instance’s
full set of role-span pairs, but uses an approximation in order to avoid scoring an
exponential number of hypotheses. After determining which roles are most likely not
explicitly filled, it considers each of the other roles in turn: In each iteration, hypotheses
incorporating a subset of roles are extended with high-scoring spans for the next role,
always maintaining k alternatives. We set k=10,000 as the beam width.36
</bodyText>
<footnote confidence="0.690152833333333">
34 This was the setting used by Das et al. (2010) and we kept it unchanged.
35 On rare occasions a frame annotation may include a secondary frame element layer, allowing arguments to
be shared among multiple roles in the frame; see Ruppenhofer et al. (2006) for details. The evaluation for
this task only considers the primary layer, which is guaranteed to have disjoint arguments.
36 We show the effect of varying beam widths in Table 9, where we present performance of an exact
algorithm for argument identification.
</footnote>
<figure confidence="0.911104">
� mj
i=1
max
ψ
|Rf (j) i
k=1
N
E
j=1
</figure>
<page confidence="0.94187">
34
</page>
<note confidence="0.647216">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.997559">
Algorithm 1 Joint decoding of frame fi’s arguments via beam search. topk(S,p*,rj)
extracts the k most probable spans from S, under p*, for role rj. extend(D0:(j−1),S&apos;)
extends each span vector in D0:(j−1) with the most probable non-overlapping span from
S&apos;, resulting in k best extensions overall.
</bodyText>
<listItem confidence="0.89491075">
Require: k &gt; 0, Rfi, S, the distribution p* from Equation 8 for each role rj ∈ Rfi
Ensure: ˆAi, a high-scoring mapping of roles offi to spans with no token overlap among
the spans
1: Calculate Ai according to Equation 7
2: ∀r ∈ Rfi such that Ai(r) = ∅, let ˆAi(r) ← ∅
3: R+fi ← {r : r ∈ Rfi,Ai(r) =� ∅}
4: n ← |R+ fi |
5: Arbitrarily order R+fi as {r1, r2, ... rn}
</listItem>
<equation confidence="0.527812666666667">
6: Let D0:j = �D0:j
1 , ... , D0:j
k � refer to the k-best list of vectors of compatible filler spans
</equation>
<bodyText confidence="0.894897">
for roles r1 through rj
</bodyText>
<listItem confidence="0.976609571428572">
7: Initialize D0:0 to be empty
8: for j = 1 to n do
9: D0:j ← extend(D0:(j−1),topk(S, p*, rj))
10: end for
11: ∀j ∈ {1,...,n}, ˆAi(rj) ← D0:n
1 [j]
12: return ˆAi
</listItem>
<sectionHeader confidence="0.66438" genericHeader="method">
6.4 Results
</sectionHeader>
<bodyText confidence="0.992574666666667">
Performance of the argument identification model is presented in Table 8 for both data
sets in consideration. We analyze them here.
SemEval 2007 Data: For the SemEval data set, the table shows how performance
varies given different types of input: correct targets and correct frames, correct targets
but automatically identified frames, and ultimately, no oracle input (the full frame
parsing scenario). Rows 1–2 isolate the argument identification task from the frame
identification task. Given gold targets and frames, our argument identification model
(without beam search) gets an F1 score of 68.09%; when beam search is applied, this
increases to 68.46%, with a noticeable increase in precision. Note that an estimated 19%
of correct arguments are excluded because they are neither single words nor complete
subtrees (see Section 6.1) of the automatic dependency parses.37
Qualitatively, the problem of candidate span recall seems to be largely due to
syntactic parse errors.38 Although our performance is limited by errors when using
the syntactic parse to determine candidate spans, it could still improve; this suggests
37 We found that using all constituents from the 10-best syntactic parses would improve oracle recall of
spans in the development set by just a couple of percentage points, at the computational cost of a larger
pool of candidate arguments per role.
38 Note that, because of our labels-only evaluation scheme (Section 3.3), arguments missing a word or
containing an extra word receive no credit. In fact, of the frame roles correctly predicted as having an
overt span, the correct span was predicted 66% of the time, while 10% of the time the predicted starting
and ending boundaries of the span were off by a total of one or two words.
</bodyText>
<page confidence="0.991019">
35
</page>
<figure confidence="0.980454466666667">
SemEval’07 Data FrameNet 1.5 Release
Computational Linguistics Volume 40, Number 1
7
8
1
2
72.98 65.30 68.93 11
72.87 65.20 68.82 10
56.01 38.48 45.62 6
72.47 64.85 68.45 9
60.98 39.70 48.09 5
62.76 41.89 50.24 4
57.85 49.86 53.56 3
ARGUMENT IDENTIFICATION targets frames decoding exact matching partial matching
P R F1 P R F1
</figure>
<tableCaption confidence="0.827886">
Table 8
</tableCaption>
<bodyText confidence="0.9656486">
Argument identification results on both the SemEval’07 data as well as the full text annotations of FrameNet 1.5. For decoding, beam and naive
indicate whether the approximate joint decoding algorithm has been used or local independent decisions have been made for argument identification,
respectively. On the SemEval 2007 data, for full parsing (automatic target, frame, and argument identification), bold scores indicate best results, which
are also significant improvements relative to the baseline (p &lt; 0.05). On the FrameNet 1.5 data set, bold scores indicate best results on automatic
frame and argument identification—this is achieved by the frame identification model that uses the UJSF-P1,2 graph-objective and automatic
argument identification using beam search. This result is statistically significant over the supervised results shown in row 9 (p &lt; 0.001). In terms of
precision and F1 score measured with partial frame matching, the results with the UJSF-P1,2 model is statistically significant over the NGF-P2 model
(p &lt; 0.05). For recall with partial frame matching, and for all the three metrics with exact frame matching, the results with the two graph objectives
are statistically indistinguishable. Note that certain partial match results are missing because in those settings, gold frames have been used for
argument identification.
</bodyText>
<figure confidence="0.824314482758621">
56.26 36.63 44.37
51.59 35.44 42.01
68.33 61.14 64.54
68.22 61.04 64.43
83.83 76.28 79.88
82.00 76.36 79.08
78.71 60.57 68.46
67.81 60.68 64.05
58.08 38.76 46.49
77.43 60.76 68.09
49.68 42.82 46.00
gold gold naive
auto supervised (§3.4) beam
gold gold beam
gold gold beam
gold SSL (UJSF-P1,2, §5.5) beam
gold SSL (NGF-P2, §5.5) beam
gold supervised (§5.2) beam
gold gold naive
Parsing (oracle targets) gold supervised (§5.2) beam
Baseline: J&amp;N’07 auto supervised (§3.4) N/A
Parsing (oracle targets)
Parsing (J&amp;N’07 targets
and frames)
Argument
identification (full)
Argument
identification (full)
Parsing (full) auto supervised (§5.2) beam
</figure>
<page confidence="0.98215">
36
</page>
<note confidence="0.908626">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999898028571429">
that the model has trouble discriminating between good and bad arguments, and that
additional feature engineering or jointly decoding arguments of a sentence’s frames
may be beneficial.
Rows 3–4 show the effect of automatic supervised frame identification on overall
frame parsing performance. There is a 22% absolute decrease in F1 (18% when partial
credit is given for related frames), suggesting that improved frame identification
or joint prediction of frames and arguments is likely to have a sizeable impact on
overall performance. Rows 4–6 compare our full model (target, frame, and argument
identification) with the baseline, showing significant improvement of more than 4.4
F1 points for both exact and partial frame matching. As with frame identification, we
compared the argument identification stage with that of J&amp;N’07 in isolation, using the
automatically identified targets and frames from the latter as input to our model. As
shown in row 5, with partial frame matching, this gave us an F1 score of 48.1% on the
test set—significantly better (p &lt; 0.05) than 45.6%, the full parsing result from J&amp;N’07
(row 6 in Table 8). This indicates that our argument identification model—which uses a
single discriminative model with a large number of features for role filling (rather than
argument labeling)—is more accurate than the previous state of the art.
FrameNet 1.5 Release: Rows 7–12 show results on the newer data set, which is part
of the FrameNet 1.5 release. As in the frame identification results of Table 5, we do not
show results using predicted targets, as we only test the performance of the statistical
models. First, we observe that for results with gold frames, the F1 score is 79.08%
with naive decoding, which is significantly higher than the SemEval counterpart. This
indicates that increased training data greatly improves performance on the task. We also
observe that beam search improves precision by nearly 2%, while getting rid of overlap-
ping arguments. When both model frames and model arguments are used, we get an
F1 score of 68.45%, which is encouraging in comparison to the best results we achieved
on the SemEval 2007 data set. Semi-supervised lexicon expansion for frame identifi-
cation further improves parsing performance. We observe the best results when the
UJSF-f1,2 graph objective is used for frame identification, significantly outperforming
the fully supervised model on parsing (p &lt; 0.001) for all evaluation metrics. The im-
provements with SSL can be explained by noting that frame identification performance
goes up when the graph objectives are used, which carries over to argument iden-
tification. Figure 5 shows an example where the graph-based model UJSF-f1,2 corrects
an error made by the fully supervised model for the unseen LU discrepancy.N, both for
frame identification and full frame-semantic parsing.
</bodyText>
<sectionHeader confidence="0.72913" genericHeader="method">
7. Collective Argument Identification with Constraints
</sectionHeader>
<bodyText confidence="0.9996101">
The argument identification strategy described in the previous section does not capture
some facets of semantic knowledge represented declaratively in FrameNet. In this
section, we present an approach that exploits such knowledge in a principled, unified,
and intuitive way. In prior NLP research using FrameNet, these interactions have been
largely ignored, though they have the potential to improve the quality and consistency
of semantic analysis. The beam search technique (Algorithm 1) handles one kind of
constraint: avoiding argument overlaps. It is, however, approximate and cannot handle
other forms of constraints.
Here, we present an algorithm that exactly identifies the best full collection of argu-
ments of a target given its semantic frame. Although we work within the conventions of
</bodyText>
<page confidence="0.994723">
37
</page>
<figure confidence="0.812824">
Computational Linguistics Volume 40, Number 1
</figure>
<figureCaption confidence="0.986145428571429">
Figure 5
(a) Output of the supervised frame-semantic parsing model, with beam search for argument
identification, given the target discrepancies. The output is incorrect. (b) Output using the
constrained frame identification model that takes into account the graph-based frame
distributions over unknown predicates. In this particular example, the UJSF-P1,2 graph
objective is used. This output matches the gold annotation. The LU discrepancy.N is unseen
in supervised FrameNet data.
</figureCaption>
<bodyText confidence="0.999889684210526">
FrameNet, our approach is generalizable to other SRL frameworks. We model argument
identification as constrained optimization, where the constraints come from expert
knowledge encoded in FrameNet. Following prior work on PropBank-style SRL that
dealt with similar constrained problems (Punyakanok et al. 2004; Punyakanok, Roth,
and Yih 2008, inter alia), we incorporate this declarative knowledge in an integer linear
program.
Because general-purpose ILP solvers are proprietary and do not fully exploit the
structure of the problem, we turn to a class of optimization techniques called dual
decomposition (Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010; Martins et al.
2011a). We derive a modular, extensible, parallelizable approach in which semantic con-
straints map not just to declarative components in the algorithm, but also to procedural
ones, in the form of “workers.” Although dual decomposition algorithms only solve
a relaxation of the original problem, we make our approach exact by wrapping the
algorithm in a branch-and-bound search procedure. 39
We experimentally find that our algorithm achieves accuracy comparable to the
results presented in Table 8, while respecting all imposed linguistic constraints. In
comparison with beam search, which violates many of these constraints, the presented
exact decoder is slower, but it decodes nine times faster than CPLEX, a state-of-the-art,
proprietary, general-purpose exact ILP solver.40
</bodyText>
<footnote confidence="0.994025333333333">
39 Open-source code in C++ implementing the AD3 algorithm can be found at
http://www.ark.cs.cmu.edu/AD3.
40 See http://www-01.ibm.com/software/integration/optimization/cplex-optimizer.
</footnote>
<page confidence="0.99024">
38
</page>
<note confidence="0.78819">
Das et al. Frame-Semantic Parsing
</note>
<subsectionHeader confidence="0.970005">
7.1 Joint Inference
</subsectionHeader>
<bodyText confidence="0.997199470588235">
Here, we take a declarative approach to modeling argument identification using an ILP
and relate our formulation to prior work in shallow semantic parsing. We show how
knowledge specified in a linguistic resource (FrameNet in our case) can be used to
derive the constraints in our ILP. Finally, we draw connections of our specification to
graphical models, a popular formalism in artificial intelligence and machine learning,
and describe how the constraints can be treated as factors in a factor graph.
7.1.1 Declarative Specification. Let us simplify notation by considering a given target t and
not considering its index in a sentence x; let the semantic frame it evokes be f. To solely
evaluate argument identification, we assume that the semantic frame f is given, which is
traditionally the case in controlled experiments used to evaluate SRL systems (M`arquez
et al. 2008). Let the set of roles associated with the frame f be Rf. In sentence x, the set
of candidate spans of words that might fill each role is enumerated, usually following
an overgenerating heuristic, which is described in Section 6.1; as before, we call this set
of spans S. As before, this set also includes the null span ∅; connecting it to a role r ∈ Rf
denotes that the role is not overt. Our approach assumes a scoring function that gives
a strength of association between roles and candidate spans. For each role r ∈ Rf and
span s ∈ S, this score is parameterized as:
</bodyText>
<equation confidence="0.614173">
c(r, s) = *Th(s, r, f, t, x), (10)
</equation>
<bodyText confidence="0.999963">
where * are model weights and h is a feature function that looks at the target t,
the evoked frame f, sentence x, and its syntactic analysis, along with r and s. This
scoring function is identical in form to the numerator’s exponent in the log-linear model
described in Equation (8). The SRL literature provides many feature functions of this
form and many ways to use machine learning to acquire *. Our presented method does
not make any assumptions about the score except that it has the form in Equation (10).
We define a vector z of binary variables zr,s ∈ {0, 1} for every role and span pair. We
have that: z ∈ {0,1}d, where d = |Rf |× |S|. zr,s = 1 means that role r is filled by span s.
Given the binary z vector, it is straightforward to recover the collection of arguments
by checking which components zr,s have an assignment of 1; we use this strategy to
find arguments, as described in Section 7.3 (strategies 4 and 6). The joint argument
identification task can be represented as a constrained optimization problem:
</bodyText>
<equation confidence="0.981125">
�maximize � c(r,s) × zr,s
r∈Rf s∈S
</equation>
<bodyText confidence="0.911683">
with respect to z ∈ {0,1}d
such that Az ≤ b (11)
In the last line, A is a k × d matrix and b is a vector of length k. Thus, Az ≤ b is a set of
k inequalities representing constraints that are imposed on the mapping between roles
and spans; these are motivated on linguistic grounds and are described next. 41
</bodyText>
<page confidence="0.526759">
41 Note that equality constraints a · z = b can be transformed into double-side inequalities a · z ≤ b and
</page>
<equation confidence="0.625496">
−a · z ≤ −b.
</equation>
<page confidence="0.971698">
39
</page>
<note confidence="0.345359">
Computational Linguistics Volume 40, Number 1
</note>
<equation confidence="0.70946125">
Uniqueness. Each role r is filled by at most one span in S. This constraint can be
expressed by:
∀r ∈ Rf, � zr,s = 1 (12)
s∈S
</equation>
<bodyText confidence="0.992189333333333">
There are O(|Rf |) such constraints. Note that because S contains the null span ∅, non-
overt roles are also captured using the above constraints. Such a constraint is used
extensively in prior literature (Punyakanok, Roth, and Yih 2008, Section 3.4.1).
Overlap. SRL systems commonly constrain roles to be filled by non-overlapping spans.
For example, Toutanova, Haghighi, and Manning (2005) used dynamic programming
over a phrase structure tree to prevent overlaps between arguments, and Punyakanok,
Roth, and Yih (2008) used constraints in an ILP to respect this requirement. Inspired by
the latter, we require that each input sentence position of x be covered by at most one
argument of t. We define:
</bodyText>
<equation confidence="0.979079">
G(i) = {s  |s ∈ S, s covers position i in x} (13)
We can define our overlap constraints in terms of G as follows, for every sentence
position i:
∀i ∈ {1, . . . , |x|}, � � zr,s ≤ 1 (14)
r∈Rf s∈G(i)
</equation>
<bodyText confidence="0.9350055">
This gives us O(|x|) constraints. It is worth noting that this constraint aims to achieve the
same effect as beam search, as described in Section 6.3, which tries to avoid argument
overlap greedily.
Pairwise “Exclusions.” For many target classes, there are pairs of roles forbidden to
appear together in the analysis of a single target token. Consider the following two
sentences:
</bodyText>
<figure confidence="0.989579">
(1) A blackberry resembles a loganberry .
Entity 1 Entity 2
(2) Most berries resemble each other.
Entities
</figure>
<figureCaption confidence="0.8838005">
Consider the uninflected target resemble in both sentences, evoking the same
meaning. In Example (1), two roles—which we call Entity 1 and Entity 2—describe two
entities that are similar to each other. In the second sentence, a phrase fulfills a third
role, called Entities, that collectively denotes some objects that are similar. It is clear that
the roles Entity 1 and Entities cannot be overt for the same target at once, because the latter
already captures the function of the former; a similar argument holds for the Entity 2 and
Entities roles. We call this phenomenon the “excludes” relationship. Let us define a set of
pairs from Rf that have this relationship:
</figureCaption>
<equation confidence="0.704953">
Exclf = {(ri, rj)  |ri and rj exclude each other}
</equation>
<page confidence="0.948022">
40
</page>
<figure confidence="0.908039833333333">
Das et al. Frame-Semantic Parsing
Using the given set, we define the constraint:
V(ri, rj) E Exclf, zri,∅ + zrj,∅ &gt; 1 (15)
If both roles are overt in a parse, this constraint will be violated, contravening the
“excludes” relationship specified between the pair of roles. If neither or only one of
the roles is overt, the constraint is satisfied. The total number of such constraints is
O(|Exclf |), which is the number of pairwise “excludes” relationships of a given frame.
Pairwise “Requirements.” The sentence in Example (1) illustrates another kind of con-
straint. The target resemble cannot have only one of Entity 1 and Entity 2 as roles in text.
For example,
(3) * A blackberry resembles.
Entity 1
</figure>
<bodyText confidence="0.764914">
Enforcing the overtness of two roles sharing this “requires” relationship is straight-
forward. We define the following set for a frame f:
</bodyText>
<equation confidence="0.838060333333333">
Reqf = {(ri, rj)  |ri and rj require each other}
This leads to constraints of the form
V(ri,rj) E Reqf,zri,∅ − zrj,∅ = 0 (16)
</equation>
<bodyText confidence="0.7727825">
If one role is overt (or absent), the other must be as well. A related constraint has
been used previously in the SRL literature, enforcing joint overtness relationships be-
tween core arguments and referential arguments (Punyakanok, Roth, and Yih 2008,
Section 3.4.1), which are formally similar to our example.42
7.1.2 Integer Linear Program and Relaxation. Plugging the constraints in Equations 12,
14, 15, and 16 into the last line of Equation (11), we have the argument identification
problem expressed as an ILP, since the indicator variables z are binary. Here, apart from
the ILP formulation, we will consider the following relaxation of Equation (11), which
replaces the binary constraint z E {0,1}d by a unit interval constraint z E [0,1]d, yielding
a linear program:
</bodyText>
<equation confidence="0.624491">
�maximize E c(r,s) X zr,s
r∈�f s∈S
</equation>
<bodyText confidence="0.611371142857143">
with respect to z E [0,1]d
such that Az &lt; b. (17)
42 We noticed that, in the annotated data, in some cases, the “requires” constraint is violated by the
FrameNet annotators. This happens mostly when one of the required roles is absent in the sentence
containing the target, but is rather instantiated in an earlier sentence (Gerber and Chai 2010). We apply
the hard constraint in Equation (16), though extending our algorithm to seek arguments outside the
sentence is straightforward. For preliminary work extending SEMAFOR this way, see Chen et al. (2010).
</bodyText>
<page confidence="0.997724">
41
</page>
<note confidence="0.545152">
Computational Linguistics Volume 40, Number 1
</note>
<bodyText confidence="0.995254288888889">
There are several LP and ILP solvers available, and a great deal of effort has been
spent by the optimization community to devise efficient generic solvers. An example
is CPLEX, a state-of-the-art solver for mixed integer programming that we use as a
baseline to solve the ILP in Equation (11) as well as its LP relaxation in Equation (17).
Like many of the best implementations, CPLEX is proprietary.
7.1.3 Linguistic Constraints from FrameNet. Although enforcing the four different sets of
constraints is intuitive from a general linguistic perspective, we ground their use in
definitive linguistic information present in the FrameNet lexicon. From the annotated
data in the FrameNet 1.5 release, we gathered that only 3.6% of the time is a role
instantiated multiple times by different spans in a sentence. This justifies the uniqueness
constraint enforced by Equation (12). Use of such a constraint is also consistent with
prior work in frame-semantic parsing (Johansson and Nugues 2007). Similarly, we
found that in the annotations, no arguments overlapped with each other for a given
target. Hence, the overlap constraints in Equation (14) are also justified.
Our third and fourth sets of constraints, presented in Equations (15) and (16), come
from FrameNet, too. Examples (1) and (2) are instances where the target resemble
evokes the SIMILARITY frame, which is defined in FrameNet as:
Two or more distinct entities, which may be concrete or abstract objects or types, are
characterized as being similar to each other. Depending on figure/ground relations, the
entities may be expressed in two distinct frame elements and constituents, Entity 1 and
Entity 2, or jointly as a single frame element and constituent, Entities.
For this frame, the lexicon lists several roles other than the three we have already
observed, such as Dimension (the dimension along which the entities are similar), Differ-
entiating fact (a fact that reveals how the concerned entities are similar or different), and
so forth. Along with the roles, FrameNet also declares the “excludes” and “requires”
relationships noted in our discussion in Section 7.1.1. The case of the SIMILARITY frame
is not unique; in Figure 1, the frame COLLABORATION, evoked by the target partners, also
has two roles Partner 1 and Partner 2 that share the “requires” relationship. In fact, out
of 877 frames in FrameNet 1.5, 204 frames have at least a pair of roles for which the
“excludes” relationship holds, and 54 list at least a pair of roles that share the “requires”
relationship.
7.1.4 Constraints as Factors in a Graphical Model. The LP in Equation (17) can be repre-
sented as a maximum a posteriori inference problem in an undirected graphical model.
In the factor graph, each component (zr,s) of the vector z corresponds to a binary
variable, and each instantiation of a constraint in Equations (12), (14), (15), and (16)
corresponds to a factor. Smith and Eisner (2008) and Martins et al. (2010) used such
a representation to impose constraints in a dependency parsing problem; the latter
discussed the equivalence of linear programs and factor graphs for representing dis-
crete optimization problems. All of our constraints take standard factor forms we can
describe using the terminology of Smith and Eisner and Martins et al. The uniqueness
constraint in Equation (12) corresponds to an XOR factor, while the overlap constraint
in Equation (14) corresponds to an ATMOSTONE factor. The constraints in Equation (15)
enforcing the “excludes” relationship can be represented with an OR factor. Finally,
each “requires” constraints in Equation (16) is equivalent to an XORWITHOUTPUT
factor.
</bodyText>
<page confidence="0.998277">
42
</page>
<note confidence="0.922058">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999303">
In the following section, we describe how we arrive at solutions for the LP in
Equation (17) using dual decomposition, and how we adapt it to efficiently recover the
exact solution of the ILP (Equation (11)), without the need of an off-the-shelf ILP solver.
</bodyText>
<subsectionHeader confidence="0.994508">
7.2 “Augmented” Dual Decomposition
</subsectionHeader>
<bodyText confidence="0.999981444444444">
Dual decomposition methods address complex optimization problems in the dual, by
dividing them into simple worker problems (subproblems), which are repeatedly solved
until a consensus is reached. The simplest technique relies on the subgradient algorithm
(Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010); as an alternative, Martins
et al. (2011a, 2011b) proposed an augmented Lagrangian technique, which is more
suitable when there are many small components —commonly the case in declarative
constrained problems, like the one at hand. Here, we present a brief overview of the
latter, which is called AD3.
Let us start by establishing some notation. Let m E {1, ... , M} index a factor, and
denote by i(m) the vector of indices of variables linked to that factor. (Recall that each
factor represents the instantiation of a constraint.) We introduce a new set of variables,
u E Rd, called the “witness” vector. We split the vector z into M overlapping pieces
z1, ... , zM, where each zm E [0,1]|i(m)|, and add M constraints zm = ui(m) to impose that
all the pieces must agree with the witness (and therefore with each other). Each of the M
constraints described in Section 7.1 can be encoded with its own matrix Am and vector
bm (which jointly define A and b in Equation (17)). For convenience, we denote by c E Rd
the score vector, whose components are c(r, s), for each r E IZf and s E S (Equation (10)),
and define the following scores for the mth subproblem:
</bodyText>
<equation confidence="0.984979">
cm(r,s) = b(r,s)−1c(r,s), V(r,s) E i(m)
</equation>
<bodyText confidence="0.999915666666667">
where b(r,s) is the number of constraints that involve role r and span s. Note that
according to this definition, c · z = EMm=1 cm · zm. We can rewrite the LP in Equation (17)
in the following equivalent form:
</bodyText>
<equation confidence="0.746508333333333">
maximize M cm · zm
E
m=1
</equation>
<bodyText confidence="0.945856230769231">
with respect to u E Rd, zm E [0, 1]i(m), Vm
such that Amzm &lt; bm, Vm
zm = ui(m), Vm (18)
We introduce Lagrange multipliers Am for the equality constraints in the last line.
The AD3 algorithm is depicted as Algorithm 2. Like dual decomposition approaches,
it repeatedly performs a broadcast operation (the zm-updates, which can be done in
parallel, one constraint per “worker”) and a gather operation (the u- and A-updates).
Each u-operation can be seen as an averaged voting which takes into consideration each
worker’s results.
Like in the subgradient method, the A-updates can be regarded as price adjust-
ments, which will affect the next round of zm-updates. The only difference with respect
to the subgradient method (Rush et al. 2010) is that each subproblem involved in a
zm-update also has a quadratic penalty that penalizes deviations from the previous
</bodyText>
<page confidence="0.999433">
43
</page>
<table confidence="0.45457725">
Computational Linguistics Volume 40, Number 1
Algorithm 2 AD3 for Argument Identification
Require: role-span matching scores c := (c(r,s))r,s, structural constraints (Am,bm)Mm=1,
penalty p &gt; 0
</table>
<listItem confidence="0.859787090909091">
1: initialize t +- 1
2: initialize u1 uniformly (i.e., u(r, s) = 0.5, Vr, s)
3: initialize each A1m = 0, Vm E 11,...,M}
4: repeat
5: for each m = 1, ... , M do
6: make a zm-update by finding the best scoring analysis for the mth constraint,
with penalties for deviating from the consensus u:
z(t+1) m+- argmax (cm +Atm) · zm − 2pIIzm − uti(m)II2 (19)
Amztm≤bm
7: end for
8: make a u-update by updating the consensus solution, averaging z1, ... , zm:
</listItem>
<equation confidence="0.990012">
u(t+1)(r,s) +- 1 z(t+1)
δ(r,s) L• m (r, s)
m:(r,s)Ei(m)
9: make a A-update:
A(mt+1) +- At m − p(z(t+1)
m − u(t+1)
i(m) ), Vm
</equation>
<listItem confidence="0.7333835">
10: t +- t + 1
11: until convergence
</listItem>
<bodyText confidence="0.959864761904762">
Ensure: relaxed primal solution u* and dual solution A*. If u* is integer, it will encode
an assignment of spans to roles. Otherwise, it will provide an upper bound of the
true optimum.
average voting; it is this term that accelerates consensus and therefore convergence.
Martins et al. (2011b) also provide stopping criteria for the iterative updates using
primal and dual residuals that measure convergence; we refer the reader to that paper
for details.
A key attraction of this algorithm is that all the components of the declarative
specification remain intact in the procedural form. Each worker corresponds exactly
to one constraint in the ILP, which corresponds to one linguistic constraint. There is no
need to work out when, during the procedure, each constraint might have an effect, as
in beam search.
7.2.1 Solving the Subproblems. In a different application, Martins et al. (2011b, Section 4)
showed how to solve each zm-subproblem associated with the XOR, XORWITHOUTPUT
and OR factors in runtime O(|i(m) |log |i(m)|). The only subproblem that remains is that
of the ATMOSTONE factor; a solution with the same runtime is given in Appendix B.
7.2.2 Exact Decoding. It is worth recalling that AD3, like other dual decomposition
algorithms, solves a relaxation of the actual problem. Although we have observed that
the relaxation is often tight (cf. Section 7.3), this is not always the case. Specifically, a
fractional solution may be obtained, which is not interpretable as an argument, and
therefore it is desirable to have a strategy to recover the exact solution. Two observations
</bodyText>
<page confidence="0.998504">
44
</page>
<note confidence="0.951289">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.997387444444444">
are noteworthy. First, the optimal value of the relaxed problem (Equation (17)) provides
an upper bound to the original problem (Equation (11)). This is because Equation (11)
has the additional integer constraint on the variables. In particular, any feasible dual
point provides an upper bound to the original problem’s optimal value. Second, dur-
ing execution of the AD3 algorithm, we always keep track of a sequence of feasible
dual points. Therefore, each iteration constructs tighter and tighter upper bounds.
With this machinery, we have all that is necessary for implementing a branch-and-
bound search that finds the exact solution of the ILP. The procedure works recursively
as follows:
</bodyText>
<listItem confidence="0.975747111111111">
1. Initialize L = −oo (our best value so far).
2. Run Algorithm 2. If the solution u∗ is integer, return u∗ and set L to the objec-
tive value. If along the execution we obtain an upper bound less than L, then
Algorithm 2 can be safely stopped and return “infeasible”—this is the bound part.
Otherwise (if u∗ is fractional) go to step 3.
3. Find the “most fractional” component of u∗ (call it u∗j ) and branch: constrain uj = 0
and go to step 2, eventually obtaining an integer solution u∗0 or infeasibility; and
then constrain uj = 1 and do the same, obtaining u∗1. Return the u∗ E {u∗0, u∗1} that
yields the largest objective value.
</listItem>
<bodyText confidence="0.9843805">
Although this procedure may have worst-case exponential runtime, we found it empir-
ically to rapidly obtain the exact solution in all test cases.
</bodyText>
<subsectionHeader confidence="0.993235">
7.3 Results with Collective Argument Identification
</subsectionHeader>
<bodyText confidence="0.999697181818182">
We present experiments only on argument identification in this section, as our goal is
to exhibit the importance of incorporating the various linguistic constraints during our
inference procedure. We present results on the full text annotations of FrameNet 1.5, and
do not experiment on the SemEval 2007 benchmark, as we have already established our
constraint-agnostic models as state-of-the-art. The model weights ψ used in the scoring
function c were learned as in Section 6.1 (i.e., by training a logistic regression model to
maximize conditional log-likelihood). The AD3 parameter ρ was initialized to 0.1, and
we followed Martins et al. (2011b) in dynamically adjusting it to keep a balance between
the primal and dual residuals.
We compare the following algorithms to demonstrate the efficacy of our collective
argument identification approach:43
</bodyText>
<listItem confidence="0.9030198">
1. Naive: This strategy selects the best span for each role r according to the score
function c(r, s), independently of all other roles—the decoding rule formalized in
Equation (7) of Section 6.1. It ignores all constraints except “uniqueness.”
2. Beam: This strategy employs greedy beam search to eliminate overlaps between
predicted arguments, as described in Algorithm 1. Note that it does not try to
respect the “excludes” and “requires” constraints between pairs of roles. The
default size of the beam in Section 1 was a safe 10,000; this resulted in extremely
slow decoding times. For time comparison, we tried beam sizes of 100 and 2 (the
latter being the smallest size that achieves the same F1 score on the FrameNet 1.5
dev set).
</listItem>
<page confidence="0.974656">
43 The first two strategies correspond to rows 7 and 9, respectively, of Table 8.
45
</page>
<note confidence="0.548577">
Computational Linguistics Volume 40, Number 1
</note>
<tableCaption confidence="0.9944">
Table 9
</tableCaption>
<bodyText confidence="0.577176333333333">
Comparison of decoding strategies in Section 7.3 on the data set released with the FrameNet 1.5
Release, given gold frames. We evaluate in terms of precision, recall, and F1 score on our test
set containing 4,458 targets. We also compute the number of constraint violations each model
makes: the three values are the numbers of overlapping arguments and violations of the
“requires” and “excludes” constraints of Section 7.1. Finally, decoding time (without feature
computation steps) on the whole test set is shown in the last column averaged over five runs.
</bodyText>
<table confidence="0.9580985">
ARGUMENT IDENTIFICATION
Method P R F1 Violations Time (s)
naive 82.00 76.36 79.08 441 45 15 1.26 f 0.01
beam = 2 83.68 76.22 79.78 0 49 0 2.74 f 0.10
beam = 100 83.83 76.28 79.88 0 50 1 29.00 f 0.25
beam = 10, 000 83.83 76.28 79.88 0 50 1 440.67 f 5.53
CPLEX,LP 83.80 76.16 79.80 0 1 0 32.67 f 1.29
CPLEX, exact 83.78 76.17 79.79 0 0 0 43.12 f 1.26
AD3, LP 83.77 76.17 79.79 2 2 0 4.17 f 0.01
AD3, exact 83.78 76.17 79.79 0 0 0 4.78 f 0.04
</table>
<listItem confidence="0.980626125">
3. CPLEX, LP: This uses CPLEX to solve the relaxed LP in Equation (17). To han-
dle fractional z, for each role r, we choose the best span s* such that s* =
argmaxs∈Sr zr,s, breaking ties arbitrarily.
4. CPLEX, exact: This tackles the actual ILP (Equation (11)) with CPLEX.
5. AD3, LP: The relaxed problem is solved using AD3. We choose a span for each role
as in strategy 3.
6. AD3, exact: This couples AD3 with branch-and-bound search to get the exact
integer solution.
</listItem>
<bodyText confidence="0.931694736842105">
Table 9 shows performance of these decoding strategies on the test set. We report
precision, recall, and F1 scores. As with experiments in previous sections, we use the
evaluation script from SemEval 2007 shared task. Because these scores do not penalize
constraint violations, we also report the number of overlap, “excludes,” and “requires”
constraints that were violated in the test set. Finally, we tabulate each setting’s decoding
time in seconds on the whole test set averaged over five runs.44 The naive model
is very fast but suffers degradation in precision and violates one constraint roughly
per nine targets. The decoding strategy of Section 6.1 used a default beam size of
10,000, which is extremely slow; a faster version of beam size 100 results in the same
precision and recall values, but is 15 times faster on our test set. Beam size 2 results
in slightly worse precision and recall values, but is even faster. All of these, however,
result in many constraint violations. Strategies involving CPLEX and AD3 perform
similarly to each other and to beam search on precision and recall, but eliminate most
or all of the constraint violations. With respect to precision and recall, exact AD3 and
beam search with a width of 10,000 were found to be statistically indistinguishable
(p &gt; 0.01). The decoding strategy with beam size 2 is 11–16 times faster than the
44 Experiments were conducted on a 64-bit machine with two 2.6-GHz dual-core CPUs (i.e., four processors
in all) and a total of 8 GB of RAM. The workers in AD3 were not parallelized, whereas CPLEX
automatically parallelized execution.
</bodyText>
<page confidence="0.998805">
46
</page>
<note confidence="0.542458">
Das et al. Frame-Semantic Parsing
</note>
<figure confidence="0.9972155">
(a) Gold annotation.
(b) Beam search output.
</figure>
<figureCaption confidence="0.989742">
Figure 6
</figureCaption>
<bodyText confidence="0.99758228125">
An example from the test set where (a) exhibits the gold annotation for a target that evokes
the COLLABORATION frame, with the Partners role filled by the span international. (b) shows
the prediction made by the beam search decoding scheme (beam = 10,000), where it marks
international with the Partner 1 role, violating the “requires” constraint; FrameNet notes that this
role should be present with the Partner 2 role. AD3 is conservative and predicts no role—it is
penalized by the evaluation script, but does not produce output that violates
linguistic constraints.
CPLEX strategies, but is only twice as fast as AD3, and results in significantly more
constraint violations. The exact algorithms are slower than the LP versions, but com-
pared with CPLEX, AD3 is significantly faster and has a narrower gap between its
exact and LP versions. We found that relaxation was tight 99.8% of the time on the test
examples.
The example in Figure 1 is taken from our test set, and shows an instance where two
roles, Partner 1 and Partner 2, share the “requires” relationship; for this example, the beam
search decoder misses the Partner 2 role, which is a violation, while our AD3 decoder
identifies both arguments correctly. Note that beam search makes plenty of linguistic
violations. We found that beam search, when violating many “requires” constraints,
often finds one role in the pair, which increases its recall. AD3 is sometimes more
conservative in such cases, predicting neither role. Figure 6 shows such an example
where beam search finds one role (Partner 1) while AD3 is more conservative and predicts
no roles. Figure 7 shows another example contrasting the output of beam search and
AD3 where the former predicts two roles sharing an “excludes” relationship; AD3 does
not violate this constraint and tries to predict a more consistent argument set. Overall,
we found it interesting that imposing the constraints did not have much effect on
standard measures of accuracy.
Table 9 only shows results with gold frames. We ran the exact version of AD3 with
automatic frames as well. When the semi-supervised graph objective UJSF-f1,2 is used
for frame identification, the performance with AD3 is only a bit worse in comparison
with beam search (row 11 in Table 8) when frame and argument identification are
evaluated together. We get a precision of 72.92, a recall of 65.22 and an F1 score of 68.86
(partial frame matching). Again, all linguistic constraints are respected, unlike beam
search.
</bodyText>
<page confidence="0.998034">
47
</page>
<note confidence="0.553721">
Computational Linguistics Volume 40, Number 1
</note>
<sectionHeader confidence="0.500139" genericHeader="method">
8. Conclusion
</sectionHeader>
<bodyText confidence="0.9998134">
We have presented an approach to rich frame-semantic parsing, based on a combination
of knowledge from FrameNet, two probabilistic models trained on full text annota-
tions released along with the FrameNet lexicon, and expedient heuristics. The frame
identification model uses latent variables in order to generalize to predicates unseen
in either the FrameNet lexicon or training data, and our results show that, quite often,
this model chooses a frame closely related to the gold-standard annotation. We also
presented an extension of this model that uses graph-based semi-supervised learning
to better generalize to new predicates; this achieves significant improvements over the
fully supervised approach. Our argument identification model, trained using maximum
conditional log-likelihood, unifies the traditionally separate steps of detecting and
</bodyText>
<figure confidence="0.935839">
(a) Gold annotation.
</figure>
<figureCaption confidence="0.99894">
Figure 7
</figureCaption>
<bodyText confidence="0.985392">
An example from the test set where (a) exhibits the gold annotation for a target that evokes
the DISCUSSION frame, with the Interlocutor 1 role filled by the span neighbors. (b) shows
the prediction made by the beam search decoding scheme (beam = 10,000), where it marks
The next morning his households and neighbors with the Interlocutors role, which violates
the “excludes” constraint with respect to the Interlocutor 2 role. In (c), AD3 marks the wrong
span as the Interlocutor 1 role, but it does not violate the constraint. Both beam and
AD3 inference miss the Topic role.
</bodyText>
<figure confidence="0.8927335">
(b) Beam search output.
(c) AD3 output.
</figure>
<page confidence="0.997707">
48
</page>
<note confidence="0.950335">
Das et al. Frame-Semantic Parsing
</note>
<bodyText confidence="0.999930033333333">
labeling arguments. Our system achieves improvements over the previous state of the
art on the SemEval 2007 benchmark data set at each stage of processing and collectively.
We also report stronger results on the more recent, larger FrameNet 1.5 release.
We applied the AD3 algorithm to collective prediction of a target’s arguments,
incorporating declarative linguistic knowledge as constraints. It outperforms the naive
local decoding scheme that is oblivious to the constraints. Furthermore, it is significantly
faster than a decoder employing a state-of-the-art proprietary solver; it is only twice as
slow as beam search (our chosen decoding method for comparison with the state of
the art), which is inexact and does not respect all linguistic constraints. This method is
easily amenable to the inclusion of additional constraints.
From our results, we observed that in comparison to the SemEval 2007 data
set, frame-semantic parsing performance significantly increases when we use the
FrameNet 1.5 release; this suggests that the increase in the number of full text anno-
tations and the size of the FrameNet lexicon is beneficial. We believe that with more
annotations in the future (say, in the range of the number of PropBank annotations), our
frame-semantic parser can reach even better accuracy, making it more useful for NLP
applications that require semantic analysis.
There are several open problems to be addressed. Firstly, we could further im-
prove the coverage of the frame-semantic parser by improving our semi-supervised
learning approach; two possibilities are custom metric learning approaches (Dhillon,
Talukdar, and Crammer 2010) that suit the frame identification problem in graph-based
SSL, and sparse word representations (Turian, Ratinov, and Bengio 2010) as features
in frame identification. The argument identification model might also benefit from
semi-supervised learning. Further feature engineering and improved preprocessing,
including tokenization into lexical units, improved syntactic parsing, and the use of
external knowledge bases, is expected to improve the system’s accuracy. Finally, the
FrameNet lexicon does not contain exhaustive semantic knowledge. Automatic frame
and role induction is an exciting direction of future research that could further enhance
our methods of automatic frame-semantic parsing. The parser described in this article
is available for download at http://www.ark.cs.cmu.edu/SEMAFOR.
</bodyText>
<sectionHeader confidence="0.938033" genericHeader="conclusions">
Appendix
</sectionHeader>
<subsectionHeader confidence="0.676587">
A. Target Identification Heuristics from J&amp;N’07
</subsectionHeader>
<bodyText confidence="0.99993025">
We describe here the filtering rules that Johansson and Nugues (2007) used for identify-
ing frame evoking targets in their SemEval 2007 shared task paper. They built a filtering
component based on heuristics that removed words that appear in certain contexts, and
kept the remaining ones.45 These are:
</bodyText>
<listItem confidence="0.99925425">
• have was retained only if had an object,
• be was retained only if it was preceded by there,
• will was removed in its modal sense,
• of course and in particular were removed,
</listItem>
<footnote confidence="0.83068">
45 Although not explicitly mentioned in the paper, we believe that these rules were applied on a white list of
potential targets seen in FrameNet and the SemEval 2007 training data.
</footnote>
<page confidence="0.996668">
49
</page>
<note confidence="0.48191">
Computational Linguistics Volume 40, Number 1
</note>
<listItem confidence="0.999561545454545">
• the prepositions above, against, at, below, beside, by, in, on, over, and under
were removed unless their head was marked as locative,
• after and before were removed unless their head was marked as temporal,
• into, to, and through were removed unless their head was marked as
direction,
• as, for, so, and with were always removed,
• because the only sense of the word of was the frame PARTITIVE, it was
removed unless it was preceded by only, member, one, most, many, some, few,
part, majority, minority, proportion, half, third, quarter, all, or none, or it was
followed by all, group, them, or us,
• all targets marked as support verbs for some other target were removed.
</listItem>
<bodyText confidence="0.991201666666667">
Note that J&amp;N’07 used a syntactic parser that provided dependency labels correspond-
ing to locative, temporal, and directional arguments, which our syntactic parser of
choice (the MST parser) does not provide.
</bodyText>
<subsectionHeader confidence="0.954583">
B. Solving ATMOSTONE subproblems in AD3
</subsectionHeader>
<bodyText confidence="0.8928245">
The ATMOSTONE subproblem can be transformed into that of projecting a point
(a1, ... , ak) onto the set
Sm = {zm E [0,1]|i(m) ||E�i(1) |zm,j &lt; 1}
This projection can be computed as follows:
</bodyText>
<listItem confidence="0.888440666666667">
1. Clip each aj into the interval [0, 1] (i.e., set a� = min{max{aj, 0},1}). If the result
satisfies k j=1 a� &lt; 1, then return (a&apos;1,. . . , ak).
2. Otherwise project (a1, ... , ak) onto the probability simplex:
</listItem>
<equation confidence="0.74376675">
lzm E [0,1]|i(m)  ||E|i(1)|zm,j = 1�
j=
This is precisely the XOR subproblem and can be solved in time O(|i(m)|
log |i(m)|).
</equation>
<bodyText confidence="0.9775415">
The proof of this procedure’s correctness follows from the proof in Appendix B of
Martins et al. (2011b).
</bodyText>
<sectionHeader confidence="0.990756" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<footnote confidence="0.920430052631579">
We thank Collin Baker, Katrin Erk, Richard
Johansson, and Nils Reiter for software, data,
evaluation scripts, and methodological
details. We thank the reviewers of this and
the earlier papers, Alan Black, Ric Crabbe,
Michael Ellsworth, Rebecca Hwa, Dan Klein,
Russell Lee-Goldman, Slav Petrov, Dan Roth,
Josef Ruppenhofer, Amarnag Subramanya,
Partha Talukdar, and members of the ARK
group for helpful comments. This work was
supported by DARPA grant NBCH-1080004,
NSF grants IIS-0836431 and IIS-0915187,
Qatar National Research Foundation grant
NPRP 08-485-1-083, Google’s support of the
Worldly Knowledge Project at CMU,
computational resources provided by Yahoo,
and TeraGrid resources provided by the
Pittsburgh Supercomputing Center under
grant TG-DBS110003.
</footnote>
<page confidence="0.990096">
50
</page>
<note confidence="0.979826">
Das et al. Frame-Semantic Parsing
</note>
<sectionHeader confidence="0.95967" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.986948512820513">
Auli, Michael and Adam Lopez. 2011.
A comparison of loopy belief propagation
and dual decomposition for integrated
CCG supertagging and parsing.
In Proceedings of the 49th Annual Meeting
of the Association for Computational
Linguistics: Human Language Technologies,
pages 470–480, Portland, OR.
Baker, Collin, Michael Ellsworth, and
Katrin Erk. 2007. SemEval-2007 task 19:
Frame semantic structure extraction.
In Proceedings of the Fourth International
Workshop on Semantic Evaluations,
pages 99–104, Prague.
Baluja, Shumeet, Rohan Seth, D. Sivakumar,
Yushi Jing, Jay Yagnik, Shankar Kumar,
Deepak Ravichandran, and Mohamed
Aly. 2008. Video suggestion and discovery
for YouTube: taking random walks
through the view graph. In Proceedings
of the 17th International Conference on
the World Wide Web, pages 895–904,
Beijing.
Bauer, Daniel and Owen Rambow. 2011.
Increasing coverage of syntactic
subcategorization patterns in FrameNet
using VerbNet. In Proceedings of the 2011
IEEE Fifth International Conference on
Semantic Computing, pages 181–184,
Washington, DC.
Bejan, Cosmin A. 2009. Learning Event
Structures From Text. Ph.D. thesis, The
University of Texas at Dallas.
Bengio, Yoshua, Olivier Delalleau, and
Nicolas Le Roux. 2006. Label propagation
and quadratic criterion. In Olivier
Chapelle, Bernhard Sch¨olkopf, and
Alexander Zien, editors, Semi-Supervised
Learning. MIT Press, Cambridge, MA,
pages 193–216.
Boas, Hans C. 2002. Bilingual FrameNet
dictionaries for machine translation.
In Proceedings of the Third International
Conference on Language Resources and
Evaluation, pages 1,364–1,371, Las Palmas.
Bottou, L´eon. 2004. Stochastic learning.
In Olivier Bousquet and Ulrike von
Luxburg, editors, Advanced Lectures on
Machine Learning, Lecture Notes in
Artificial Intelligence, LNAI 3176.
Springer Verlag, Berlin, pages 146–168.
Burbea, Jacob and Calyampudi R. Rao. 2006.
On the convexity of some divergence
measures based on entropy functions.
IEEE Transactions on Information Theory,
28(3):489–495.
Burchardt, Aljoscha, Katrin Erk, and
Anette Frank. 2005. A WordNet detour
to FrameNet. In Bernhard Fisseni,
Hans-Christian Schmitz, Bernhard
Schr¨oder, and Petra Wagner, editors,
Sprachtechnologie, mobile Kommunikation
und linguistische Resourcen, volume 8 of
Computer Studies in Language and Speech.
Peter Lang, Frankfurt am Main,
pages 408–421.
Burchardt, Aljoscha and Anette Frank. 2006.
Approaching textual entailment with LFG
and FrameNet frames. In Proceedings of the
Second PASCAL RTE Challenge Workshop,
pages 92–97, Venice.
Burchardt, Aljoscha, Marco Pennacchiotti,
Stefan Thater, and Manfred Pinkal. 2009.
Assessing the impact of frame semantics
on textual entailment. Natural Language
Engineering, 15(4):527–550.
Carreras, Xavier and Lluis M`arquez. 2004.
Introduction to the CoNLL-2004 shared
task: Semantic role labeling. In Proceedings
of the Eighth Conference on Computational
Natural Language Learning, pages 89–97,
Boston, MA.
Carreras, Xavier and Lluis M`arquez. 2005.
Introduction to the CoNLL-2005 shared
task: Semantic role labeling. In Proceedings
of the Ninth Conference on Computational
Natural Language Learning, pages 152–164,
Ann Arbor, MI.
Chang, Yin-Wen and Michael Collins.
2011. Exact decoding of phrase-based
translation models through Lagrangian
relaxation. In Proceedings of the 2011
Conference on Empirical Methods in Natural
Language Processing, pages 26–37,
Edinburgh.
Chapelle, Olivier, Bernhard Sch¨olkopf,
and Alexander Zien, editors. 2006.
Semi-Supervised Learning. MIT Press,
Cambridge, MA.
Chen, Desai, Nathan Schneider, Dipanjan
Das, and Noah A. Smith. 2010. SEMAFOR:
Frame argument resolution with
log-linear models. In Proceedings of the
5th International Workshop on Semantic
Evaluation, pages 264–267, Upssala.
Corduneanu, Adrian and Tommi Jaakkola.
2003. On information regularization.
In Proceedings of the Nineteenth Conference
on Uncertainty in Artificial Intelligence,
pages 151–158, Acapulco.
Das, Dipanjan, Andr´e F. T. Martins, and
Noah A. Smith. 2012. An exact dual
decomposition algorithm for shallow
semantic parsing with constraints.
In Proceedings of the First Joint Conference
on Lexical and Computational Semantics,
pages 209–217, Montr´eal.
</reference>
<page confidence="0.992746">
51
</page>
<note confidence="0.588669">
Computational Linguistics Volume 40, Number 1
</note>
<reference confidence="0.997016161016949">
Das, Dipanjan and Slav Petrov. 2011.
Unsupervised part-of-speech tagging
with bilingual graph-based projections.
In Proceedings of the 49th Annual Meeting
of the Association for Computational
Linguistics: Human Language Technologies,
pages 600–609, Portland, OR.
Das, Dipanjan, Nathan Schneider, Desai
Chen, and Noah A. Smith. 2010.
Probabilistic frame-semantic parsing.
In Proceedings of the Human Language
Technologies Conference of the North
American Chapter of the Association for
Computational Linguistics, pages 948–956,
Los Angeles, CA.
Das, Dipanjan and Noah A. Smith. 2011.
Semi-supervised frame-semantic parsing
for unknown predicates. In Proceedings of
the 49th Annual Meeting of the Association
for Computational Linguistics: Human
Language Technologies, pages 1,435–1,444,
Portland, OR.
Das, Dipanjan and Noah A. Smith. 2012.
Graph-based lexicon expansion with
sparsity-inducing penalties. In Proceedings
of the Human Language Technologies
Conference of the North American Chapter
of the Association for Computational
Linguistics, pages 677–687, Montr´eal.
Dean, Jeffrey and Sanjay Ghemawat. 2008.
MapReduce: Simplified data processing
on large clusters. Communications of the
ACM, 51(1):107–113.
DeNero, John and Klaus Macherey. 2011.
Model-based aligner combination using
dual decomposition. In Proceedings of
the 49th Annual Meeting of the Association
for Computational Linguistics: Human
Language Technologies, pages 420–429,
Portland, OR.
Deschacht, Koen and Marie-Francine Moens.
2009. Semi-supervised semantic role
labeling using the Latent Words Language
Model. In Proceedings of the 2009 Conference
on Empirical Methods in Natural Language
Processing, pages 21–29, Singapore.
Dhillon, Paramveer S., Partha Pratim
Talukdar, and Koby Crammer. 2010.
Learning better data representation
using inference-driven metric
learning. In Proceedings of the ACL
2010 Conference Short Papers,
pages 377–381, Uppsala.
Erk, Katrin and Sebastian Pad´o. 2006.
Shalmaneser—a toolchain for shallow
semantic parsing. In Proceedings of the
Fifth International Conference on Language
Resources and Evaluation, pages 527–532,
Genoa.
Fellbaum, Christiane, editor. 1998. WordNet:
an electronic lexical database. MIT Press,
Cambridge, MA.
Fillmore, Charles J. 1982. Frame semantics.
In Linguistics in the Morning Calm.
Hanshin Publishing Co., Seoul,
pages 111–137.
Fillmore, Charles J., Christopher R. Johnson,
and Miriam R. L. Petruck. 2003.
Background to FrameNet. International
Journal of Lexicography, 16.3:235–250.
Fleischman, Michael, Namhee Kwon, and
Eduard Hovy. 2003. Maximum entropy
models for FrameNet classification.
In Proceedings of the 2003 Conference on
Empirical Methods in Natural Language
Processing, pages 49–56, Sapporo.
Fung, Pascale and Benfeng Chen. 2004.
BiFrameNet: Bilingual frame semantics
resource construction by cross-lingual
induction. In Proceedings of the 20th
International Conference on Computational
Linguistics, pages 931–937, Geneva.
F¨urstenau, Hagen and Mirella Lapata. 2009a.
Graph alignment for semi-supervised
semantic role labeling. In Proceedings of the
2009 Conference on Empirical Methods in
Natural Language Processing, pages 11–20,
Singapore.
F¨urstenau, Hagen and Mirella Lapata. 2009b.
Semi-supervised semantic role labeling.
In Proceedings of the 12th Conference of the
European Chapter of the ACL, pages 220–228,
Athens.
F¨urstenau, Hagen and Mirella Lapata. 2012.
Semi-supervised semantic role labeling
via structural alignment. Computational
Linguistics, 38(1):135–171.
Gerber, Matthew and Joyce Chai. 2010.
Beyond NomBank: A study of implicit
arguments for nominal predicates. In
Proceedings of ACL, pages 1,583–1,592,
Uppsala.
Gildea, Daniel and Daniel Jurafsky. 2002.
Automatic labeling of semantic roles.
Computational Linguistics, 28(3):245–288.
Girju, Roxana, Preslav Nakov, Vivi Nastase,
Stan Szpakowicz, Peter Turney, and Deniz
Yuret. 2007. SemEval-2007 task 04:
Classification of semantic relations
between nominals. In Proceedings of the
Fourth International Workshop on Semantic
Evaluations, pages 13–18, Prague.
Giuglea, Ana-Maria and Alessandro
Moschitti. 2006. Shallow semantic
parsing based on FrameNet, VerbNet
and PropBank. In Proceedings of the
17th European Conference on Artificial
Intelligence, pages 563–567, Amsterdam.
</reference>
<page confidence="0.998792">
52
</page>
<note confidence="0.985456">
Das et al. Frame-Semantic Parsing
</note>
<reference confidence="0.99073613559322">
Gropp, W., E. Lusk, and A. Skjellum. 1994.
Using MPI: Portable Parallel Programming
with the Message-Passing Interface.
MIT Press, Cambridge, MA.
Hajiˇc, Jan, Massimiliano Ciaramita,
Richard Johansson, Daisuke Kawahara,
Maria Ant`onia Marti, Lluis M`arquez,
Adam Meyers, Joakim Nivre, Sebastian
Pad´o, Jan ˇStˇep´anek, Pavel Straˇn´ak, Mihai
Surdeanu, Nianwen Xue, and Yi Zhang.
2009. The CoNLL-2009 shared task:
Syntactic and semantic dependencies in
multiple languages. In Proceedings of the
Thirteenth Conference on Computational
Natural Language Learning, pages 1–18,
Boulder, CO.
Ide, Nancy and Jean V´eronis. 1998.
Introduction to the special issue on word
sense disambiguation: The state of the art.
Computational Linguistics, 24(1):2–40.
Johansson, Richard and Pierre Nugues.
2007. LTH: Semantic structure extraction
using nonprojective dependency trees.
In Proceedings of the 4th International
Workshop on Semantic Evaluations,
pages 227–230, Prague.
Johansson, Richard and Pierre Nugues. 2008.
Dependency-based semantic role labeling
of PropBank. In Proceedings of the 2008
Conference on Empirical Methods in Natural
Language Processing, pages 69–78,
Honolulu, HI.
Kingsbury, Paul and Martha Palmer. 2002.
From TreeBank to PropBank. In Proceedings
of the 3rd International Conference on
Language Resources and Evaluation,
pages 1,989–1,993, Las Palmas.
Komodakis, Nikos, Nikos Paragios, and
Georgios Tziritas. 2007. MRF optimization
via dual decomposition: Message-passing
revisited. In Eleventh International
Conference on Computer Vision, pages 1–8,
Rio de Janeiro.
Koo, Terry, Alexander M. Rush, Michael
Collins, Tommi Jaakkola, and David
Sontag. 2010. Dual decomposition for
parsing with non-projective head
automata. In Proceedings of the 2010
Conference on Empirical Methods in Natural
Language Processing, pages 1,288–1,298,
Cambridge, MA.
Kowalski, Matthieu and Bruno Torr´esani.
2009. Sparsity and persistence: Mixed
norms provide simple signal models with
dependent coefficients. Signal, Image and
Video Processing, 3:251–264.
Lang, Joel and Mirella Lapata. 2010.
Unsupervised induction of semantic roles.
In Proceedings of the Human Language
Technologies Conference of the North
American Chapter of the Association for
Computational Linguistics, pages 939–947,
Los Angeles, CA.
Lang, Joel and Mirella Lapata. 2011.
Unsupervised semantic role induction
with graph partitioning. In Proceedings
of the 2011 Conference on Empirical
Methods in Natural Language Processing,
pages 1320–1331, Edinburgh.
Lin, Dekang. 1993. Principle-based parsing
without overgeneration. In Proceedings of
the 31st Annual Meeting of the Association for
Computational Linguistics, pages 112–120,
Columbus, OH.
Lin, Dekang. 1994. Principar–an efficient,
broad-coverage, principle-based parser.
In Proceedings of the 15th Conference on
Computational Linguistics, pages 482–488,
Kyoto.
Lin, Dekang. 1998. Automatic retrieval and
clustering of similar words. In Proceedings
of the 36th Annual Meeting of the Association
for Computational Linguistics and 17th
International Conference on Computational
Linguistics, pages 768–774, Montreal.
Lin, Jianhua. 1991. Divergence measures
based on the Shannon entropy. IEEE
Transactions on Information Theory,
37(1):145–151.
Litkowski, Kenneth C. and Orin Hargraves.
2007. SemEval-2007 task 06: Word-sense
disambiguation of prepositions. In
Proceedings of the Fourth International
Workshop on Semantic Evaluations
(SemEval-2007), pages 24–29, Prague.
Liu, Dong C. and Jorge Nocedal.1989. On
the limited memory BFGS method for
large scale optimization. Mathematical
Programming, 45(3):503–528.
Marcus, Mitchell P., Mary Ann
Marcinkiewicz, and Beatrice Santorini.
1993. Building a large annotated corpus of
English: the Penn treebank. Computational
Linguistics, 19(2):313–330, June.
M`arquez, Lluis, Xavier Carreras, Kenneth C.
Litkowski, and Suzanne Stevenson. 2008.
Semantic role labeling: an introduction to
the special issue. Computational Linguistics,
34(2):145–159, June.
Martins, Andr´e F. T., Mario A. T. Figueiredo,
Pedro M. Q. Aguiar, Noah A. Smith, and
Eric P. Xing. 2011a. An augmented
Lagrangian approach to constrained MAP
inference. In Proceedings of the 28th
International Conference on Machine
Learning, pages 169–176, Bellevue, WA.
Martins, Andr´e F. T., Noah A. Smith, Pedro
M. Q. Aguiar, and Mario A. T. Figueiredo.
</reference>
<page confidence="0.9684">
53
</page>
<reference confidence="0.994753789915967">
Computational Linguistics Volume 40, Number 1
2011b. Dual decomposition with many
overlapping components. In Proceedings
of the 2011 Conference on Empirical
Methods in Natural Language Processing,
pages 238–249, Edinburgh.
Martins, Andr´e F. T., Noah A. Smith, and
Eric P. Xing. 2009. Concise integer
linear programming formulations for
dependency parsing. In Proceedings of
the Joint Conference of the 47th Annual
Meeting of the Association for Computational
Linguistics and the 4th International
Joint Conference on Natural Language
Processing of the AFNLP, pages 342–350,
Suntec.
Martins, Andr´e F. T., Noah A. Smith, Eric P.
Xing, Mario A. T. Figueiredo, and Pedro
M. Q. Aguiar. 2010. Turbo parsers:
Dependency parsing by approximate
variational inference. In Proceedings of the
2010 Conference on Empirical Methods in
Natural Language Processing, pages 34–44,
Cambridge, MA.
Matsubayashi, Yuichiroh, Naoaki Okazaki,
and Jun’ichi Tsujii. 2009. A comparative
study on generalization of semantic roles
in FrameNet. In Proceedings of the Joint
Conference of the 47th Annual Meeting of the
Association for Computational Linguistics and
the 4th International Joint Conference on
Natural Language Processing of the AFNLP,
pages 19–27, Suntec.
McDonald, Ryan, Koby Crammer, and
Fernando Pereira. 2005. Online
large-margin training of dependency
parsers. In Proceedings of the 43rd Annual
Meeting of the Association for Computational
Linguistics, pages 91–98, Ann Arbor, MI.
Meyers, Adam, Ruth Reeves, Catherine
Macleod, Rachel Szekely, Veronika
Zielinska, Brian Young, and Ralph
Grishman. 2004. The NomBank project:
An interim report. In Proceedings of the
NAACL-HLT Workshop on Frontiers
in Corpus Annotation, pages 24–31,
Boston, MA.
Moschitti, Alessandro, Paul Morarescu, and
Sanda M. Harabagiu. 2003. Open-domain
information extraction via automatic
semantic labeling. In Ingrid Russell and
Susan M. Haller, editors, Proceedings of the
Sixteenth International Florida Artificial
Intelligence Research Society Conference,
pages 397–401, St. Augustine, FL.
Narayanan, Srini and Sanda Harabagiu.
2004. Question answering based on
semantic structures. In Proceedings of
the 20th International Conference on
Computational Linguistics, Geneva.
Pad´o, Sebastian and Katrin Erk. 2005.
To cause or not to cause: cross-lingual
semantic matching for paraphrase
modelling. In Proceedings of the
Cross-Language Knowledge Induction
Workshop, Cluj-Napoca.
Pado, Sebastian and Mirella Lapata. 2005.
Cross-linguistic projection of role-semantic
information. In Proceedings of Human
Language Technology Conference and
Conference on Empirical Methods in Natural
Language Processing, pages 859–866,
Vancouver.
Pennacchiotti, Marco, Diego De Cao, Roberto
Basili, Danilo Croce, and Michael Roth.
2008. Automatic induction of FrameNet
lexical units. In Proceedings of the 2008
Conference on Empirical Methods in Natural
Language Processing, pages 457–465,
Honolulu, HI.
Pradhan, Sameer S., Wayne H. Ward,
Kadri Hacioglu, James H. Martin, and
Dan Jurafsky. 2004. Shallow semantic
parsing using support vector machines.
In Proceedings of the Human Language
Technologies Conference of the North
American Chapter of the Association for
Computational Linguistics, pages 233–240,
Boston, MA.
Punyakanok, Vasin, Dan Roth, and Wen-tau
Yih. 2008. The importance of syntactic
parsing and inference in semantic role
labeling. Computational Linguistics,
34(2):257–287.
Punyakanok, Vasin, Dan Roth, Wen-tau Yih,
and Dav Zimak. 2004. Semantic role
labeling via integer linear programming
inference. In Proceedings of the 20th
International Conference on Computational
Linguistics, pages 1,346–1,352, Geneva.
Ratnaparkhi, Adwait. 1996. A maximum
entropy model for part-of-speech tagging.
In Proceedings of the 1996 Empirical
Methods in Natural Language Processing,
pages 133–142, Copenhagen.
Riedel, Sebastian and James Clarke. 2006.
Incremental integer linear programming
for non-projective dependency parsing.
In Proceedings of the 2006 Conference on
Empirical Methods in Natural Language
Processing, pages 129–137, Sydney.
Roth, Dan and Wen-tau Yih. 2004. A linear
programming formulation for global
inference in natural language tasks.
In Proceedings of the Eighth Conference on
Computational Natural Language Learning,
pages 1–8, Boston, MA.
Ruppenhofer, Josef, Michael Ellsworth,
Miriam R. L. Petruck, Christopher R.
</reference>
<page confidence="0.995696">
54
</page>
<note confidence="0.939221">
Das et al. Frame-Semantic Parsing
</note>
<reference confidence="0.999764627118644">
Johnson, and Jan Scheffczyk. 2006.
FrameNet II: extended theory and
practice. International Computer Science
Institute, Berkeley, CA.
Rush, Alexander M. and Michael Collins.
2011. Exact decoding of syntactic
translation models through Lagrangian
relaxation. In Proceedings of the 49th Annual
Meeting of the Association for Computational
Linguistics: Human Language Technologies,
pages 72–82, Portland, OR.
Rush, Alexander M, David Sontag, Michael
Collins, and Tommi Jaakkola. 2010.
On dual decomposition and linear
programming relaxations for natural
language processing. In Proceedings of the
2010 Conference on Empirical Methods in
Natural Language Processing, pages 1–11,
Cambridge, MA.
Schuler, Karin K. 2005. VerbNet: a
broad-coverage, comprehensive verb lexicon.
Ph.D. thesis, University of Pennsylvania.
Sha, Fei and Fernando Pereira. 2003. Shallow
parsing with conditional random fields.
In Proceedings of the Human Language
Technology Conference of the North American
Chapter of the Association for Computational
Linguistics, pages 134–141, Edmonton.
Shen, Dan and Mirella Lapata. 2007. Using
semantic roles to improve question
answering. In Proceedings of the 2007 Joint
Conference on Empirical Methods in Natural
Language Processing and Computational
Natural Language Learning, pages 12–21,
Prague.
Shi, Lei and Rada Mihalcea. 2004. An
algorithm for open text semantic parsing.
In Proceedings of Workshop on Robust
Methods in Analysis of Natural Language
Data, pages 59–67, Geneva.
Shi, Lei and Rada Mihalcea. 2005. Putting
pieces together: Combining FrameNet,
VerbNet and WordNet for robust
semantic parsing. In Proceedings of the 6th
International Conference on Computational
Linguistics and Intelligent Text Processing,
pages 100–111, Mexico City.
Smith, David A. and Jason Eisner. 2008.
Dependency parsing by belief
propagation. In Proceedings of the 2008
Conference on Empirical Methods in Natural
Language Processing, pages 145–156,
Honolulu, HI.
Subramanya, Amarnag and Jeff Bilmes.
2008. Soft-supervised learning for text
classification. In Proceedings of the 2008
Conference on Empirical Methods in Natural
Language Processing, pages 1,090–1,099,
Honolulu, HI.
Subramanya, Amarnag, Slav Petrov, and
Fernando Pereira. 2010. Efficient
graph-based semi-supervised learning of
structured tagging models. In Proceedings
of the 2010 Conference on Empirical Methods
in Natural Language Processing,
pages 167–176, Cambridge, MA.
Surdeanu, Mihai, Sanda Harabagiu,
John Williams, and Paul Aarseth. 2003.
Using predicate-argument structures for
information extraction. In Proceedings of the
41st Annual Meeting on Association for
Computational Linguistics, pages 8–15,
Sapporo.
Surdeanu, Mihai, Richard Johansson,
Adam Meyers, Lluis M`arquez, and Joakim
Nivre. 2008. The CoNLL 2008 shared task
on joint parsing of syntactic and semantic
dependencies. In Proceedings of the Twelfth
Conference on Computational Natural
Language Learning, pages 159–177,
Manchester.
Szummer, Martin and Tommi Jaakkola.
2001. Partially labeled classification with
Markov random walks. In Advances in
Neural Information Processing Systems 14,
pages 945–952, Vancouver.
Talukdar, Partha Pratim and Koby Crammer.
2009. New regularized algorithms for
transductive learning. In Proceedings of the
European Conference on Machine Learning
and Knowledge Discovery in Databases,
pages 442–457, Bled.
Thompson, Cynthia A., Roger Levy,
and Christopher D. Manning. 2003.
A generative model for semantic role
labeling. In Proceedings of the European
Conference on Machine Learning,
pages 397–408, Cavtat-Dubrovnik.
Titov, Ivan and Alexandre Klementiev. 2012.
A Bayesian approach to unsupervised
semantic role induction. In Proceedings of
the 13th Conference of the European Chapter of
the Association for Computational Linguistics,
pages 12–22, Avignon.
Toutanova, Kristina, Aria Haghighi,
and Christopher Manning. 2005.
Joint learning improves semantic
role labeling. In Proceedings of the
43rd Annual Meeting of the Association
for Computational Linguistics,
pages 589–596, Ann Arbor, MI.
Turian, Joseph, Lev-Arie Ratinov,
and Yoshua Bengio. 2010. Word
representations: A simple and general
method for semi-supervised learning.
In Proceedings of the 48th Annual Meeting
of the Association for Computational
Linguistics, pages 384–394, Uppsala.
</reference>
<page confidence="0.947262">
55
</page>
<reference confidence="0.98118370967742">
Computational Linguistics Volume 40, Number 1
Weston, Jason, Fr´ed´eric Ratle, and
Ronan Collobert. 2008. Deep learning
via semi-supervised embedding.
In Proceedings of the 25th International
Conference on Machine Learning,
pages 1,168–1,175, Helsinki.
Xue, Nianwen and Martha Palmer. 2004.
Calibrating features for semantic role
labeling. In Proceedings of the 2004
Conference on Empirical Methods in Natural
Language Processing, pages 88–94,
Barcelona.
Yi, Szu-ting, Edward Loper, and Martha
Palmer. 2007. Can semantic roles
generalize across genres? In Proceedings of
the Human Language Technologies Conference
of the North American Chapter of the
Association for Computational Linguistics,
pages 548–555, Rochester, NY.
Zhu, Xiaojin. 2008. Semi-supervised
learning literature survey. Available at
http://pages.cs.wisc.edu/∼jerryzhu/
pub/ssl survey.pdf. Last Accessed
July 2013.
Zhu, Xiaojin, Zoubin Ghahramani, and
John Lafferty. 2003. Semi-supervised
learning using Gaussian fields and
harmonic functions. In Proceedings of the
20th International Conference on Machine
Learning, pages 912–919, Washington, DC.
</reference>
<page confidence="0.99839">
56
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.049704">
<title confidence="0.983324">Frame-Semantic Parsing</title>
<affiliation confidence="0.797344">Google Inc. Massachusetts Institute of Technology F. T. Priberam Labs de Carnegie Mellon University A. Carnegie Mellon University</affiliation>
<abstract confidence="0.984429357142857">Frame semantics is a linguistic theory that has been instantiated for English in the FrameNet lexicon. We solve the problem of frame-semantic parsing using a two-stage statistical model that takes lexical targets (i.e., content words and phrases) in their sentential contexts and predicts frame-semantic structures. Given a target in context, the first stage disambiguates it to a semantic frame. This model uses latent variables and semi-supervised learning to improve frame disambiguation for targets unseen at training time. The second stage finds the target’s locally expressed semantic arguments. At inference time, a fast exact dual decomposition algorithm collectively predicts all the arguments of a frame at once in order to respect declaratively stated linguistic constraints, resulting in qualitatively better structures than na¨ıve local predictors. Both components are feature-based and discriminatively trained on a small set of annotated frame-semantic parses. On the SemEval 2007 benchmark data set, the approach, along with a heuristic identifier offrame-evoking targets, outperforms the prior state of the art by significant margins. Additionally, we present experiments on the much larger FrameNet 1.5 data set. We have released our frame-semantic parser as open-source software.</abstract>
<note confidence="0.797725818181818">Inc., New York, NY 10011. E-mail: Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, MA 02139. E-mail: D. Afonso Henriques, 41 - Andar,1000-123, Lisboa, Portugal. E-mail: of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213. of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213. Submission received: 4 May 2012; revised submission received: 10 November 2012; accepted for publication: 22 December 2012. doi:10.1162/COLI a 00163 © 2014 Association for Computational Linguistics Computational Linguistics Volume 40, Number 1</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Michael Auli</author>
<author>Adam Lopez</author>
</authors>
<title>A comparison of loopy belief propagation and dual decomposition for integrated CCG supertagging and parsing.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>470--480</pages>
<location>Portland, OR.</location>
<contexts>
<context position="24937" citStr="Auli and Lopez 2011" startWordPosition="3681" endWordPosition="3684">is area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; Rush and Collins 2011). Recently, Martins et al. (2011b) showed that the success of subgradient-based dual decomposition strongly relies on breaking down the original problem into a “good” 4 In prior work, there are exceptions where identification and classification of arguments have been treated in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on semantic role labeling (Carreras and M`arquez 2004). 16 Das et al. Frame-Semantic Parsing decomposition, that is, one w</context>
</contexts>
<marker>Auli, Lopez, 2011</marker>
<rawString>Auli, Michael and Adam Lopez. 2011. A comparison of loopy belief propagation and dual decomposition for integrated CCG supertagging and parsing. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 470–480, Portland, OR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Collin Baker</author>
<author>Michael Ellsworth</author>
<author>Katrin Erk</author>
</authors>
<title>SemEval-2007 task 19: Frame semantic structure extraction.</title>
<date>2007</date>
<booktitle>In Proceedings of the Fourth International Workshop on Semantic Evaluations,</booktitle>
<pages>99--104</pages>
<location>Prague.</location>
<marker>Baker, Ellsworth, Erk, 2007</marker>
<rawString>Baker, Collin, Michael Ellsworth, and Katrin Erk. 2007. SemEval-2007 task 19: Frame semantic structure extraction. In Proceedings of the Fourth International Workshop on Semantic Evaluations, pages 99–104, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shumeet Baluja</author>
<author>Rohan Seth</author>
<author>D Sivakumar</author>
<author>Yushi Jing</author>
<author>Jay Yagnik</author>
<author>Shankar Kumar</author>
<author>Deepak Ravichandran</author>
<author>Mohamed Aly</author>
</authors>
<title>Video suggestion and discovery for YouTube: taking random walks through the view graph.</title>
<date>2008</date>
<booktitle>In Proceedings of the 17th International Conference on the World Wide Web,</booktitle>
<pages>895--904</pages>
<location>Beijing.</location>
<contexts>
<context position="61449" citStr="Baluja et al. 2008" startWordPosition="9576" endWordPosition="9579">labeled and unlabeled data. The widely used graph-based SSL framework—see Bengio, Delalleau, and Le Roux (2006) and Zhu (2008) for introductory material on this topic—has been shown to perform better than several other semi-supervised algorithms on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method constructs a graph where a small portion of vertices correspond to labeled instances, and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting the similarity between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, and Lafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels from the labeled vertices to the unlabeled ones. In our work, we are interested in multi-class generalizations of graph-propagation algorithms suitable for NLP applications, where each graph vertex can assume one or more out of many possible labels (Subramanya and Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural language types (not tokens) </context>
</contexts>
<marker>Baluja, Seth, Sivakumar, Jing, Yagnik, Kumar, Ravichandran, Aly, 2008</marker>
<rawString>Baluja, Shumeet, Rohan Seth, D. Sivakumar, Yushi Jing, Jay Yagnik, Shankar Kumar, Deepak Ravichandran, and Mohamed Aly. 2008. Video suggestion and discovery for YouTube: taking random walks through the view graph. In Proceedings of the 17th International Conference on the World Wide Web, pages 895–904, Beijing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Bauer</author>
<author>Owen Rambow</author>
</authors>
<title>Increasing coverage of syntactic subcategorization patterns in FrameNet using VerbNet.</title>
<date>2011</date>
<booktitle>In Proceedings of the 2011 IEEE Fifth International Conference on Semantic Computing,</booktitle>
<pages>181--184</pages>
<location>Washington, DC.</location>
<contexts>
<context position="12525" citStr="Bauer and Rambow (2011)" startWordPosition="1798" endWordPosition="1801">stically. To better understand the roles’ meaning for a given verb, one has to refer to a verb-specific file provided along with the PropBank corpus. Although collapsing these verb-specific core roles into tags ARG0-ARG5 leads to a small set of classes to be learned from a reasonable sized corpus, analysis shows that the roles ARG2–ARG5 serve many different purposes for different verbs. Yi, Loper, and Palmer (2007) point out that these four roles are highly overloaded and inconsistent, and they mapped them to VerbNet (Schuler 2005) thematic roles to get improvements on the SRL task. Recently, Bauer and Rambow (2011) presented a method to improve the syntactic subcategorization patterns for FrameNet lexical units using VerbNet. Instead of working with PropBank, we focus on shallow semantic parsing of sentences in the paradigm of frame semantics (Fillmore 1982), to which we turn next. 2.2 Frame-Semantic Parsing The FrameNet lexicon (Fillmore, Johnson, and Petruck 2003) contains rich linguistic information about lexical items and predicate-argument structures. A semantic frame present in this lexicon includes a list of lexical units, which are associated words and phrases that can potentially evoke it in a </context>
</contexts>
<marker>Bauer, Rambow, 2011</marker>
<rawString>Bauer, Daniel and Owen Rambow. 2011. Increasing coverage of syntactic subcategorization patterns in FrameNet using VerbNet. In Proceedings of the 2011 IEEE Fifth International Conference on Semantic Computing, pages 181–184, Washington, DC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cosmin A Bejan</author>
</authors>
<title>Learning Event Structures From Text.</title>
<date>2009</date>
<tech>Ph.D. thesis,</tech>
<institution>The University of Texas at Dallas.</institution>
<contexts>
<context position="71490" citStr="Bejan (2009)" startWordPosition="11227" endWordPosition="11228">abel 70,000 sentences from the English Gigaword corpus with frame-semantic parses. For finding targets in a raw sentence, we used a relaxed target identification scheme, where we marked as potential frame-evoking units all targets seen in the lexicon and all other words which were not prepositions, particles, proper nouns, foreign words, or WH-words. We appended these automatic annotations to the training data, resulting in 711,401 frame annotations, more than 36 times the annotated data. These data were next used to train a frame identification model.28 This set-up is very similar to that of Bejan (2009) who used self-training to improve frame identification. In our setting, however, self-training hurts relative to the fully supervised approach (Table 6). Note that for the unknown part of the test set the graph-based objectives outperform both the supervised model as well as the self-training baseline by a margin of ∼20% 28 We ran self-training with smaller amounts of data, but found no significant difference with the results achieved with 711,401 frame annotations. As we observe in Table 6, in our case, self-training performs worse than the supervised model, and we do not hope to improve wit</context>
</contexts>
<marker>Bejan, 2009</marker>
<rawString>Bejan, Cosmin A. 2009. Learning Event Structures From Text. Ph.D. thesis, The University of Texas at Dallas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yoshua Bengio</author>
<author>Olivier Delalleau</author>
<author>Nicolas Le Roux</author>
</authors>
<title>Label propagation and quadratic criterion.</title>
<date>2006</date>
<pages>193--216</pages>
<editor>In Olivier Chapelle, Bernhard Sch¨olkopf, and Alexander Zien, editors, Semi-Supervised Learning.</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA,</location>
<marker>Bengio, Delalleau, Le Roux, 2006</marker>
<rawString>Bengio, Yoshua, Olivier Delalleau, and Nicolas Le Roux. 2006. Label propagation and quadratic criterion. In Olivier Chapelle, Bernhard Sch¨olkopf, and Alexander Zien, editors, Semi-Supervised Learning. MIT Press, Cambridge, MA, pages 193–216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hans C Boas</author>
</authors>
<title>Bilingual FrameNet dictionaries for machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of the Third International Conference on Language Resources and Evaluation,</booktitle>
<pages>1--364</pages>
<location>Las Palmas.</location>
<contexts>
<context position="19657" citStr="Boas 2002" startWordPosition="2895" endWordPosition="2896">experiments on recently released FrameNet 1.5 data. In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) investigated various uses of FrameNet’s taxonomic relations for learning generalizations over roles; they trained a log-linear model on the SemEval 2007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style re</context>
</contexts>
<marker>Boas, 2002</marker>
<rawString>Boas, Hans C. 2002. Bilingual FrameNet dictionaries for machine translation. In Proceedings of the Third International Conference on Language Resources and Evaluation, pages 1,364–1,371, Las Palmas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L´eon Bottou</author>
</authors>
<title>Stochastic learning.</title>
<date>2004</date>
<booktitle>Advanced Lectures on Machine Learning, Lecture Notes in Artificial Intelligence, LNAI</booktitle>
<pages>3176</pages>
<editor>In Olivier Bousquet and Ulrike von Luxburg, editors,</editor>
<publisher>Springer Verlag,</publisher>
<location>Berlin,</location>
<contexts>
<context position="82525" citStr="Bottou 2004" startWordPosition="13210" endWordPosition="13211">es O. 33 Computational Linguistics Volume 40, Number 1 features that encode a count or a number are binned into groups: (−∞, −20], [−19, −10], [−9, −5], −4, −3, −2, −1, 0, 1, 2, 3, 4, [5, 9], [10,19], [20, ∞). 6.2 Parameter Estimation We train the argument identification model by: log pψ(A(j) i (rk) |f (j) i ,t(j) i ,x(j)) − C �ψ�2 (9) 2 Here, N is the number of data points (sentences) in the training set, and m is the number of frame annotations per sentence. This objective function is concave. For experiments with the SemEval 2007 data, we trained the model using stochastic gradient ascent (Bottou 2004) with no Gaussian regularization (C = 0).34 Early stopping was done by tuning on the development set, and the best results were obtained with a batch size of 2 and 23 passes through the data. On the FrameNet 1.5 release, we trained this model using L-BFGS (Liu and Nocedal 1989) and ran it for 1,000 iterations. C was tuned on the development data, and we obtained best results for C = 1.0. We did not use stochastic gradient descent for this data set as the number of training instances increased and parallelization of L-BFGS on a multicore setup implementing MPI (Gropp, Lusk, and Skjellum 1994) g</context>
</contexts>
<marker>Bottou, 2004</marker>
<rawString>Bottou, L´eon. 2004. Stochastic learning. In Olivier Bousquet and Ulrike von Luxburg, editors, Advanced Lectures on Machine Learning, Lecture Notes in Artificial Intelligence, LNAI 3176. Springer Verlag, Berlin, pages 146–168.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jacob Burbea</author>
<author>Calyampudi R Rao</author>
</authors>
<title>On the convexity of some divergence measures based on entropy functions.</title>
<date>2006</date>
<journal>IEEE Transactions on Information Theory,</journal>
<volume>28</volume>
<issue>3</issue>
<contexts>
<context position="67156" citStr="Burbea and Rao 2006" startWordPosition="10515" endWordPosition="10518">it also utilizes a uniform $2 penalty—the third term in the objective function. This is a multiclass generalization of the quadratic cost criterion (Bengio, Delalleau, and Le Roux 2006), also used by Subramanya, Petrov, and Pereira (2010) and Das and Petrov (2011). Our second graph objective function is as follows: � � � UJSF-$1,2 : arg min DJS(ˆqv11qv) + µ wuvDJS(qv11qu) + v 11qv112 1 (5) q, s.t. q≥0 v∈ Vˆ v∈V,u∈N(v) v∈V We call it UJSF-$1,2 because it uses unnormalized probability measures at each vertex and is a Jensen-Shannon field, utilizing pairwise Jensen-Shannon divergences (Lin 1991; Burbea and Rao 2006) and a sparse $1,2 penalty (Kowalski and Torr´esani 2009) as the third term. Das and Smith (2012) proposed the objective function in Equation (5). It seeks at each graph vertex a sparse measure, as we expect in a lexicon (i.e., few frames have nonzero probability for a given target). These two graph objectives can be optimized by iterative updates, whose details we omit in this article; more information about the motivation behind using the $1,2 penalty in the UJSF-$1,2 objective, the optimization procedure, and an empirical comparison of these and other objectives on another NLP task can be f</context>
</contexts>
<marker>Burbea, Rao, 2006</marker>
<rawString>Burbea, Jacob and Calyampudi R. Rao. 2006. On the convexity of some divergence measures based on entropy functions. IEEE Transactions on Information Theory, 28(3):489–495.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aljoscha Burchardt</author>
<author>Katrin Erk</author>
<author>Anette Frank</author>
</authors>
<title>A WordNet detour to FrameNet.</title>
<date>2005</date>
<booktitle>Sprachtechnologie, mobile Kommunikation und linguistische Resourcen,</booktitle>
<volume>8</volume>
<pages>408--421</pages>
<editor>In Bernhard Fisseni, Hans-Christian Schmitz, Bernhard Schr¨oder, and Petra Wagner, editors,</editor>
<marker>Burchardt, Erk, Frank, 2005</marker>
<rawString>Burchardt, Aljoscha, Katrin Erk, and Anette Frank. 2005. A WordNet detour to FrameNet. In Bernhard Fisseni, Hans-Christian Schmitz, Bernhard Schr¨oder, and Petra Wagner, editors, Sprachtechnologie, mobile Kommunikation und linguistische Resourcen, volume 8 of Computer Studies in Language and Speech. Peter Lang, Frankfurt am Main, pages 408–421.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aljoscha Burchardt</author>
<author>Anette Frank</author>
</authors>
<title>Approaching textual entailment with LFG and FrameNet frames.</title>
<date>2006</date>
<booktitle>In Proceedings of the Second PASCAL RTE Challenge Workshop,</booktitle>
<pages>92--97</pages>
<location>Venice.</location>
<contexts>
<context position="19947" citStr="Burchardt and Frank 2006" startWordPosition="2934" endWordPosition="2937">007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few improvements over vanilla supervised methods using unlabeled data are notable. F¨urstenau and Lapata (2009b) present a method of projecting predicate-argument structures from some seed examples to unlabeled sentences, and use a linear program formulation to find the be</context>
</contexts>
<marker>Burchardt, Frank, 2006</marker>
<rawString>Burchardt, Aljoscha and Anette Frank. 2006. Approaching textual entailment with LFG and FrameNet frames. In Proceedings of the Second PASCAL RTE Challenge Workshop, pages 92–97, Venice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aljoscha Burchardt</author>
<author>Marco Pennacchiotti</author>
<author>Stefan Thater</author>
<author>Manfred Pinkal</author>
</authors>
<title>Assessing the impact of frame semantics on textual entailment.</title>
<date>2009</date>
<journal>Natural Language Engineering,</journal>
<volume>15</volume>
<issue>4</issue>
<contexts>
<context position="19971" citStr="Burchardt et al. 2009" startWordPosition="2938" endWordPosition="2941">res for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few improvements over vanilla supervised methods using unlabeled data are notable. F¨urstenau and Lapata (2009b) present a method of projecting predicate-argument structures from some seed examples to unlabeled sentences, and use a linear program formulation to find the best alignment explaining </context>
</contexts>
<marker>Burchardt, Pennacchiotti, Thater, Pinkal, 2009</marker>
<rawString>Burchardt, Aljoscha, Marco Pennacchiotti, Stefan Thater, and Manfred Pinkal. 2009. Assessing the impact of frame semantics on textual entailment. Natural Language Engineering, 15(4):527–550.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xavier Carreras</author>
<author>Lluis M`arquez</author>
</authors>
<title>Introduction to the CoNLL-2004 shared task: Semantic role labeling.</title>
<date>2004</date>
<booktitle>In Proceedings of the Eighth Conference on Computational Natural Language Learning,</booktitle>
<pages>89--97</pages>
<location>Boston, MA.</location>
<marker>Carreras, M`arquez, 2004</marker>
<rawString>Carreras, Xavier and Lluis M`arquez. 2004. Introduction to the CoNLL-2004 shared task: Semantic role labeling. In Proceedings of the Eighth Conference on Computational Natural Language Learning, pages 89–97, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xavier Carreras</author>
<author>Lluis M`arquez</author>
</authors>
<title>Introduction to the CoNLL-2005 shared task: Semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of the Ninth Conference on Computational Natural Language Learning,</booktitle>
<pages>152--164</pages>
<location>Ann Arbor, MI.</location>
<marker>Carreras, M`arquez, 2005</marker>
<rawString>Carreras, Xavier and Lluis M`arquez. 2005. Introduction to the CoNLL-2005 shared task: Semantic role labeling. In Proceedings of the Ninth Conference on Computational Natural Language Learning, pages 152–164, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yin-Wen Chang</author>
<author>Michael Collins</author>
</authors>
<title>Exact decoding of phrase-based translation models through Lagrangian relaxation.</title>
<date>2011</date>
<booktitle>In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>26--37</pages>
<location>Edinburgh.</location>
<contexts>
<context position="24986" citStr="Chang and Collins 2011" startWordPosition="3688" endWordPosition="3691">kled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; Rush and Collins 2011). Recently, Martins et al. (2011b) showed that the success of subgradient-based dual decomposition strongly relies on breaking down the original problem into a “good” 4 In prior work, there are exceptions where identification and classification of arguments have been treated in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on semantic role labeling (Carreras and M`arquez 2004). 16 Das et al. Frame-Semantic Parsing decomposition, that is, one with few overlapping components. This leaves out m</context>
</contexts>
<marker>Chang, Collins, 2011</marker>
<rawString>Chang, Yin-Wen and Michael Collins. 2011. Exact decoding of phrase-based translation models through Lagrangian relaxation. In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, pages 26–37, Edinburgh.</rawString>
</citation>
<citation valid="true">
<title>Semi-Supervised Learning.</title>
<date>2006</date>
<editor>Chapelle, Olivier, Bernhard Sch¨olkopf, and Alexander Zien, editors.</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="16890" citStr="(2006)" startWordPosition="2467" endWordPosition="2467">ly work on frame-semantic parsing has made use of the exemplar sentences in the FrameNet corpus (see Section 3.1), each of which is annotated for a single frame and its arguments. Gildea and Jurafsky (2002) presented a discriminative model for arguments given the frame; Thompson, Levy, and Manning (2003) used a generative model for both the frame and its arguments. Fleischman, Kwon, and Hovy (2003) first used maximum entropy models to find and label arguments given the frame. Shi and Mihalcea (2004) developed a rule-based system to predict frames and their arguments in text, and Erk and Pad´o (2006) introduced the Shalmaneser tool, which uses naive Bayes classifiers to do the same. Other FrameNet SRL systems (Giuglea and Moschitti 2006, for instance) have used SVMs. Most of this work was done on an older, smaller version of FrameNet, containing around 300 frames and fewer than 500 unique semantic roles. Unlike this body of work, we experimented with the larger SemEval 2007 shared task data set, and also the newer FrameNet 1.5,3 which lists 877 frames and 1,068 role types—thus handling many more labels, and resulting in richer frame-semantic parses. Recent work in frame-semantic parsing—i</context>
<context position="60941" citStr="(2006)" startWordPosition="9503" endWordPosition="9503">ess this issue next. 5.5 Semi-Supervised Lexicon Expansion We next address the poor performance of our frame identification model on targets that were unseen as LUs in FrameNet or as instances in training data, and briefly describe a technique for expanding the set of lexical units with potential semantic frames that they can associate with. These experiments were carried out on the FrameNet 1.5 data only. We use a semi-supervised learning (SSL) technique that uses a graph constructed from labeled and unlabeled data. The widely used graph-based SSL framework—see Bengio, Delalleau, and Le Roux (2006) and Zhu (2008) for introductory material on this topic—has been shown to perform better than several other semi-supervised algorithms on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method constructs a graph where a small portion of vertices correspond to labeled instances, and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting the similarity between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Cordu</context>
<context position="84759" citStr="(2006)" startWordPosition="13572" endWordPosition="13572">coring an exponential number of hypotheses. After determining which roles are most likely not explicitly filled, it considers each of the other roles in turn: In each iteration, hypotheses incorporating a subset of roles are extended with high-scoring spans for the next role, always maintaining k alternatives. We set k=10,000 as the beam width.36 34 This was the setting used by Das et al. (2010) and we kept it unchanged. 35 On rare occasions a frame annotation may include a secondary frame element layer, allowing arguments to be shared among multiple roles in the frame; see Ruppenhofer et al. (2006) for details. The evaluation for this task only considers the primary layer, which is guaranteed to have disjoint arguments. 36 We show the effect of varying beam widths in Table 9, where we present performance of an exact algorithm for argument identification. � mj i=1 max ψ |Rf (j) i k=1 N E j=1 34 Das et al. Frame-Semantic Parsing Algorithm 1 Joint decoding of frame fi’s arguments via beam search. topk(S,p*,rj) extracts the k most probable spans from S, under p*, for role rj. extend(D0:(j−1),S&apos;) extends each span vector in D0:(j−1) with the most probable non-overlapping span from S&apos;, result</context>
</contexts>
<marker>2006</marker>
<rawString>Chapelle, Olivier, Bernhard Sch¨olkopf, and Alexander Zien, editors. 2006. Semi-Supervised Learning. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Desai Chen</author>
<author>Nathan Schneider</author>
<author>Dipanjan Das</author>
<author>Noah A Smith</author>
</authors>
<title>SEMAFOR: Frame argument resolution with log-linear models.</title>
<date>2010</date>
<booktitle>In Proceedings of the 5th International Workshop on Semantic Evaluation,</booktitle>
<pages>264--267</pages>
<contexts>
<context position="75366" citStr="Chen et al. (2010)" startWordPosition="11872" endWordPosition="11875">y filled; in the SemEval 2007 development data, the average number of roles an evoked frame defines is 6.7, but the average number of overt arguments is only 1.7.29 In 29 In the annotated data, each core role is filled with one of three types of null instantiations indicating how the role is conveyed implicitly. For instance, the imperative construction implicitly designates a role as filled by the addressee, and the corresponding filler is thus CNI (constructional null instantiation). In this work we do not distinguish different types of null instantiation. The interested reader may refer to Chen et al. (2010), who handle the different types of null instantions during argument identification. 31 Computational Linguistics Volume 40, Number 1 training, if a labeled argument is not a subtree of the dependency parse, we add its span to S.30 Let Ai denote the mapping of roles in Rfi to spans in S. Our model makes a prediction for each Ai(rk) (for all roles rk E Rfi) using: Ai(rk) ← argmax pψ(s |rk,fi, ti, x) (7) sES We use a conditional log-linear model over spans for each role of each evoked frame: pψ( � ✓Ji (rk) S Jt x) � exp T h(s, rk,fi, ti, x) (8) = ti� = T Eexp h(si , rk,fi, ti, x) s,ES Note that </context>
<context position="103737" citStr="Chen et al. (2010)" startWordPosition="16681" endWordPosition="16684">yielding a linear program: �maximize E c(r,s) X zr,s r∈�f s∈S with respect to z E [0,1]d such that Az &lt; b. (17) 42 We noticed that, in the annotated data, in some cases, the “requires” constraint is violated by the FrameNet annotators. This happens mostly when one of the required roles is absent in the sentence containing the target, but is rather instantiated in an earlier sentence (Gerber and Chai 2010). We apply the hard constraint in Equation (16), though extending our algorithm to seek arguments outside the sentence is straightforward. For preliminary work extending SEMAFOR this way, see Chen et al. (2010). 41 Computational Linguistics Volume 40, Number 1 There are several LP and ILP solvers available, and a great deal of effort has been spent by the optimization community to devise efficient generic solvers. An example is CPLEX, a state-of-the-art solver for mixed integer programming that we use as a baseline to solve the ILP in Equation (11) as well as its LP relaxation in Equation (17). Like many of the best implementations, CPLEX is proprietary. 7.1.3 Linguistic Constraints from FrameNet. Although enforcing the four different sets of constraints is intuitive from a general linguistic perspe</context>
</contexts>
<marker>Chen, Schneider, Das, Smith, 2010</marker>
<rawString>Chen, Desai, Nathan Schneider, Dipanjan Das, and Noah A. Smith. 2010. SEMAFOR: Frame argument resolution with log-linear models. In Proceedings of the 5th International Workshop on Semantic Evaluation, pages 264–267, Upssala.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adrian Corduneanu</author>
<author>Tommi Jaakkola</author>
</authors>
<title>On information regularization.</title>
<date>2003</date>
<booktitle>In Proceedings of the Nineteenth Conference on Uncertainty in Artificial Intelligence,</booktitle>
<pages>151--158</pages>
<location>Acapulco.</location>
<contexts>
<context position="61564" citStr="Corduneanu and Jaakkola 2003" startWordPosition="9594" endWordPosition="9597">2006) and Zhu (2008) for introductory material on this topic—has been shown to perform better than several other semi-supervised algorithms on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method constructs a graph where a small portion of vertices correspond to labeled instances, and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting the similarity between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, and Lafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels from the labeled vertices to the unlabeled ones. In our work, we are interested in multi-class generalizations of graph-propagation algorithms suitable for NLP applications, where each graph vertex can assume one or more out of many possible labels (Subramanya and Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural language types (not tokens) and undirected edges between them are weighted using a similarity metric. Recently, this set-up has been used to le</context>
</contexts>
<marker>Corduneanu, Jaakkola, 2003</marker>
<rawString>Corduneanu, Adrian and Tommi Jaakkola. 2003. On information regularization. In Proceedings of the Nineteenth Conference on Uncertainty in Artificial Intelligence, pages 151–158, Acapulco.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dipanjan Das</author>
<author>Andr´e F T Martins</author>
<author>Noah A Smith</author>
</authors>
<title>An exact dual decomposition algorithm for shallow semantic parsing with constraints.</title>
<date>2012</date>
<booktitle>In Proceedings of the First Joint Conference on Lexical and Computational Semantics,</booktitle>
<pages>209--217</pages>
<location>Montr´eal.</location>
<marker>Das, Martins, Smith, 2012</marker>
<rawString>Das, Dipanjan, Andr´e F. T. Martins, and Noah A. Smith. 2012. An exact dual decomposition algorithm for shallow semantic parsing with constraints. In Proceedings of the First Joint Conference on Lexical and Computational Semantics, pages 209–217, Montr´eal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dipanjan Das</author>
<author>Slav Petrov</author>
</authors>
<title>Unsupervised part-of-speech tagging with bilingual graph-based projections.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>600--609</pages>
<location>Portland, OR.</location>
<contexts>
<context position="62940" citStr="Das and Petrov 2011" startWordPosition="9804" endWordPosition="9807">t can fire for an analysis in the partition function but not observed to fire in the training data) has been observed to give performance improvements in NLP problems; see, for example, Sha and Pereira (2003) and Martins et al. (2010). 27 Computational Linguistics Volume 40, Number 1 predicates) from seed data, resulting in large but noisy lexicons, which are used to constrain structured prediction models. Applications have ranged from domain adaptation of sequence models (Subramanya, Petrov, and Pereira 2010) to unsupervised learning of POS taggers by using bilingual graph-based projections (Das and Petrov 2011). We describe our approach to graph construction, propagation for lexicon expansion, and the use of the result to impose constraints on frame identification. 5.5.1 Graph Construction. We construct a graph with lexical units as vertices. Thus, each vertex corresponds to a lemmatized word or phrase appended with a coarse POS tag. We use two resources for graph construction. First, we take all the words and phrases present in a dependency-based thesaurus constructed using syntactic cooccurrence statistics (Lin 1998), and aggregate words and phrases that share the same lemma and coarse POS tag. To</context>
<context position="66800" citStr="Das and Petrov (2011)" startWordPosition="10456" endWordPosition="10459">y score, denoted wuv for the edge adjacent to vertices u and v. We find q by solving: NGF-$2 : arg min � � �wuv11qv − qu112 2 + v 11qv −1 q, s.t. q≥0, v∈ Vˆ 11ˆqv − qv1122 + µ v∈V |X|112 2 ∀v∈V,IIqv111=1 v∈V,u∈N(v) (4) We call the objective in Equation (4) NGF-$2 because it uses normalized probability distributions at each vertex and is a Gaussian field; it also utilizes a uniform $2 penalty—the third term in the objective function. This is a multiclass generalization of the quadratic cost criterion (Bengio, Delalleau, and Le Roux 2006), also used by Subramanya, Petrov, and Pereira (2010) and Das and Petrov (2011). Our second graph objective function is as follows: � � � UJSF-$1,2 : arg min DJS(ˆqv11qv) + µ wuvDJS(qv11qu) + v 11qv112 1 (5) q, s.t. q≥0 v∈ Vˆ v∈V,u∈N(v) v∈V We call it UJSF-$1,2 because it uses unnormalized probability measures at each vertex and is a Jensen-Shannon field, utilizing pairwise Jensen-Shannon divergences (Lin 1991; Burbea and Rao 2006) and a sparse $1,2 penalty (Kowalski and Torr´esani 2009) as the third term. Das and Smith (2012) proposed the objective function in Equation (5). It seeks at each graph vertex a sparse measure, as we expect in a lexicon (i.e., few frames have </context>
</contexts>
<marker>Das, Petrov, 2011</marker>
<rawString>Das, Dipanjan and Slav Petrov. 2011. Unsupervised part-of-speech tagging with bilingual graph-based projections. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 600–609, Portland, OR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dipanjan Das</author>
<author>Nathan Schneider</author>
<author>Desai Chen</author>
<author>Noah A Smith</author>
</authors>
<title>Probabilistic frame-semantic parsing.</title>
<date>2010</date>
<booktitle>In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>948--956</pages>
<location>Los Angeles, CA.</location>
<contexts>
<context position="6109" citStr="Das et al. (2010)" startWordPosition="857" endWordPosition="860">sition algorithm (Section 7) that collectively predicts all the arguments of a frame together, thereby incorporating linguistic constraints in a principled fashion. Our open-source parser, named SEMAFOR (Semantic Analyzer of Frame Representations)1 achieves the best published results to date on the SemEval 2007 frame-semantic structure extraction task (Baker, Ellsworth, and Erk 2007). Herein, we also present results on newly released data with FrameNet 1.5, the latest edition of the lexicon. Some of the material presented in this article has appeared in previously published conference papers: Das et al. (2010) presented the basic model, Das and Smith (2011) described semi-supervised lexicon expansion, Das and Smith (2012) demonstrated a sparse variant of lexicon expansion, and Das, Martins, and Smith (2012) presented the dual decomposition algorithm for constrained joint argument identification. We present here a synthesis of those results and several additional details: 1. The set of features used in the two statistical models for frame identification and argument identification. 2. Details of a greedy beam search algorithm for argument identification that avoids illegal argument overlap. 3. Error</context>
<context position="84551" citStr="Das et al. (2010)" startWordPosition="13534" endWordPosition="13537">al overlap, we adopt the beam search technique detailed in Algorithm 1. The algorithm produces a set of k-best hypotheses for a frame instance’s full set of role-span pairs, but uses an approximation in order to avoid scoring an exponential number of hypotheses. After determining which roles are most likely not explicitly filled, it considers each of the other roles in turn: In each iteration, hypotheses incorporating a subset of roles are extended with high-scoring spans for the next role, always maintaining k alternatives. We set k=10,000 as the beam width.36 34 This was the setting used by Das et al. (2010) and we kept it unchanged. 35 On rare occasions a frame annotation may include a secondary frame element layer, allowing arguments to be shared among multiple roles in the frame; see Ruppenhofer et al. (2006) for details. The evaluation for this task only considers the primary layer, which is guaranteed to have disjoint arguments. 36 We show the effect of varying beam widths in Table 9, where we present performance of an exact algorithm for argument identification. � mj i=1 max ψ |Rf (j) i k=1 N E j=1 34 Das et al. Frame-Semantic Parsing Algorithm 1 Joint decoding of frame fi’s arguments via b</context>
</contexts>
<marker>Das, Schneider, Chen, Smith, 2010</marker>
<rawString>Das, Dipanjan, Nathan Schneider, Desai Chen, and Noah A. Smith. 2010. Probabilistic frame-semantic parsing. In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics, pages 948–956, Los Angeles, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dipanjan Das</author>
<author>Noah A Smith</author>
</authors>
<title>Semi-supervised frame-semantic parsing for unknown predicates.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>1--435</pages>
<location>Portland, OR.</location>
<contexts>
<context position="6157" citStr="Das and Smith (2011)" startWordPosition="865" endWordPosition="868">y predicts all the arguments of a frame together, thereby incorporating linguistic constraints in a principled fashion. Our open-source parser, named SEMAFOR (Semantic Analyzer of Frame Representations)1 achieves the best published results to date on the SemEval 2007 frame-semantic structure extraction task (Baker, Ellsworth, and Erk 2007). Herein, we also present results on newly released data with FrameNet 1.5, the latest edition of the lexicon. Some of the material presented in this article has appeared in previously published conference papers: Das et al. (2010) presented the basic model, Das and Smith (2011) described semi-supervised lexicon expansion, Das and Smith (2012) demonstrated a sparse variant of lexicon expansion, and Das, Martins, and Smith (2012) presented the dual decomposition algorithm for constrained joint argument identification. We present here a synthesis of those results and several additional details: 1. The set of features used in the two statistical models for frame identification and argument identification. 2. Details of a greedy beam search algorithm for argument identification that avoids illegal argument overlap. 3. Error analysis pertaining to the dual decomposition a</context>
<context position="32288" citStr="Das and Smith (2011" startWordPosition="4867" endWordPosition="4870">ents in the SemEval 2007 training set in terms of part of speech. The target POS is based on the LU annotation for the frame instance. For arguments, this reflects the part of speech of the head word (estimated from an automatic dependency parse); the percentage is out of all overt arguments. targets arguments count % count % Noun 5,155 52 Noun 9,439 55 Verb 2,785 28 Preposition or Adjective 1,411 14 complementizer 2,553 15 Preposition 296 3 Adjective 1,744 10 Adverb 103 1 Verb 1,156 7 Number 63 1 Pronoun 736 4 Conjunction 8 Adverb 373 2 Article 3 Other 1,047 6 9,824 17,048 the training set.9 Das and Smith (2011, supplementary material) give the names of the test documents for fair replication of our work. We also randomly selected 4,462 targets from the training data for development of the argument identification model (Section 6.1). Preprocessing. We preprocessed sentences in our data set with a standard set of annotations: POS tags from MXPOST (Ratnaparkhi 1996) and dependency parses from the MST parser (McDonald, Crammer, and Pereira 2005); manual syntactic parses are not available for most of the FrameNet-annotated documents. We used WordNet (Fellbaum 1998) for lemmatization. Our models treat th</context>
<context position="64570" citStr="Das and Smith (2011)" startWordPosition="10066" endWordPosition="10069"> LUs present in FrameNet data. The second component of graph construction comes from FrameNet itself. We scanned the exemplar sentences in FrameNet 1.5 and the training section of the full text annotations and gathered a distribution over frames for each LU appearing in FrameNet data. For a pair of LUs, we measured the Euclidean distance between their frame distributions. This distance was next converted to a similarity score and interpolated with the similarity score from Lin’s dependency thesaurus. We omit further details about the interpolation and refer the reader to full details given in Das and Smith (2011). For each LU, we create a vertex and link it to the K nearest neighbor LUs under the interpolated similarity metric. The resulting graph has 64,480 vertices, 9,263 of which are labeled seeds from FrameNet 1.5 and 55,217 of which are unlabeled. Each vertex has a possible set of labels corresponding to the 877 frames defined in the lexicon. Figure 4 shows an excerpt from the constructed graph. Figure 4 Excerpt from our constructed graph over LUs. Green LUs are observed in the FrameNet 1.5 data. Above/below them are shown the most frequently observed frame that these LUs associate with. The blac</context>
</contexts>
<marker>Das, Smith, 2011</marker>
<rawString>Das, Dipanjan and Noah A. Smith. 2011. Semi-supervised frame-semantic parsing for unknown predicates. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 1,435–1,444, Portland, OR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dipanjan Das</author>
<author>Noah A Smith</author>
</authors>
<title>Graph-based lexicon expansion with sparsity-inducing penalties.</title>
<date>2012</date>
<booktitle>In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>677--687</pages>
<location>Montr´eal.</location>
<contexts>
<context position="6223" citStr="Das and Smith (2012)" startWordPosition="873" endWordPosition="876">ating linguistic constraints in a principled fashion. Our open-source parser, named SEMAFOR (Semantic Analyzer of Frame Representations)1 achieves the best published results to date on the SemEval 2007 frame-semantic structure extraction task (Baker, Ellsworth, and Erk 2007). Herein, we also present results on newly released data with FrameNet 1.5, the latest edition of the lexicon. Some of the material presented in this article has appeared in previously published conference papers: Das et al. (2010) presented the basic model, Das and Smith (2011) described semi-supervised lexicon expansion, Das and Smith (2012) demonstrated a sparse variant of lexicon expansion, and Das, Martins, and Smith (2012) presented the dual decomposition algorithm for constrained joint argument identification. We present here a synthesis of those results and several additional details: 1. The set of features used in the two statistical models for frame identification and argument identification. 2. Details of a greedy beam search algorithm for argument identification that avoids illegal argument overlap. 3. Error analysis pertaining to the dual decomposition argument identification algorithm, in contrast with the beam search</context>
<context position="65641" citStr="Das and Smith (2012)" startWordPosition="10240" endWordPosition="10243">reen LUs are observed in the FrameNet 1.5 data. Above/below them are shown the most frequently observed frame that these LUs associate with. The black LUs are unobserved and graph propagation produces a distribution over most likely frames that they could evoke as target instances. 28 Das et al. Frame-Semantic Parsing 5.5.2 Propagation by Optimization. Once the graph is constructed, the 9,263 seed vertices with supervised frame distributions are used to propagate the semantic frame information via their nearest neighbors to all vertices. Here we discuss two graphbased SSL objective functions. Das and Smith (2012) compare several other graph-based SSL algorithms for this problem; we refer the interested reader to that paper. Let V denote the set of all vertices in our graph, Vˆ C V be the set of seed vertices, and X denote the set of all frames. Let N (v) denote the set of neighbors of vertex v E V. Let q = {q1, q2, . . . , q|V|} be the set of frame distributions, one per vertex. For each seed vertex v E ˆV, we have a supervised frame distribution ˆqv. All edges in the graph are weighted according to the aforementioned interpolated similarity score, denoted wuv for the edge adjacent to vertices u and v</context>
<context position="67253" citStr="Das and Smith (2012)" startWordPosition="10532" endWordPosition="10535">ass generalization of the quadratic cost criterion (Bengio, Delalleau, and Le Roux 2006), also used by Subramanya, Petrov, and Pereira (2010) and Das and Petrov (2011). Our second graph objective function is as follows: � � � UJSF-$1,2 : arg min DJS(ˆqv11qv) + µ wuvDJS(qv11qu) + v 11qv112 1 (5) q, s.t. q≥0 v∈ Vˆ v∈V,u∈N(v) v∈V We call it UJSF-$1,2 because it uses unnormalized probability measures at each vertex and is a Jensen-Shannon field, utilizing pairwise Jensen-Shannon divergences (Lin 1991; Burbea and Rao 2006) and a sparse $1,2 penalty (Kowalski and Torr´esani 2009) as the third term. Das and Smith (2012) proposed the objective function in Equation (5). It seeks at each graph vertex a sparse measure, as we expect in a lexicon (i.e., few frames have nonzero probability for a given target). These two graph objectives can be optimized by iterative updates, whose details we omit in this article; more information about the motivation behind using the $1,2 penalty in the UJSF-$1,2 objective, the optimization procedure, and an empirical comparison of these and other objectives on another NLP task can be found in Das and Smith (2012). 5.5.3 Constraints for Frame Identification. Once a graph-based SSL </context>
</contexts>
<marker>Das, Smith, 2012</marker>
<rawString>Das, Dipanjan and Noah A. Smith. 2012. Graph-based lexicon expansion with sparsity-inducing penalties. In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics, pages 677–687, Montr´eal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeffrey Dean</author>
<author>Sanjay Ghemawat</author>
</authors>
<title>MapReduce: Simplified data processing on large clusters.</title>
<date>2008</date>
<journal>Communications of the ACM,</journal>
<volume>51</volume>
<issue>1</issue>
<contexts>
<context position="53040" citStr="Dean and Ghemawat 2008" startWordPosition="8239" endWordPosition="8242">91 56.59 74.30 56.74 64.34 Baseline: J&amp;N’07 66.22 50.57 57.34 73.86 56.41 63.97 gold targets 82.97 82.97 82.97 90.51 90.51 90.51 – unsupported features 80.30 80.30 80.30 88.91 88.91 88.91 &amp; – latent variable 75.54 75.54 75.54 85.92 85.92 85.92 variable f for each frame. To calculate the objective function, we need to cope with a sum over frames and prototypes for each target (see Equation (2)), often an expensive operation. We locally optimize the function using a distributed implementation of LBFGS.24 This is the most expensive model that we train: With 100 parallelized CPUs using MapReduce (Dean and Ghemawat 2008), training takes several hours.25 Decoding takes only a few minutes on one CPU for the test set. 5.4 Supervised Results SemEval 2007 Data. On the SemEval 2007 data set, we evaluate the performance of our frame identification model given gold-standard targets and automatically identified targets (Section 4); see Table 5. Together, our target and frame identification outperform the baseline by 4 F1 points. To compare the frame identification stage in isolation with that of J&amp;N’07, we ran our frame identification model with the targets identified by their system as input. With partial matching, o</context>
</contexts>
<marker>Dean, Ghemawat, 2008</marker>
<rawString>Dean, Jeffrey and Sanjay Ghemawat. 2008. MapReduce: Simplified data processing on large clusters. Communications of the ACM, 51(1):107–113.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John DeNero</author>
<author>Klaus Macherey</author>
</authors>
<title>Model-based aligner combination using dual decomposition.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>420--429</pages>
<location>Portland, OR.</location>
<contexts>
<context position="25012" citStr="DeNero and Macherey 2011" startWordPosition="3692" endWordPosition="3695">solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; Rush and Collins 2011). Recently, Martins et al. (2011b) showed that the success of subgradient-based dual decomposition strongly relies on breaking down the original problem into a “good” 4 In prior work, there are exceptions where identification and classification of arguments have been treated in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on semantic role labeling (Carreras and M`arquez 2004). 16 Das et al. Frame-Semantic Parsing decomposition, that is, one with few overlapping components. This leaves out many declarative constraine</context>
</contexts>
<marker>DeNero, Macherey, 2011</marker>
<rawString>DeNero, John and Klaus Macherey. 2011. Model-based aligner combination using dual decomposition. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 420–429, Portland, OR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Koen Deschacht</author>
<author>Marie-Francine Moens</author>
</authors>
<title>Semi-supervised semantic role labeling using the Latent Words Language Model.</title>
<date>2009</date>
<booktitle>In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>21--29</pages>
<contexts>
<context position="21571" citStr="Deschacht and Moens (2009)" startWordPosition="3177" endWordPosition="3180">seen verbs using a graph alignment method; this method represents sentences and their syntactic analysis as graphs and graph alignment is used to project annotations from seed examples to unlabeled sentences. This alignment problem is again modeled as a linear program. F¨urstenau and Lapata (2012) present an detailed expansion of the aforementioned papers. Although this line of work presents a novel direction in the area of SRL, the published approach does not yet deal with non-verbal predicates and does not evaluate the presented methods on the full text annotations of the FrameNet releases. Deschacht and Moens (2009) present a technique of incorporating additional information from unlabeled data by using a latent words language model. Latent variables are used to model the underlying representation of words, and parameters of this model 15 Computational Linguistics Volume 40, Number 1 are estimated using standard unsupervised methods. Next, the latent information is used as features for an SRL model. Improvements over supervised SRL techniques are observed with the augmentation of these extra features. The authors also compare their method with the aforementioned two methods of F¨urstenau and Lapata (2009</context>
</contexts>
<marker>Deschacht, Moens, 2009</marker>
<rawString>Deschacht, Koen and Marie-Francine Moens. 2009. Semi-supervised semantic role labeling using the Latent Words Language Model. In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 21–29, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paramveer S Dhillon</author>
<author>Partha Pratim Talukdar</author>
<author>Koby Crammer</author>
</authors>
<title>Learning better data representation using inference-driven metric learning.</title>
<date>2010</date>
<booktitle>In Proceedings of the ACL 2010 Conference Short Papers,</booktitle>
<pages>377--381</pages>
<location>Uppsala.</location>
<marker>Dhillon, Talukdar, Crammer, 2010</marker>
<rawString>Dhillon, Paramveer S., Partha Pratim Talukdar, and Koby Crammer. 2010. Learning better data representation using inference-driven metric learning. In Proceedings of the ACL 2010 Conference Short Papers, pages 377–381, Uppsala.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Katrin Erk</author>
<author>Sebastian Pad´o</author>
</authors>
<title>Shalmaneser—a toolchain for shallow semantic parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of the Fifth International Conference on Language Resources and Evaluation,</booktitle>
<pages>527--532</pages>
<location>Genoa.</location>
<marker>Erk, Pad´o, 2006</marker>
<rawString>Erk, Katrin and Sebastian Pad´o. 2006. Shalmaneser—a toolchain for shallow semantic parsing. In Proceedings of the Fifth International Conference on Language Resources and Evaluation, pages 527–532, Genoa.</rawString>
</citation>
<citation valid="true">
<title>WordNet: an electronic lexical database.</title>
<date>1998</date>
<editor>Fellbaum, Christiane, editor.</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>1998</marker>
<rawString>Fellbaum, Christiane, editor. 1998. WordNet: an electronic lexical database. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Charles J Fillmore</author>
</authors>
<title>Frame semantics.</title>
<date>1982</date>
<booktitle>In Linguistics in the Morning Calm. Hanshin Publishing Co., Seoul,</booktitle>
<pages>111--137</pages>
<contexts>
<context position="2566" citStr="Fillmore 1982" startWordPosition="343" endWordPosition="344">il: nschneid®cs.cmu.edu. § School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213. E-mail: nasmith®cs.cmu.edu. Submission received: 4 May 2012; revised submission received: 10 November 2012; accepted for publication: 22 December 2012. doi:10.1162/COLI a 00163 © 2014 Association for Computational Linguistics Computational Linguistics Volume 40, Number 1 1. Introduction FrameNet (Fillmore, Johnson, and Petruck 2003) is a linguistic resource storing considerable information about lexical and predicate-argument semantics in English. Grounded in the theory of frame semantics (Fillmore 1982), it suggests—but does not formally define—a semantic representation that blends representations familiar from word-sense disambiguation (Ide and V´eronis 1998) and semantic role labeling (SRL; Gildea and Jurafsky 2002). Given the limited size of available resources, accurately producing richly structured frame-semantic structures with high coverage will require data-driven techniques beyond simple supervised classification, such as latent variable modeling, semi-supervised learning, and joint inference. In this article, we present a computational and statistical model for frame-semantic parsi</context>
<context position="12773" citStr="Fillmore 1982" startWordPosition="1836" endWordPosition="1837">e learned from a reasonable sized corpus, analysis shows that the roles ARG2–ARG5 serve many different purposes for different verbs. Yi, Loper, and Palmer (2007) point out that these four roles are highly overloaded and inconsistent, and they mapped them to VerbNet (Schuler 2005) thematic roles to get improvements on the SRL task. Recently, Bauer and Rambow (2011) presented a method to improve the syntactic subcategorization patterns for FrameNet lexical units using VerbNet. Instead of working with PropBank, we focus on shallow semantic parsing of sentences in the paradigm of frame semantics (Fillmore 1982), to which we turn next. 2.2 Frame-Semantic Parsing The FrameNet lexicon (Fillmore, Johnson, and Petruck 2003) contains rich linguistic information about lexical items and predicate-argument structures. A semantic frame present in this lexicon includes a list of lexical units, which are associated words and phrases that can potentially evoke it in a natural language utterance. Each frame in the lexicon also enumerates several roles corresponding to facets of the scenario represented by the frame. In a frame-analyzed sentence, predicates evoking frames are known as targets, and a word or phrase</context>
</contexts>
<marker>Fillmore, 1982</marker>
<rawString>Fillmore, Charles J. 1982. Frame semantics. In Linguistics in the Morning Calm. Hanshin Publishing Co., Seoul, pages 111–137.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Charles J Fillmore</author>
<author>Christopher R Johnson</author>
<author>Miriam R L Petruck</author>
</authors>
<title>Background to FrameNet.</title>
<date>2003</date>
<journal>International Journal of Lexicography,</journal>
<pages>16--3</pages>
<marker>Fillmore, Johnson, Petruck, 2003</marker>
<rawString>Fillmore, Charles J., Christopher R. Johnson, and Miriam R. L. Petruck. 2003. Background to FrameNet. International Journal of Lexicography, 16.3:235–250.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Fleischman</author>
<author>Namhee Kwon</author>
<author>Eduard Hovy</author>
</authors>
<title>Maximum entropy models for FrameNet classification.</title>
<date>2003</date>
<booktitle>In Proceedings of the 2003 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>49--56</pages>
<location>Sapporo.</location>
<marker>Fleischman, Kwon, Hovy, 2003</marker>
<rawString>Fleischman, Michael, Namhee Kwon, and Eduard Hovy. 2003. Maximum entropy models for FrameNet classification. In Proceedings of the 2003 Conference on Empirical Methods in Natural Language Processing, pages 49–56, Sapporo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pascale Fung</author>
<author>Benfeng Chen</author>
</authors>
<title>BiFrameNet: Bilingual frame semantics resource construction by cross-lingual induction.</title>
<date>2004</date>
<booktitle>In Proceedings of the 20th International Conference on Computational Linguistics,</booktitle>
<pages>931--937</pages>
<location>Geneva.</location>
<contexts>
<context position="19677" citStr="Fung and Chen 2004" startWordPosition="2897" endWordPosition="2900"> on recently released FrameNet 1.5 data. In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) investigated various uses of FrameNet’s taxonomic relations for learning generalizations over roles; they trained a log-linear model on the SemEval 2007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few</context>
</contexts>
<marker>Fung, Chen, 2004</marker>
<rawString>Fung, Pascale and Benfeng Chen. 2004. BiFrameNet: Bilingual frame semantics resource construction by cross-lingual induction. In Proceedings of the 20th International Conference on Computational Linguistics, pages 931–937, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hagen F¨urstenau</author>
<author>Mirella Lapata</author>
</authors>
<title>Graph alignment for semi-supervised semantic role labeling.</title>
<date>2009</date>
<booktitle>In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>11--20</pages>
<marker>F¨urstenau, Lapata, 2009</marker>
<rawString>F¨urstenau, Hagen and Mirella Lapata. 2009a. Graph alignment for semi-supervised semantic role labeling. In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 11–20, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hagen F¨urstenau</author>
<author>Mirella Lapata</author>
</authors>
<title>Semi-supervised semantic role labeling.</title>
<date>2009</date>
<booktitle>In Proceedings of the 12th Conference of the European Chapter of the ACL,</booktitle>
<pages>220--228</pages>
<location>Athens.</location>
<marker>F¨urstenau, Lapata, 2009</marker>
<rawString>F¨urstenau, Hagen and Mirella Lapata. 2009b. Semi-supervised semantic role labeling. In Proceedings of the 12th Conference of the European Chapter of the ACL, pages 220–228, Athens.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hagen F¨urstenau</author>
<author>Mirella Lapata</author>
</authors>
<title>Semi-supervised semantic role labeling via structural alignment.</title>
<date>2012</date>
<journal>Computational Linguistics,</journal>
<volume>38</volume>
<issue>1</issue>
<marker>F¨urstenau, Lapata, 2012</marker>
<rawString>F¨urstenau, Hagen and Mirella Lapata. 2012. Semi-supervised semantic role labeling via structural alignment. Computational Linguistics, 38(1):135–171.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Gerber</author>
<author>Joyce Chai</author>
</authors>
<title>Beyond NomBank: A study of implicit arguments for nominal predicates.</title>
<date>2010</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>1--583</pages>
<location>Uppsala.</location>
<contexts>
<context position="103527" citStr="Gerber and Chai 2010" startWordPosition="16649" endWordPosition="16652"> variables z are binary. Here, apart from the ILP formulation, we will consider the following relaxation of Equation (11), which replaces the binary constraint z E {0,1}d by a unit interval constraint z E [0,1]d, yielding a linear program: �maximize E c(r,s) X zr,s r∈�f s∈S with respect to z E [0,1]d such that Az &lt; b. (17) 42 We noticed that, in the annotated data, in some cases, the “requires” constraint is violated by the FrameNet annotators. This happens mostly when one of the required roles is absent in the sentence containing the target, but is rather instantiated in an earlier sentence (Gerber and Chai 2010). We apply the hard constraint in Equation (16), though extending our algorithm to seek arguments outside the sentence is straightforward. For preliminary work extending SEMAFOR this way, see Chen et al. (2010). 41 Computational Linguistics Volume 40, Number 1 There are several LP and ILP solvers available, and a great deal of effort has been spent by the optimization community to devise efficient generic solvers. An example is CPLEX, a state-of-the-art solver for mixed integer programming that we use as a baseline to solve the ILP in Equation (11) as well as its LP relaxation in Equation (17)</context>
</contexts>
<marker>Gerber, Chai, 2010</marker>
<rawString>Gerber, Matthew and Joyce Chai. 2010. Beyond NomBank: A study of implicit arguments for nominal predicates. In Proceedings of ACL, pages 1,583–1,592, Uppsala.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Gildea</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>3</issue>
<contexts>
<context position="2785" citStr="Gildea and Jurafsky 2002" startWordPosition="369" endWordPosition="372">012; accepted for publication: 22 December 2012. doi:10.1162/COLI a 00163 © 2014 Association for Computational Linguistics Computational Linguistics Volume 40, Number 1 1. Introduction FrameNet (Fillmore, Johnson, and Petruck 2003) is a linguistic resource storing considerable information about lexical and predicate-argument semantics in English. Grounded in the theory of frame semantics (Fillmore 1982), it suggests—but does not formally define—a semantic representation that blends representations familiar from word-sense disambiguation (Ide and V´eronis 1998) and semantic role labeling (SRL; Gildea and Jurafsky 2002). Given the limited size of available resources, accurately producing richly structured frame-semantic structures with high coverage will require data-driven techniques beyond simple supervised classification, such as latent variable modeling, semi-supervised learning, and joint inference. In this article, we present a computational and statistical model for frame-semantic parsing, the problem of extracting from text semantic predicate-argument structures such as those shown in Figure 1. We aim to predict a frame-semantic representation with two statistical models rather than a collection of l</context>
<context position="8078" citStr="Gildea and Jurafsky (2002)" startWordPosition="1132" endWordPosition="1135">ic prediction of predicate-argument semantic structures. 2. Related Work In this section, we will focus on previous scientific work relevant to the problem of frame-semantic parsing. First, we will briefly discuss work done on PropBank-style semantic role labeling, following which we will concentrate on the more relevant problem of frame-semantic structure extraction. Next, we review previous work that has used semi-supervised learning for shallow semantic parsing. Finally, we discuss prior work on joint structure prediction relevant to frame-semantic parsing. 2.1 Semantic Role Labeling Since Gildea and Jurafsky (2002) pioneered statistical semantic role labeling, there has been a great deal of computational work using predicate-argument structures for semantics. The development of PropBank (Kingsbury and Palmer 2002), followed by CoNLL shared tasks on semantic role labeling (Carreras and M`arquez 2004, 2005) boosted research in this area. Figure 2(a) shows an annotation from PropBank. PropBank annotations are closely tied to syntax, because the data set consists of the 1 See http://www.ark.cs.cmu.edu/SEMAFOR. 11 Computational Linguistics Volume 40, Number 1 Figure 2 (a) A phrase-structure tree taken from t</context>
<context position="16490" citStr="Gildea and Jurafsky (2002)" startWordPosition="2400" endWordPosition="2403">jectives, adverbs, and prepositions among its lexical units. Finally, FrameNet frames organize predicates according to semantic principles, both by allowing related terms to evoke a common frame (e.g., push.V, raise.V, and growth.N for CAUSE CHANGE POSITION ON A SCALE) and by defining frames and their roles within a hierarchy (see Figure 3). PropBank does not explicitly encode relationships among predicates. Most early work on frame-semantic parsing has made use of the exemplar sentences in the FrameNet corpus (see Section 3.1), each of which is annotated for a single frame and its arguments. Gildea and Jurafsky (2002) presented a discriminative model for arguments given the frame; Thompson, Levy, and Manning (2003) used a generative model for both the frame and its arguments. Fleischman, Kwon, and Hovy (2003) first used maximum entropy models to find and label arguments given the frame. Shi and Mihalcea (2004) developed a rule-based system to predict frames and their arguments in text, and Erk and Pad´o (2006) introduced the Shalmaneser tool, which uses naive Bayes classifiers to do the same. Other FrameNet SRL systems (Giuglea and Moschitti 2006, for instance) have used SVMs. Most of this work was done on</context>
</contexts>
<marker>Gildea, Jurafsky, 2002</marker>
<rawString>Gildea, Daniel and Daniel Jurafsky. 2002. Automatic labeling of semantic roles. Computational Linguistics, 28(3):245–288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roxana Girju</author>
<author>Preslav Nakov</author>
<author>Vivi Nastase</author>
<author>Stan Szpakowicz</author>
<author>Peter Turney</author>
<author>Deniz Yuret</author>
</authors>
<title>SemEval-2007 task 04: Classification of semantic relations between nominals.</title>
<date>2007</date>
<booktitle>In Proceedings of the Fourth International Workshop on Semantic Evaluations,</booktitle>
<pages>13--18</pages>
<location>Prague.</location>
<contexts>
<context position="41229" citStr="Girju et al. 2007" startWordPosition="6261" endWordPosition="6264">(Section 5) can accurately label frames for new LUs.15 Results. Table 3 shows results on target identification tested on the SemEval 2007 test set; our system gains 3 F1 points over the baseline. This is statistically significant with p &lt; 0.01. Our results are also significant in terms of precision (p &lt; 0.05) and recall (p &lt; 0.01). There are 85 distinct LUs for which the baseline fails to identify the correct target while our system succeeds. A considerable proportion of these units have more than 12 Note that there have been dedicated shared tasks to determine relationships between nominals (Girju et al. 2007) and word-sense disambiguation of prepositions (Litkowski and Hargraves 2007), but we do not build specific models for predicates of these categories. 13 There are 629 multiword LUs in the lexicon, and they correspond to 4.8% of the targets in the training set; among them are screw up.V, shoot the breeze.V, and weapon of mass destruction.N. In the SemEval 2007 training data, there are just 99 discontinuous multiword targets (1% of all targets). 14 This conservative approach violates theoretical linguistic assumptions about frame-evoking targets as governed by frame semantics. It also goes agai</context>
</contexts>
<marker>Girju, Nakov, Nastase, Szpakowicz, Turney, Yuret, 2007</marker>
<rawString>Girju, Roxana, Preslav Nakov, Vivi Nastase, Stan Szpakowicz, Peter Turney, and Deniz Yuret. 2007. SemEval-2007 task 04: Classification of semantic relations between nominals. In Proceedings of the Fourth International Workshop on Semantic Evaluations, pages 13–18, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ana-Maria Giuglea</author>
<author>Alessandro Moschitti</author>
</authors>
<title>Shallow semantic parsing based on FrameNet, VerbNet and PropBank.</title>
<date>2006</date>
<booktitle>In Proceedings of the 17th European Conference on Artificial Intelligence,</booktitle>
<pages>563--567</pages>
<location>Amsterdam.</location>
<contexts>
<context position="17029" citStr="Giuglea and Moschitti 2006" startWordPosition="2485" endWordPosition="2488"> of which is annotated for a single frame and its arguments. Gildea and Jurafsky (2002) presented a discriminative model for arguments given the frame; Thompson, Levy, and Manning (2003) used a generative model for both the frame and its arguments. Fleischman, Kwon, and Hovy (2003) first used maximum entropy models to find and label arguments given the frame. Shi and Mihalcea (2004) developed a rule-based system to predict frames and their arguments in text, and Erk and Pad´o (2006) introduced the Shalmaneser tool, which uses naive Bayes classifiers to do the same. Other FrameNet SRL systems (Giuglea and Moschitti 2006, for instance) have used SVMs. Most of this work was done on an older, smaller version of FrameNet, containing around 300 frames and fewer than 500 unique semantic roles. Unlike this body of work, we experimented with the larger SemEval 2007 shared task data set, and also the newer FrameNet 1.5,3 which lists 877 frames and 1,068 role types—thus handling many more labels, and resulting in richer frame-semantic parses. Recent work in frame-semantic parsing—in which sentences may contain multiple frames which need to be recognized along with their arguments—was undertaken as the SemEval 2007 tas</context>
<context position="19548" citStr="Giuglea and Moschitti 2006" startWordPosition="2877" endWordPosition="2880">oblem using a joint structure prediction model and use semisupervised learning to improve predicate coverage. We also present experiments on recently released FrameNet 1.5 data. In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) investigated various uses of FrameNet’s taxonomic relations for learning generalizations over roles; they trained a log-linear model on the SemEval 2007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a</context>
</contexts>
<marker>Giuglea, Moschitti, 2006</marker>
<rawString>Giuglea, Ana-Maria and Alessandro Moschitti. 2006. Shallow semantic parsing based on FrameNet, VerbNet and PropBank. In Proceedings of the 17th European Conference on Artificial Intelligence, pages 563–567, Amsterdam.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Gropp</author>
<author>E Lusk</author>
<author>A Skjellum</author>
</authors>
<title>Using MPI: Portable Parallel Programming with the Message-Passing Interface.</title>
<date>1994</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>Gropp, Lusk, Skjellum, 1994</marker>
<rawString>Gropp, W., E. Lusk, and A. Skjellum. 1994. Using MPI: Portable Parallel Programming with the Message-Passing Interface. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Jan Hajiˇc</author>
<author>Massimiliano Ciaramita</author>
<author>Richard Johansson</author>
<author>Daisuke Kawahara</author>
<author>Maria Ant`onia Marti</author>
<author>Lluis M`arquez</author>
<author>Adam Meyers</author>
<author>Joakim Nivre</author>
<author>Sebastian Pad´o</author>
<author>Jan ˇStˇep´anek</author>
<author>Pavel Straˇn´ak</author>
<author>Mihai Surdeanu</author>
<author>Nianwen Xue</author>
<author>Yi Zhang</author>
</authors>
<title>The CoNLL-2009 shared task: Syntactic and semantic dependencies in multiple languages.</title>
<date>2009</date>
<booktitle>In Proceedings of the Thirteenth Conference on Computational Natural Language Learning,</booktitle>
<pages>1--18</pages>
<location>Boulder, CO.</location>
<marker>Hajiˇc, Ciaramita, Johansson, Kawahara, Marti, M`arquez, Meyers, Nivre, Pad´o, ˇStˇep´anek, Straˇn´ak, Surdeanu, Xue, Zhang, 2009</marker>
<rawString>Hajiˇc, Jan, Massimiliano Ciaramita, Richard Johansson, Daisuke Kawahara, Maria Ant`onia Marti, Lluis M`arquez, Adam Meyers, Joakim Nivre, Sebastian Pad´o, Jan ˇStˇep´anek, Pavel Straˇn´ak, Mihai Surdeanu, Nianwen Xue, and Yi Zhang. 2009. The CoNLL-2009 shared task: Syntactic and semantic dependencies in multiple languages. In Proceedings of the Thirteenth Conference on Computational Natural Language Learning, pages 1–18, Boulder, CO.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy Ide</author>
<author>Jean V´eronis</author>
</authors>
<title>Introduction to the special issue on word sense disambiguation: The state of the art.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>1</issue>
<marker>Ide, V´eronis, 1998</marker>
<rawString>Ide, Nancy and Jean V´eronis. 1998. Introduction to the special issue on word sense disambiguation: The state of the art. Computational Linguistics, 24(1):2–40.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Johansson</author>
<author>Pierre Nugues</author>
</authors>
<title>LTH: Semantic structure extraction using nonprojective dependency trees.</title>
<date>2007</date>
<booktitle>In Proceedings of the 4th International Workshop on Semantic Evaluations,</booktitle>
<pages>227--230</pages>
<location>Prague.</location>
<contexts>
<context position="18002" citStr="Johansson and Nugues (2007)" startWordPosition="2635" endWordPosition="2638">s handling many more labels, and resulting in richer frame-semantic parses. Recent work in frame-semantic parsing—in which sentences may contain multiple frames which need to be recognized along with their arguments—was undertaken as the SemEval 2007 task 19 of frame-semantic structure extraction (Baker, Ellsworth, and Erk 2007). This task leveraged FrameNet 1.3, and also released a small corpus 3 Available at http://framenet.icsi.berkeley.edu as of 19 January 2013. 14 Das et al. Frame-Semantic Parsing containing a little more than 2,000 sentences with full text annotations. The LTH system of Johansson and Nugues (2007), which we use as our baseline (Section 3.4), had the best performance in the SemEval 2007 task in terms of full frame-semantic parsing. Johansson and Nugues broke down the task as identifying targets that could evoke frames in a sentence, identifying the correct semantic frame for a target, and finally determining the arguments that fill the semantic roles of a frame. They used a series of SVMs to classify the frames for a given target, associating unseen lexical items to frames and identifying and classifying token spans as various semantic roles. Both the full text annotation corpus as well</context>
<context position="36464" citStr="Johansson and Nugues (2007" startWordPosition="5516" endWordPosition="5519">cremented. Ideally, one would perform all 2n shuffles, where n is the number of test cases (sentences), but given that this is often prohibitively expensive, the default number of iterations is 10,000 [we use independently sampled 10,000 shuffles]. After all iterations, the likelihood of incorrectly rejecting the null [hypothesis, i.e., the p-value] is simply (nc + 1)/(nt + 1), where nc is the number of random differences greater than the original observed difference, and nt is the total number of iterations. 3.4 Baseline A strong baseline for frame-semantic parsing is the system presented by Johansson and Nugues (2007, hereafter J&amp;N’07), the best system in the SemEval 2007 shared task. That system is based on a collection of SVMs. They used a set of rules for target identification which we describe in Appendix A. For frame identification, they used an SVM classifier to disambiguate frames for known frame-evoking words. They used WordNet synsets to extend the vocabulary of frame-evoking words to cover unknown words, and then used a collection of separate SVM classifiers—one for each frame—to predict a single evoked frame for each occurrence of a word in the extended set. J&amp;N’07 followed Xue and Palmer (2004</context>
<context position="39742" citStr="Johansson and Nugues (2007" startWordPosition="6020" endWordPosition="6023">d J&amp;N’07 in using a small set of rules to identify targets. First, we created a master list of all the morphological variants of targets that appear in the exemplar sentences and a given training set. For a sentence in new data, we considered as candidate targets only those substrings that appear in this master list. We also did not attempt to capture discontinuous frame targets: for example, we treat there would have been as a single span even though the corresponding LU is there be.V.13 Next, we pruned the candidate target set by applying a series of rules identical to the ones described by Johansson and Nugues (2007, see Appendix A), with two exceptions. First, they identified locative, temporal, and directional prepositions using a dependency parser so as to retain them as valid LUs. In contrast, we pruned all types of prepositions because we found them to hurt our performance on the development set due to errors in syntactic parsing. In a second departure from their target extraction rules, we did not remove the candidate targets that had been tagged as support verbs for some other target. Note that we used a conservative white list that filters out targets whose morphological variants were not seen ei</context>
<context position="47926" citStr="Johansson and Nugues 2007" startWordPosition="7365" endWordPosition="7368">pθ f |ti, x) = exp eTg(fi,f f�EF E�ELfr i, ti, x) This is a conditional log-linear model: for f ∈ Fi and f ∈ Lf, where θ are the model weights, and g is a vector-valued feature function. This discriminative formulation is very flexible, allowing for a variety of (possibly overlapping) features; for example, a feature might relate a frame type to a prototype, represent a lexical-semantic relationship between a prototype and a target, or encode part of the syntax of the sentence. Previous work has exploited WordNet for better coverage during frame identification (Burchardt, Erk, and Frank 2005; Johansson and Nugues 2007, e.g., by expanding the set of targets using synsets), and others have sought to extend the lexicon itself. We differ in our use of a latent variable to incorporate lexical-semantic features in a discriminative model, relating known lexical units to unknown words that may evoke frames. Here we are able to take advantage of the large inventory of partially annotated 18 Automatically predicting new frames is a challenge not yet attempted to our knowledge (including here). Note that the scoring metric (Section 3.3) gives partial credit for related frames (e.g., a more general frame from the lexi</context>
<context position="104779" citStr="Johansson and Nugues 2007" startWordPosition="16845" endWordPosition="16848">plementations, CPLEX is proprietary. 7.1.3 Linguistic Constraints from FrameNet. Although enforcing the four different sets of constraints is intuitive from a general linguistic perspective, we ground their use in definitive linguistic information present in the FrameNet lexicon. From the annotated data in the FrameNet 1.5 release, we gathered that only 3.6% of the time is a role instantiated multiple times by different spans in a sentence. This justifies the uniqueness constraint enforced by Equation (12). Use of such a constraint is also consistent with prior work in frame-semantic parsing (Johansson and Nugues 2007). Similarly, we found that in the annotations, no arguments overlapped with each other for a given target. Hence, the overlap constraints in Equation (14) are also justified. Our third and fourth sets of constraints, presented in Equations (15) and (16), come from FrameNet, too. Examples (1) and (2) are instances where the target resemble evokes the SIMILARITY frame, which is defined in FrameNet as: Two or more distinct entities, which may be concrete or abstract objects or types, are characterized as being similar to each other. Depending on figure/ground relations, the entities may be expres</context>
<context position="125922" citStr="Johansson and Nugues (2007)" startWordPosition="20307" endWordPosition="20310">cessing, including tokenization into lexical units, improved syntactic parsing, and the use of external knowledge bases, is expected to improve the system’s accuracy. Finally, the FrameNet lexicon does not contain exhaustive semantic knowledge. Automatic frame and role induction is an exciting direction of future research that could further enhance our methods of automatic frame-semantic parsing. The parser described in this article is available for download at http://www.ark.cs.cmu.edu/SEMAFOR. Appendix A. Target Identification Heuristics from J&amp;N’07 We describe here the filtering rules that Johansson and Nugues (2007) used for identifying frame evoking targets in their SemEval 2007 shared task paper. They built a filtering component based on heuristics that removed words that appear in certain contexts, and kept the remaining ones.45 These are: • have was retained only if had an object, • be was retained only if it was preceded by there, • will was removed in its modal sense, • of course and in particular were removed, 45 Although not explicitly mentioned in the paper, we believe that these rules were applied on a white list of potential targets seen in FrameNet and the SemEval 2007 training data. 49 Compu</context>
</contexts>
<marker>Johansson, Nugues, 2007</marker>
<rawString>Johansson, Richard and Pierre Nugues. 2007. LTH: Semantic structure extraction using nonprojective dependency trees. In Proceedings of the 4th International Workshop on Semantic Evaluations, pages 227–230, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Johansson</author>
<author>Pierre Nugues</author>
</authors>
<title>Dependency-based semantic role labeling of PropBank.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>69--78</pages>
<location>Honolulu, HI.</location>
<contexts>
<context position="33075" citStr="Johansson and Nugues (2008)" startWordPosition="4988" endWordPosition="4991">for development of the argument identification model (Section 6.1). Preprocessing. We preprocessed sentences in our data set with a standard set of annotations: POS tags from MXPOST (Ratnaparkhi 1996) and dependency parses from the MST parser (McDonald, Crammer, and Pereira 2005); manual syntactic parses are not available for most of the FrameNet-annotated documents. We used WordNet (Fellbaum 1998) for lemmatization. Our models treat these pieces of information as observations. We also labeled each verb in the data as having ACTIVE or PASSIVE voice, using code from the SRL system described by Johansson and Nugues (2008). 3.3 Task and Evaluation Methodology Automatic annotations of frame-semantic structure can be broken into three parts: (1) targets, the words or phrases that evoke frames; (2) the frame type, defined in the lexicon, evoked by each target; and (3) the arguments, or spans of words that serve to fill roles defined by each evoked frame. These correspond to the three subtasks in our parser, each described and evaluated in turn: target identification (Section 4), frame identification (Section 5, not unlike word-sense disambiguation), and argument identification (Section 6, essentially the same as s</context>
</contexts>
<marker>Johansson, Nugues, 2008</marker>
<rawString>Johansson, Richard and Pierre Nugues. 2008. Dependency-based semantic role labeling of PropBank. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 69–78, Honolulu, HI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Kingsbury</author>
<author>Martha Palmer</author>
</authors>
<title>From TreeBank to PropBank.</title>
<date>2002</date>
<booktitle>In Proceedings of the 3rd International Conference on Language Resources and Evaluation,</booktitle>
<pages>1--989</pages>
<location>Las Palmas.</location>
<contexts>
<context position="8281" citStr="Kingsbury and Palmer 2002" startWordPosition="1159" endWordPosition="1162">ly discuss work done on PropBank-style semantic role labeling, following which we will concentrate on the more relevant problem of frame-semantic structure extraction. Next, we review previous work that has used semi-supervised learning for shallow semantic parsing. Finally, we discuss prior work on joint structure prediction relevant to frame-semantic parsing. 2.1 Semantic Role Labeling Since Gildea and Jurafsky (2002) pioneered statistical semantic role labeling, there has been a great deal of computational work using predicate-argument structures for semantics. The development of PropBank (Kingsbury and Palmer 2002), followed by CoNLL shared tasks on semantic role labeling (Carreras and M`arquez 2004, 2005) boosted research in this area. Figure 2(a) shows an annotation from PropBank. PropBank annotations are closely tied to syntax, because the data set consists of the 1 See http://www.ark.cs.cmu.edu/SEMAFOR. 11 Computational Linguistics Volume 40, Number 1 Figure 2 (a) A phrase-structure tree taken from the Penn Treebank and annotated with PropBank predicate-argument structures. The verbs created and pushed serve as predicates in this sentence. Dotted arrows connect each predicate to its semantic argumen</context>
<context position="23469" citStr="Kingsbury and Palmer 2002" startWordPosition="3460" endWordPosition="3463">c roles automatically from unannotated data. This line of work may be useful in discovering new semantic frames and roles, but here we stick to the concrete representation provided in FrameNet, without seeking to expand its inventory of semantic types. We present a new semi-supervised technique to expand the set of lexical items with the potential semantic frames that they could evoke; we use a graph-based semi-supervised learning framework to achieve this goal (Section 5.5). 2.4 Joint Inference and Shallow Semantic Parsing Most high-performance SRL systems that use conventions from PropBank (Kingsbury and Palmer 2002) and NomBank (Meyers et al. 2004) utilize joint inference for semantic role labeling (M`arquez et al. 2008). To our knowledge, the separate line of work investigating frame-semantic parsing has not previously dealt with joint inference. A common trait in prior work, both in PropBank and FrameNet conventions, has been the use of a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for c</context>
</contexts>
<marker>Kingsbury, Palmer, 2002</marker>
<rawString>Kingsbury, Paul and Martha Palmer. 2002. From TreeBank to PropBank. In Proceedings of the 3rd International Conference on Language Resources and Evaluation, pages 1,989–1,993, Las Palmas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nikos Komodakis</author>
<author>Nikos Paragios</author>
<author>Georgios Tziritas</author>
</authors>
<title>MRF optimization via dual decomposition: Message-passing revisited.</title>
<date>2007</date>
<booktitle>In Eleventh International Conference on Computer Vision,</booktitle>
<pages>1--8</pages>
<note>Rio de Janeiro.</note>
<marker>Komodakis, Paragios, Tziritas, 2007</marker>
<rawString>Komodakis, Nikos, Nikos Paragios, and Georgios Tziritas. 2007. MRF optimization via dual decomposition: Message-passing revisited. In Eleventh International Conference on Computer Vision, pages 1–8, Rio de Janeiro.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Koo</author>
<author>Alexander M Rush</author>
<author>Michael Collins</author>
<author>Tommi Jaakkola</author>
<author>David Sontag</author>
</authors>
<title>Dual decomposition for parsing with non-projective head automata.</title>
<date>2010</date>
<booktitle>In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>1--288</pages>
<location>Cambridge, MA.</location>
<contexts>
<context position="24857" citStr="Koo et al. 2010" startWordPosition="3671" endWordPosition="3674">, as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; Rush and Collins 2011). Recently, Martins et al. (2011b) showed that the success of subgradient-based dual decomposition strongly relies on breaking down the original problem into a “good” 4 In prior work, there are exceptions where identification and classification of arguments have been treated in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on semantic role labeling (Carreras and M`</context>
</contexts>
<marker>Koo, Rush, Collins, Jaakkola, Sontag, 2010</marker>
<rawString>Koo, Terry, Alexander M. Rush, Michael Collins, Tommi Jaakkola, and David Sontag. 2010. Dual decomposition for parsing with non-projective head automata. In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 1,288–1,298, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthieu Kowalski</author>
<author>Bruno Torr´esani</author>
</authors>
<title>Sparsity and persistence: Mixed norms provide simple signal models with dependent coefficients.</title>
<date>2009</date>
<booktitle>Signal, Image and Video Processing,</booktitle>
<pages>3--251</pages>
<marker>Kowalski, Torr´esani, 2009</marker>
<rawString>Kowalski, Matthieu and Bruno Torr´esani. 2009. Sparsity and persistence: Mixed norms provide simple signal models with dependent coefficients. Signal, Image and Video Processing, 3:251–264.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joel Lang</author>
<author>Mirella Lapata</author>
</authors>
<title>Unsupervised induction of semantic roles.</title>
<date>2010</date>
<booktitle>In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>939--947</pages>
<location>Los Angeles, CA.</location>
<contexts>
<context position="22777" citStr="Lang and Lapata 2010" startWordPosition="3355" endWordPosition="3358">d Lapata (2009a, 2009b) and show relative improvements. Experiments are performed on the CoNLL 2008 shared task data set (Surdeanu et al. 2008), which follows the PropBank conventions and only labels verbal and nominal predicates—in contrast to our work, which includes most lexicosyntactic categories. A similar approach is presented by Weston, Ratle, and Collobert (2008), who use neural embeddings of words, which are eventually used for SRL; improvements over state-of-the-art PropBank-style SRL systems are observed. Recently, there has been related work in unsupervised semantic role labeling (Lang and Lapata 2010, 2011; Titov and Klementiev 2012) that attempts to induce semantic roles automatically from unannotated data. This line of work may be useful in discovering new semantic frames and roles, but here we stick to the concrete representation provided in FrameNet, without seeking to expand its inventory of semantic types. We present a new semi-supervised technique to expand the set of lexical items with the potential semantic frames that they could evoke; we use a graph-based semi-supervised learning framework to achieve this goal (Section 5.5). 2.4 Joint Inference and Shallow Semantic Parsing Most</context>
</contexts>
<marker>Lang, Lapata, 2010</marker>
<rawString>Lang, Joel and Mirella Lapata. 2010. Unsupervised induction of semantic roles. In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics, pages 939–947, Los Angeles, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joel Lang</author>
<author>Mirella Lapata</author>
</authors>
<title>Unsupervised semantic role induction with graph partitioning.</title>
<date>2011</date>
<booktitle>In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>1320--1331</pages>
<location>Edinburgh.</location>
<marker>Lang, Lapata, 2011</marker>
<rawString>Lang, Joel and Mirella Lapata. 2011. Unsupervised semantic role induction with graph partitioning. In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, pages 1320–1331, Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Principle-based parsing without overgeneration.</title>
<date>1993</date>
<booktitle>In Proceedings of the 31st Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>112--120</pages>
<location>Columbus, OH.</location>
<contexts>
<context position="63667" citStr="Lin 1993" startWordPosition="9920" endWordPosition="9921">e constraints on frame identification. 5.5.1 Graph Construction. We construct a graph with lexical units as vertices. Thus, each vertex corresponds to a lemmatized word or phrase appended with a coarse POS tag. We use two resources for graph construction. First, we take all the words and phrases present in a dependency-based thesaurus constructed using syntactic cooccurrence statistics (Lin 1998), and aggregate words and phrases that share the same lemma and coarse POS tag. To construct this resource, Lin used a corpus containing 64 million words that was parsed with a fast dependency parser (Lin 1993, 1994), and syntactic contexts were used to find similar lexical items for a given word or phrase. Lin separately treated nouns, verbs, and adjectives/adverbs, so these form the three parts of the thesaurus. This resource gave us a list of possible LUs, much larger in size than the LUs present in FrameNet data. The second component of graph construction comes from FrameNet itself. We scanned the exemplar sentences in FrameNet 1.5 and the training section of the full text annotations and gathered a distribution over frames for each LU appearing in FrameNet data. For a pair of LUs, we measured </context>
</contexts>
<marker>Lin, 1993</marker>
<rawString>Lin, Dekang. 1993. Principle-based parsing without overgeneration. In Proceedings of the 31st Annual Meeting of the Association for Computational Linguistics, pages 112–120, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Principar–an efficient, broad-coverage, principle-based parser.</title>
<date>1994</date>
<booktitle>In Proceedings of the 15th Conference on Computational Linguistics,</booktitle>
<pages>482--488</pages>
<marker>Lin, 1994</marker>
<rawString>Lin, Dekang. 1994. Principar–an efficient, broad-coverage, principle-based parser. In Proceedings of the 15th Conference on Computational Linguistics, pages 482–488, Kyoto.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Automatic retrieval and clustering of similar words.</title>
<date>1998</date>
<booktitle>In Proceedings of the 36th Annual Meeting of the Association for Computational Linguistics and 17th International Conference on Computational Linguistics,</booktitle>
<pages>768--774</pages>
<location>Montreal.</location>
<contexts>
<context position="63458" citStr="Lin 1998" startWordPosition="9884" endWordPosition="9885">ed learning of POS taggers by using bilingual graph-based projections (Das and Petrov 2011). We describe our approach to graph construction, propagation for lexicon expansion, and the use of the result to impose constraints on frame identification. 5.5.1 Graph Construction. We construct a graph with lexical units as vertices. Thus, each vertex corresponds to a lemmatized word or phrase appended with a coarse POS tag. We use two resources for graph construction. First, we take all the words and phrases present in a dependency-based thesaurus constructed using syntactic cooccurrence statistics (Lin 1998), and aggregate words and phrases that share the same lemma and coarse POS tag. To construct this resource, Lin used a corpus containing 64 million words that was parsed with a fast dependency parser (Lin 1993, 1994), and syntactic contexts were used to find similar lexical items for a given word or phrase. Lin separately treated nouns, verbs, and adjectives/adverbs, so these form the three parts of the thesaurus. This resource gave us a list of possible LUs, much larger in size than the LUs present in FrameNet data. The second component of graph construction comes from FrameNet itself. We sca</context>
</contexts>
<marker>Lin, 1998</marker>
<rawString>Lin, Dekang. 1998. Automatic retrieval and clustering of similar words. In Proceedings of the 36th Annual Meeting of the Association for Computational Linguistics and 17th International Conference on Computational Linguistics, pages 768–774, Montreal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jianhua Lin</author>
</authors>
<title>Divergence measures based on the Shannon entropy.</title>
<date>1991</date>
<journal>IEEE Transactions on Information Theory,</journal>
<volume>37</volume>
<issue>1</issue>
<contexts>
<context position="67134" citStr="Lin 1991" startWordPosition="10513" endWordPosition="10514">an field; it also utilizes a uniform $2 penalty—the third term in the objective function. This is a multiclass generalization of the quadratic cost criterion (Bengio, Delalleau, and Le Roux 2006), also used by Subramanya, Petrov, and Pereira (2010) and Das and Petrov (2011). Our second graph objective function is as follows: � � � UJSF-$1,2 : arg min DJS(ˆqv11qv) + µ wuvDJS(qv11qu) + v 11qv112 1 (5) q, s.t. q≥0 v∈ Vˆ v∈V,u∈N(v) v∈V We call it UJSF-$1,2 because it uses unnormalized probability measures at each vertex and is a Jensen-Shannon field, utilizing pairwise Jensen-Shannon divergences (Lin 1991; Burbea and Rao 2006) and a sparse $1,2 penalty (Kowalski and Torr´esani 2009) as the third term. Das and Smith (2012) proposed the objective function in Equation (5). It seeks at each graph vertex a sparse measure, as we expect in a lexicon (i.e., few frames have nonzero probability for a given target). These two graph objectives can be optimized by iterative updates, whose details we omit in this article; more information about the motivation behind using the $1,2 penalty in the UJSF-$1,2 objective, the optimization procedure, and an empirical comparison of these and other objectives on ano</context>
</contexts>
<marker>Lin, 1991</marker>
<rawString>Lin, Jianhua. 1991. Divergence measures based on the Shannon entropy. IEEE Transactions on Information Theory, 37(1):145–151.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth C Litkowski</author>
<author>Orin Hargraves</author>
</authors>
<title>SemEval-2007 task 06: Word-sense disambiguation of prepositions.</title>
<date>2007</date>
<booktitle>In Proceedings of the Fourth International Workshop on Semantic Evaluations (SemEval-2007),</booktitle>
<pages>24--29</pages>
<location>Prague.</location>
<contexts>
<context position="41306" citStr="Litkowski and Hargraves 2007" startWordPosition="6270" endWordPosition="6273">ble 3 shows results on target identification tested on the SemEval 2007 test set; our system gains 3 F1 points over the baseline. This is statistically significant with p &lt; 0.01. Our results are also significant in terms of precision (p &lt; 0.05) and recall (p &lt; 0.01). There are 85 distinct LUs for which the baseline fails to identify the correct target while our system succeeds. A considerable proportion of these units have more than 12 Note that there have been dedicated shared tasks to determine relationships between nominals (Girju et al. 2007) and word-sense disambiguation of prepositions (Litkowski and Hargraves 2007), but we do not build specific models for predicates of these categories. 13 There are 629 multiword LUs in the lexicon, and they correspond to 4.8% of the targets in the training set; among them are screw up.V, shoot the breeze.V, and weapon of mass destruction.N. In the SemEval 2007 training data, there are just 99 discontinuous multiword targets (1% of all targets). 14 This conservative approach violates theoretical linguistic assumptions about frame-evoking targets as governed by frame semantics. It also goes against the spirit of using linguistic constraints to improve the separate subtas</context>
</contexts>
<marker>Litkowski, Hargraves, 2007</marker>
<rawString>Litkowski, Kenneth C. and Orin Hargraves. 2007. SemEval-2007 task 06: Word-sense disambiguation of prepositions. In Proceedings of the Fourth International Workshop on Semantic Evaluations (SemEval-2007), pages 24–29, Prague.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Dong C Liu</author>
<author>Jorge Nocedal 1989</author>
</authors>
<title>On the limited memory BFGS method for large scale optimization.</title>
<booktitle>Mathematical Programming,</booktitle>
<volume>45</volume>
<issue>3</issue>
<marker>Liu, 1989, </marker>
<rawString>Liu, Dong C. and Jorge Nocedal.1989. On the limited memory BFGS method for large scale optimization. Mathematical Programming, 45(3):503–528.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitchell P Marcus</author>
<author>Mary Ann Marcinkiewicz</author>
<author>Beatrice Santorini</author>
</authors>
<title>Building a large annotated corpus of English: the Penn treebank.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<marker>Marcus, Marcinkiewicz, Santorini, 1993</marker>
<rawString>Marcus, Mitchell P., Mary Ann Marcinkiewicz, and Beatrice Santorini. 1993. Building a large annotated corpus of English: the Penn treebank. Computational Linguistics, 19(2):313–330, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lluis M`arquez</author>
<author>Xavier Carreras</author>
<author>Kenneth C Litkowski</author>
<author>Suzanne Stevenson</author>
</authors>
<title>Semantic role labeling: an introduction to the special issue.</title>
<date>2008</date>
<journal>Computational Linguistics,</journal>
<volume>34</volume>
<issue>2</issue>
<marker>M`arquez, Carreras, Litkowski, Stevenson, 2008</marker>
<rawString>M`arquez, Lluis, Xavier Carreras, Kenneth C. Litkowski, and Suzanne Stevenson. 2008. Semantic role labeling: an introduction to the special issue. Computational Linguistics, 34(2):145–159, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andr´e F T Martins</author>
<author>Mario A T Figueiredo</author>
<author>Pedro M Q Aguiar</author>
<author>Noah A Smith</author>
<author>Eric P Xing</author>
</authors>
<title>An augmented Lagrangian approach to constrained MAP inference.</title>
<date>2011</date>
<booktitle>In Proceedings of the 28th International Conference on Machine Learning,</booktitle>
<pages>169--176</pages>
<location>Bellevue, WA.</location>
<contexts>
<context position="25068" citStr="Martins et al. (2011" startWordPosition="3701" endWordPosition="3704">decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; Rush and Collins 2011). Recently, Martins et al. (2011b) showed that the success of subgradient-based dual decomposition strongly relies on breaking down the original problem into a “good” 4 In prior work, there are exceptions where identification and classification of arguments have been treated in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on semantic role labeling (Carreras and M`arquez 2004). 16 Das et al. Frame-Semantic Parsing decomposition, that is, one with few overlapping components. This leaves out many declarative constrained problems, for which such a good decomposition is not r</context>
<context position="95126" citStr="Martins et al. 2011" startWordPosition="15216" endWordPosition="15219">We model argument identification as constrained optimization, where the constraints come from expert knowledge encoded in FrameNet. Following prior work on PropBank-style SRL that dealt with similar constrained problems (Punyakanok et al. 2004; Punyakanok, Roth, and Yih 2008, inter alia), we incorporate this declarative knowledge in an integer linear program. Because general-purpose ILP solvers are proprietary and do not fully exploit the structure of the problem, we turn to a class of optimization techniques called dual decomposition (Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010; Martins et al. 2011a). We derive a modular, extensible, parallelizable approach in which semantic constraints map not just to declarative components in the algorithm, but also to procedural ones, in the form of “workers.” Although dual decomposition algorithms only solve a relaxation of the original problem, we make our approach exact by wrapping the algorithm in a branch-and-bound search procedure. 39 We experimentally find that our algorithm achieves accuracy comparable to the results presented in Table 8, while respecting all imposed linguistic constraints. In comparison with beam search, which violates many </context>
<context position="108129" citStr="Martins et al. (2011" startWordPosition="17377" endWordPosition="17380">e describe how we arrive at solutions for the LP in Equation (17) using dual decomposition, and how we adapt it to efficiently recover the exact solution of the ILP (Equation (11)), without the need of an off-the-shelf ILP solver. 7.2 “Augmented” Dual Decomposition Dual decomposition methods address complex optimization problems in the dual, by dividing them into simple worker problems (subproblems), which are repeatedly solved until a consensus is reached. The simplest technique relies on the subgradient algorithm (Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010); as an alternative, Martins et al. (2011a, 2011b) proposed an augmented Lagrangian technique, which is more suitable when there are many small components —commonly the case in declarative constrained problems, like the one at hand. Here, we present a brief overview of the latter, which is called AD3. Let us start by establishing some notation. Let m E {1, ... , M} index a factor, and denote by i(m) the vector of indices of variables linked to that factor. (Recall that each factor represents the instantiation of a constraint.) We introduce a new set of variables, u E Rd, called the “witness” vector. We split the vector z into M overl</context>
<context position="111481" citStr="Martins et al. (2011" startWordPosition="17976" endWordPosition="17979">nsus u: z(t+1) m+- argmax (cm +Atm) · zm − 2pIIzm − uti(m)II2 (19) Amztm≤bm 7: end for 8: make a u-update by updating the consensus solution, averaging z1, ... , zm: u(t+1)(r,s) +- 1 z(t+1) δ(r,s) L• m (r, s) m:(r,s)Ei(m) 9: make a A-update: A(mt+1) +- At m − p(z(t+1) m − u(t+1) i(m) ), Vm 10: t +- t + 1 11: until convergence Ensure: relaxed primal solution u* and dual solution A*. If u* is integer, it will encode an assignment of spans to roles. Otherwise, it will provide an upper bound of the true optimum. average voting; it is this term that accelerates consensus and therefore convergence. Martins et al. (2011b) also provide stopping criteria for the iterative updates using primal and dual residuals that measure convergence; we refer the reader to that paper for details. A key attraction of this algorithm is that all the components of the declarative specification remain intact in the procedural form. Each worker corresponds exactly to one constraint in the ILP, which corresponds to one linguistic constraint. There is no need to work out when, during the procedure, each constraint might have an effect, as in beam search. 7.2.1 Solving the Subproblems. In a different application, Martins et al. (201</context>
<context position="114993" citStr="Martins et al. (2011" startWordPosition="18547" endWordPosition="18550">on argument identification in this section, as our goal is to exhibit the importance of incorporating the various linguistic constraints during our inference procedure. We present results on the full text annotations of FrameNet 1.5, and do not experiment on the SemEval 2007 benchmark, as we have already established our constraint-agnostic models as state-of-the-art. The model weights ψ used in the scoring function c were learned as in Section 6.1 (i.e., by training a logistic regression model to maximize conditional log-likelihood). The AD3 parameter ρ was initialized to 0.1, and we followed Martins et al. (2011b) in dynamically adjusting it to keep a balance between the primal and dual residuals. We compare the following algorithms to demonstrate the efficacy of our collective argument identification approach:43 1. Naive: This strategy selects the best span for each role r according to the score function c(r, s), independently of all other roles—the decoding rule formalized in Equation (7) of Section 6.1. It ignores all constraints except “uniqueness.” 2. Beam: This strategy employs greedy beam search to eliminate overlaps between predicted arguments, as described in Algorithm 1. Note that it does n</context>
<context position="128118" citStr="Martins et al. (2011" startWordPosition="20692" endWordPosition="20695">OSTONE subproblem can be transformed into that of projecting a point (a1, ... , ak) onto the set Sm = {zm E [0,1]|i(m) ||E�i(1) |zm,j &lt; 1} This projection can be computed as follows: 1. Clip each aj into the interval [0, 1] (i.e., set a� = min{max{aj, 0},1}). If the result satisfies k j=1 a� &lt; 1, then return (a&apos;1,. . . , ak). 2. Otherwise project (a1, ... , ak) onto the probability simplex: lzm E [0,1]|i(m) ||E|i(1)|zm,j = 1� j= This is precisely the XOR subproblem and can be solved in time O(|i(m)| log |i(m)|). The proof of this procedure’s correctness follows from the proof in Appendix B of Martins et al. (2011b). Acknowledgments We thank Collin Baker, Katrin Erk, Richard Johansson, and Nils Reiter for software, data, evaluation scripts, and methodological details. We thank the reviewers of this and the earlier papers, Alan Black, Ric Crabbe, Michael Ellsworth, Rebecca Hwa, Dan Klein, Russell Lee-Goldman, Slav Petrov, Dan Roth, Josef Ruppenhofer, Amarnag Subramanya, Partha Talukdar, and members of the ARK group for helpful comments. This work was supported by DARPA grant NBCH-1080004, NSF grants IIS-0836431 and IIS-0915187, Qatar National Research Foundation grant NPRP 08-485-1-083, Google’s support</context>
</contexts>
<marker>Martins, Figueiredo, Aguiar, Smith, Xing, 2011</marker>
<rawString>Martins, Andr´e F. T., Mario A. T. Figueiredo, Pedro M. Q. Aguiar, Noah A. Smith, and Eric P. Xing. 2011a. An augmented Lagrangian approach to constrained MAP inference. In Proceedings of the 28th International Conference on Machine Learning, pages 169–176, Bellevue, WA.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Andr´e F T Martins</author>
<author>Noah A Smith</author>
<author>Pedro M Q Aguiar</author>
<author>Mario A T Figueiredo</author>
</authors>
<title>2011b. Dual decomposition with many overlapping components.</title>
<journal>Computational Linguistics</journal>
<booktitle>In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<volume>40</volume>
<pages>238--249</pages>
<location>Edinburgh.</location>
<marker>Martins, Smith, Aguiar, Figueiredo, </marker>
<rawString>Martins, Andr´e F. T., Noah A. Smith, Pedro M. Q. Aguiar, and Mario A. T. Figueiredo. Computational Linguistics Volume 40, Number 1 2011b. Dual decomposition with many overlapping components. In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, pages 238–249, Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andr´e F T Martins</author>
<author>Noah A Smith</author>
<author>Eric P Xing</author>
</authors>
<title>Concise integer linear programming formulations for dependency parsing.</title>
<date>2009</date>
<booktitle>In Proceedings of the Joint Conference of the 47th Annual Meeting of the Association for Computational Linguistics and the 4th International Joint Conference on Natural Language Processing of the AFNLP,</booktitle>
<pages>342--350</pages>
<marker>Martins, Smith, Xing, 2009</marker>
<rawString>Martins, Andr´e F. T., Noah A. Smith, and Eric P. Xing. 2009. Concise integer linear programming formulations for dependency parsing. In Proceedings of the Joint Conference of the 47th Annual Meeting of the Association for Computational Linguistics and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 342–350, Suntec.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andr´e F T Martins</author>
<author>Noah A Smith</author>
<author>Eric P Xing</author>
<author>Mario A T Figueiredo</author>
<author>Pedro M Q Aguiar</author>
</authors>
<title>Turbo parsers: Dependency parsing by approximate variational inference.</title>
<date>2010</date>
<booktitle>In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>34--44</pages>
<location>Cambridge, MA.</location>
<contexts>
<context position="24203" citStr="Martins et al. 2010" startWordPosition="3573" endWordPosition="3576">r knowledge, the separate line of work investigating frame-semantic parsing has not previously dealt with joint inference. A common trait in prior work, both in PropBank and FrameNet conventions, has been the use of a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for complex structure prediction tasks like dependency parsing (Riedel and Clarke 2006; Martins, Smith, and Xing 2009; Martins et al. 2010), sequence tagging (Roth and Yih 2004), as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more ac</context>
<context position="62554" citStr="Martins et al. (2010)" startWordPosition="9749" endWordPosition="9752">es 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural language types (not tokens) and undirected edges between them are weighted using a similarity metric. Recently, this set-up has been used to learn soft labels on natural language types (say, word n-grams or in our case, syntactically disambiguated 27 The use of unsupported features (i.e., those that can fire for an analysis in the partition function but not observed to fire in the training data) has been observed to give performance improvements in NLP problems; see, for example, Sha and Pereira (2003) and Martins et al. (2010). 27 Computational Linguistics Volume 40, Number 1 predicates) from seed data, resulting in large but noisy lexicons, which are used to constrain structured prediction models. Applications have ranged from domain adaptation of sequence models (Subramanya, Petrov, and Pereira 2010) to unsupervised learning of POS taggers by using bilingual graph-based projections (Das and Petrov 2011). We describe our approach to graph construction, propagation for lexicon expansion, and the use of the result to impose constraints on frame identification. 5.5.1 Graph Construction. We construct a graph with lexi</context>
<context position="106752" citStr="Martins et al. (2010)" startWordPosition="17169" endWordPosition="17172">act, out of 877 frames in FrameNet 1.5, 204 frames have at least a pair of roles for which the “excludes” relationship holds, and 54 list at least a pair of roles that share the “requires” relationship. 7.1.4 Constraints as Factors in a Graphical Model. The LP in Equation (17) can be represented as a maximum a posteriori inference problem in an undirected graphical model. In the factor graph, each component (zr,s) of the vector z corresponds to a binary variable, and each instantiation of a constraint in Equations (12), (14), (15), and (16) corresponds to a factor. Smith and Eisner (2008) and Martins et al. (2010) used such a representation to impose constraints in a dependency parsing problem; the latter discussed the equivalence of linear programs and factor graphs for representing discrete optimization problems. All of our constraints take standard factor forms we can describe using the terminology of Smith and Eisner and Martins et al. The uniqueness constraint in Equation (12) corresponds to an XOR factor, while the overlap constraint in Equation (14) corresponds to an ATMOSTONE factor. The constraints in Equation (15) enforcing the “excludes” relationship can be represented with an OR factor. Fin</context>
</contexts>
<marker>Martins, Smith, Xing, Figueiredo, Aguiar, 2010</marker>
<rawString>Martins, Andr´e F. T., Noah A. Smith, Eric P. Xing, Mario A. T. Figueiredo, and Pedro M. Q. Aguiar. 2010. Turbo parsers: Dependency parsing by approximate variational inference. In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 34–44, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yuichiroh Matsubayashi</author>
<author>Naoaki Okazaki</author>
<author>Jun’ichi Tsujii</author>
</authors>
<title>A comparative study on generalization of semantic roles in FrameNet.</title>
<date>2009</date>
<booktitle>In Proceedings of the Joint Conference of the 47th Annual Meeting of the Association for Computational Linguistics and the 4th International Joint Conference on Natural Language Processing of the AFNLP,</booktitle>
<pages>pages</pages>
<location>Suntec.</location>
<marker>Matsubayashi, Okazaki, Tsujii, 2009</marker>
<rawString>Matsubayashi, Yuichiroh, Naoaki Okazaki, and Jun’ichi Tsujii. 2009. A comparative study on generalization of semantic roles in FrameNet. In Proceedings of the Joint Conference of the 47th Annual Meeting of the Association for Computational Linguistics and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 19–27, Suntec.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ryan McDonald</author>
<author>Koby Crammer</author>
<author>Fernando Pereira</author>
</authors>
<title>Online large-margin training of dependency parsers.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>91--98</pages>
<location>Ann Arbor, MI.</location>
<marker>McDonald, Crammer, Pereira, 2005</marker>
<rawString>McDonald, Ryan, Koby Crammer, and Fernando Pereira. 2005. Online large-margin training of dependency parsers. In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics, pages 91–98, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Meyers</author>
<author>Ruth Reeves</author>
<author>Catherine Macleod</author>
<author>Rachel Szekely</author>
<author>Veronika Zielinska</author>
<author>Brian Young</author>
<author>Ralph Grishman</author>
</authors>
<title>The NomBank project: An interim report.</title>
<date>2004</date>
<booktitle>In Proceedings of the NAACL-HLT Workshop on Frontiers in Corpus Annotation,</booktitle>
<pages>24--31</pages>
<location>Boston, MA.</location>
<contexts>
<context position="15790" citStr="Meyers et al. 2004" startWordPosition="2293" endWordPosition="2296">g.v, yodel.v, ... Sound_source Noisy_event MAKE_NOISE Sound Place Time Figure 3 Partial illustration of frames, roles, and lexical units related to the CAUSE TO MAKE NOISE frame, from the FrameNet lexicon. Core roles are filled bars. Non-core roles (such as Place and Time) are unfilled bars. No particular significance is ascribed to the ordering of a frame’s roles in its lexicon entry (the selection and ordering of roles above is for illustrative convenience). CAUSE TO MAKE NOISE defines a total of 14 roles, many of them not shown here. Whereas PropBank contains verbal predicates and NomBank (Meyers et al. 2004) contains nominal predicates, FrameNet counts these as well as allowing adjectives, adverbs, and prepositions among its lexical units. Finally, FrameNet frames organize predicates according to semantic principles, both by allowing related terms to evoke a common frame (e.g., push.V, raise.V, and growth.N for CAUSE CHANGE POSITION ON A SCALE) and by defining frames and their roles within a hierarchy (see Figure 3). PropBank does not explicitly encode relationships among predicates. Most early work on frame-semantic parsing has made use of the exemplar sentences in the FrameNet corpus (see Secti</context>
<context position="23502" citStr="Meyers et al. 2004" startWordPosition="3466" endWordPosition="3469">ata. This line of work may be useful in discovering new semantic frames and roles, but here we stick to the concrete representation provided in FrameNet, without seeking to expand its inventory of semantic types. We present a new semi-supervised technique to expand the set of lexical items with the potential semantic frames that they could evoke; we use a graph-based semi-supervised learning framework to achieve this goal (Section 5.5). 2.4 Joint Inference and Shallow Semantic Parsing Most high-performance SRL systems that use conventions from PropBank (Kingsbury and Palmer 2002) and NomBank (Meyers et al. 2004) utilize joint inference for semantic role labeling (M`arquez et al. 2008). To our knowledge, the separate line of work investigating frame-semantic parsing has not previously dealt with joint inference. A common trait in prior work, both in PropBank and FrameNet conventions, has been the use of a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for complex structure prediction tasks</context>
</contexts>
<marker>Meyers, Reeves, Macleod, Szekely, Zielinska, Young, Grishman, 2004</marker>
<rawString>Meyers, Adam, Ruth Reeves, Catherine Macleod, Rachel Szekely, Veronika Zielinska, Brian Young, and Ralph Grishman. 2004. The NomBank project: An interim report. In Proceedings of the NAACL-HLT Workshop on Frontiers in Corpus Annotation, pages 24–31, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alessandro Moschitti</author>
<author>Paul Morarescu</author>
<author>Sanda M Harabagiu</author>
</authors>
<title>Open-domain information extraction via automatic semantic labeling.</title>
<date>2003</date>
<booktitle>Proceedings of the Sixteenth International Florida Artificial Intelligence Research Society Conference,</booktitle>
<pages>397--401</pages>
<editor>In Ingrid Russell and Susan M. Haller, editors,</editor>
<publisher>St. Augustine, FL.</publisher>
<marker>Moschitti, Morarescu, Harabagiu, 2003</marker>
<rawString>Moschitti, Alessandro, Paul Morarescu, and Sanda M. Harabagiu. 2003. Open-domain information extraction via automatic semantic labeling. In Ingrid Russell and Susan M. Haller, editors, Proceedings of the Sixteenth International Florida Artificial Intelligence Research Society Conference, pages 397–401, St. Augustine, FL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Srini Narayanan</author>
<author>Sanda Harabagiu</author>
</authors>
<title>Question answering based on semantic structures.</title>
<date>2004</date>
<booktitle>In Proceedings of the 20th International Conference on Computational Linguistics,</booktitle>
<location>Geneva.</location>
<contexts>
<context position="20021" citStr="Narayanan and Harabagiu 2004" startWordPosition="2944" endWordPosition="2947">on. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few improvements over vanilla supervised methods using unlabeled data are notable. F¨urstenau and Lapata (2009b) present a method of projecting predicate-argument structures from some seed examples to unlabeled sentences, and use a linear program formulation to find the best alignment explaining the projection. Next, the projected information as</context>
</contexts>
<marker>Narayanan, Harabagiu, 2004</marker>
<rawString>Narayanan, Srini and Sanda Harabagiu. 2004. Question answering based on semantic structures. In Proceedings of the 20th International Conference on Computational Linguistics, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sebastian Pad´o</author>
<author>Katrin Erk</author>
</authors>
<title>To cause or not to cause: cross-lingual semantic matching for paraphrase modelling.</title>
<date>2005</date>
<booktitle>In Proceedings of the Cross-Language Knowledge Induction Workshop,</booktitle>
<location>Cluj-Napoca.</location>
<marker>Pad´o, Erk, 2005</marker>
<rawString>Pad´o, Sebastian and Katrin Erk. 2005. To cause or not to cause: cross-lingual semantic matching for paraphrase modelling. In Proceedings of the Cross-Language Knowledge Induction Workshop, Cluj-Napoca.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sebastian Pado</author>
<author>Mirella Lapata</author>
</authors>
<title>Cross-linguistic projection of role-semantic information.</title>
<date>2005</date>
<booktitle>In Proceedings of Human Language Technology Conference and Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>859--866</pages>
<location>Vancouver.</location>
<contexts>
<context position="19699" citStr="Pado and Lapata 2005" startWordPosition="2901" endWordPosition="2904">d FrameNet 1.5 data. In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) investigated various uses of FrameNet’s taxonomic relations for learning generalizations over roles; they trained a log-linear model on the SemEval 2007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few improvements over van</context>
</contexts>
<marker>Pado, Lapata, 2005</marker>
<rawString>Pado, Sebastian and Mirella Lapata. 2005. Cross-linguistic projection of role-semantic information. In Proceedings of Human Language Technology Conference and Conference on Empirical Methods in Natural Language Processing, pages 859–866, Vancouver.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marco Pennacchiotti</author>
<author>Diego De Cao</author>
<author>Roberto Basili</author>
<author>Danilo Croce</author>
<author>Michael Roth</author>
</authors>
<title>Automatic induction of FrameNet lexical units.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>457--465</pages>
<location>Honolulu, HI.</location>
<marker>Pennacchiotti, De Cao, Basili, Croce, Roth, 2008</marker>
<rawString>Pennacchiotti, Marco, Diego De Cao, Roberto Basili, Danilo Croce, and Michael Roth. 2008. Automatic induction of FrameNet lexical units. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 457–465, Honolulu, HI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sameer S Pradhan</author>
<author>Wayne H Ward</author>
<author>Kadri Hacioglu</author>
<author>James H Martin</author>
<author>Dan Jurafsky</author>
</authors>
<title>Shallow semantic parsing using support vector machines.</title>
<date>2004</date>
<booktitle>In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>233--240</pages>
<location>Boston, MA.</location>
<contexts>
<context position="10501" citStr="Pradhan et al. (2004)" startWordPosition="1489" endWordPosition="1492">-DIR, and ARGM-TMP are shown in the figure. PropBank defines core roles ARG0 through ARG5, which receive different interpretations for different predicates. Additional modifier roles ARGM-* include ARGM-TMP (temporal) and ARGM-DIR (directional), as shown in Figure 2(a). The PropBank representation therefore has a small number of roles, and the training data set comprises some 40,000 sentences, thus making the semantic role labeling task an attractive one from the perspective of machine learning. There are many instances of influential work on semantic role labeling using PropBank conventions. Pradhan et al. (2004) present a system that uses support vector machines (SVMs) to identify the arguments in a syntax tree that can serve as semantic roles, followed by classification of the identified arguments to role names via a collection of binary SVMs. Punyakanok et al. (2004) describe a semantic role labeler that uses integer linear programming for inference and uses several global constraints to find the best 12 Das et al. Frame-Semantic Parsing suited predicate-argument structures. Joint modeling for semantic role labeling with discriminative log-linear models is presented by Toutanova, Haghighi, and Mann</context>
</contexts>
<marker>Pradhan, Ward, Hacioglu, Martin, Jurafsky, 2004</marker>
<rawString>Pradhan, Sameer S., Wayne H. Ward, Kadri Hacioglu, James H. Martin, and Dan Jurafsky. 2004. Shallow semantic parsing using support vector machines. In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics, pages 233–240, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vasin Punyakanok</author>
<author>Dan Roth</author>
<author>Wen-tau Yih</author>
</authors>
<title>The importance of syntactic parsing and inference in semantic role labeling.</title>
<date>2008</date>
<journal>Computational Linguistics,</journal>
<volume>34</volume>
<issue>2</issue>
<marker>Punyakanok, Roth, Yih, 2008</marker>
<rawString>Punyakanok, Vasin, Dan Roth, and Wen-tau Yih. 2008. The importance of syntactic parsing and inference in semantic role labeling. Computational Linguistics, 34(2):257–287.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vasin Punyakanok</author>
<author>Dan Roth</author>
<author>Wen-tau Yih</author>
<author>Dav Zimak</author>
</authors>
<title>Semantic role labeling via integer linear programming inference.</title>
<date>2004</date>
<booktitle>In Proceedings of the 20th International Conference on Computational Linguistics,</booktitle>
<pages>1--346</pages>
<location>Geneva.</location>
<contexts>
<context position="10763" citStr="Punyakanok et al. (2004)" startWordPosition="1532" endWordPosition="1535">igure 2(a). The PropBank representation therefore has a small number of roles, and the training data set comprises some 40,000 sentences, thus making the semantic role labeling task an attractive one from the perspective of machine learning. There are many instances of influential work on semantic role labeling using PropBank conventions. Pradhan et al. (2004) present a system that uses support vector machines (SVMs) to identify the arguments in a syntax tree that can serve as semantic roles, followed by classification of the identified arguments to role names via a collection of binary SVMs. Punyakanok et al. (2004) describe a semantic role labeler that uses integer linear programming for inference and uses several global constraints to find the best 12 Das et al. Frame-Semantic Parsing suited predicate-argument structures. Joint modeling for semantic role labeling with discriminative log-linear models is presented by Toutanova, Haghighi, and Manning (2005), where global features looking at all arguments of a particular verb together are incorporated into a dynamic programming and reranking framework. The Computational Linguistics special issue on semantic role labeling (M`arquez et al. 2008) includes ot</context>
<context position="24291" citStr="Punyakanok et al. 2004" startWordPosition="3588" endWordPosition="3591">reviously dealt with joint inference. A common trait in prior work, both in PropBank and FrameNet conventions, has been the use of a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for complex structure prediction tasks like dependency parsing (Riedel and Clarke 2006; Martins, Smith, and Xing 2009; Martins et al. 2010), sequence tagging (Roth and Yih 2004), as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar </context>
<context position="94750" citStr="Punyakanok et al. 2004" startWordPosition="15159" endWordPosition="15162"> (b) Output using the constrained frame identification model that takes into account the graph-based frame distributions over unknown predicates. In this particular example, the UJSF-P1,2 graph objective is used. This output matches the gold annotation. The LU discrepancy.N is unseen in supervised FrameNet data. FrameNet, our approach is generalizable to other SRL frameworks. We model argument identification as constrained optimization, where the constraints come from expert knowledge encoded in FrameNet. Following prior work on PropBank-style SRL that dealt with similar constrained problems (Punyakanok et al. 2004; Punyakanok, Roth, and Yih 2008, inter alia), we incorporate this declarative knowledge in an integer linear program. Because general-purpose ILP solvers are proprietary and do not fully exploit the structure of the problem, we turn to a class of optimization techniques called dual decomposition (Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010; Martins et al. 2011a). We derive a modular, extensible, parallelizable approach in which semantic constraints map not just to declarative components in the algorithm, but also to procedural ones, in the form of “workers.” Although dual decompo</context>
</contexts>
<marker>Punyakanok, Roth, Yih, Zimak, 2004</marker>
<rawString>Punyakanok, Vasin, Dan Roth, Wen-tau Yih, and Dav Zimak. 2004. Semantic role labeling via integer linear programming inference. In Proceedings of the 20th International Conference on Computational Linguistics, pages 1,346–1,352, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adwait Ratnaparkhi</author>
</authors>
<title>A maximum entropy model for part-of-speech tagging.</title>
<date>1996</date>
<booktitle>In Proceedings of the 1996 Empirical Methods in Natural Language Processing,</booktitle>
<pages>133--142</pages>
<location>Copenhagen.</location>
<contexts>
<context position="32648" citStr="Ratnaparkhi 1996" startWordPosition="4924" endWordPosition="4925">,785 28 Preposition or Adjective 1,411 14 complementizer 2,553 15 Preposition 296 3 Adjective 1,744 10 Adverb 103 1 Verb 1,156 7 Number 63 1 Pronoun 736 4 Conjunction 8 Adverb 373 2 Article 3 Other 1,047 6 9,824 17,048 the training set.9 Das and Smith (2011, supplementary material) give the names of the test documents for fair replication of our work. We also randomly selected 4,462 targets from the training data for development of the argument identification model (Section 6.1). Preprocessing. We preprocessed sentences in our data set with a standard set of annotations: POS tags from MXPOST (Ratnaparkhi 1996) and dependency parses from the MST parser (McDonald, Crammer, and Pereira 2005); manual syntactic parses are not available for most of the FrameNet-annotated documents. We used WordNet (Fellbaum 1998) for lemmatization. Our models treat these pieces of information as observations. We also labeled each verb in the data as having ACTIVE or PASSIVE voice, using code from the SRL system described by Johansson and Nugues (2008). 3.3 Task and Evaluation Methodology Automatic annotations of frame-semantic structure can be broken into three parts: (1) targets, the words or phrases that evoke frames; </context>
</contexts>
<marker>Ratnaparkhi, 1996</marker>
<rawString>Ratnaparkhi, Adwait. 1996. A maximum entropy model for part-of-speech tagging. In Proceedings of the 1996 Empirical Methods in Natural Language Processing, pages 133–142, Copenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sebastian Riedel</author>
<author>James Clarke</author>
</authors>
<title>Incremental integer linear programming for non-projective dependency parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>129--137</pages>
<location>Sydney.</location>
<contexts>
<context position="24150" citStr="Riedel and Clarke 2006" startWordPosition="3564" endWordPosition="3567">or semantic role labeling (M`arquez et al. 2008). To our knowledge, the separate line of work investigating frame-semantic parsing has not previously dealt with joint inference. A common trait in prior work, both in PropBank and FrameNet conventions, has been the use of a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for complex structure prediction tasks like dependency parsing (Riedel and Clarke 2006; Martins, Smith, and Xing 2009; Martins et al. 2010), sequence tagging (Roth and Yih 2004), as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since th</context>
</contexts>
<marker>Riedel, Clarke, 2006</marker>
<rawString>Riedel, Sebastian and James Clarke. 2006. Incremental integer linear programming for non-projective dependency parsing. In Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing, pages 129–137, Sydney.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Roth</author>
<author>Wen-tau Yih</author>
</authors>
<title>A linear programming formulation for global inference in natural language tasks.</title>
<date>2004</date>
<booktitle>In Proceedings of the Eighth Conference on Computational Natural Language Learning,</booktitle>
<pages>1--8</pages>
<location>Boston, MA.</location>
<contexts>
<context position="24241" citStr="Roth and Yih 2004" startWordPosition="3579" endWordPosition="3582">nvestigating frame-semantic parsing has not previously dealt with joint inference. A common trait in prior work, both in PropBank and FrameNet conventions, has been the use of a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for complex structure prediction tasks like dependency parsing (Riedel and Clarke 2006; Martins, Smith, and Xing 2009; Martins et al. 2010), sequence tagging (Roth and Yih 2004), as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (</context>
</contexts>
<marker>Roth, Yih, 2004</marker>
<rawString>Roth, Dan and Wen-tau Yih. 2004. A linear programming formulation for global inference in natural language tasks. In Proceedings of the Eighth Conference on Computational Natural Language Learning, pages 1–8, Boston, MA.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Josef Ruppenhofer</author>
<author>Michael Ellsworth</author>
<author>Miriam R L Petruck</author>
<author>R Christopher</author>
</authors>
<marker>Ruppenhofer, Ellsworth, Petruck, Christopher, </marker>
<rawString>Ruppenhofer, Josef, Michael Ellsworth, Miriam R. L. Petruck, Christopher R.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Johnson</author>
<author>Jan Scheffczyk</author>
</authors>
<title>FrameNet II: extended theory and practice.</title>
<date>2006</date>
<institution>International Computer Science Institute,</institution>
<location>Berkeley, CA.</location>
<marker>Johnson, Scheffczyk, 2006</marker>
<rawString>Johnson, and Jan Scheffczyk. 2006. FrameNet II: extended theory and practice. International Computer Science Institute, Berkeley, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander M Rush</author>
<author>Michael Collins</author>
</authors>
<title>Exact decoding of syntactic translation models through Lagrangian relaxation.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>72--82</pages>
<location>Portland, OR.</location>
<contexts>
<context position="25036" citStr="Rush and Collins 2011" startWordPosition="3696" endWordPosition="3699">) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; Rush and Collins 2011). Recently, Martins et al. (2011b) showed that the success of subgradient-based dual decomposition strongly relies on breaking down the original problem into a “good” 4 In prior work, there are exceptions where identification and classification of arguments have been treated in one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task on semantic role labeling (Carreras and M`arquez 2004). 16 Das et al. Frame-Semantic Parsing decomposition, that is, one with few overlapping components. This leaves out many declarative constrained problems, for which su</context>
</contexts>
<marker>Rush, Collins, 2011</marker>
<rawString>Rush, Alexander M. and Michael Collins. 2011. Exact decoding of syntactic translation models through Lagrangian relaxation. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 72–82, Portland, OR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander M Rush</author>
<author>David Sontag</author>
<author>Michael Collins</author>
<author>Tommi Jaakkola</author>
</authors>
<title>On dual decomposition and linear programming relaxations for natural language processing.</title>
<date>2010</date>
<booktitle>In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>1--11</pages>
<location>Cambridge, MA.</location>
<contexts>
<context position="24415" citStr="Rush et al. (2010)" startWordPosition="3606" endWordPosition="3609">f a two-stage model that identifies arguments first, then labels them, often using dynamic programming or integer linear programs (ILPs); we treat both problems together here.4 Recent work in natural language processing (NLP) problems has focused on ILP formulations for complex structure prediction tasks like dependency parsing (Riedel and Clarke 2006; Martins, Smith, and Xing 2009; Martins et al. 2010), sequence tagging (Roth and Yih 2004), as well as PropBank SRL (Punyakanok et al. 2004). Whereas early work in this area focused on declarative formulations tackled with off-the-shelf solvers, Rush et al. (2010) proposed subgradient-based dual decomposition (also called Lagrangian relaxation) as a way of exploiting the structure of the problem and existing combinatorial algorithms. The method allows the combination of models that are individually tractable, but not jointly tractable, by solving a relaxation of the original problem. Since then, dual decomposition has been used to build more accurate models for dependency parsing (Koo et al. 2010), combinatory categorical grammar supertagging and parsing (Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero and Macherey 2011; R</context>
<context position="95105" citStr="Rush et al. 2010" startWordPosition="15212" endWordPosition="15215">r SRL frameworks. We model argument identification as constrained optimization, where the constraints come from expert knowledge encoded in FrameNet. Following prior work on PropBank-style SRL that dealt with similar constrained problems (Punyakanok et al. 2004; Punyakanok, Roth, and Yih 2008, inter alia), we incorporate this declarative knowledge in an integer linear program. Because general-purpose ILP solvers are proprietary and do not fully exploit the structure of the problem, we turn to a class of optimization techniques called dual decomposition (Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010; Martins et al. 2011a). We derive a modular, extensible, parallelizable approach in which semantic constraints map not just to declarative components in the algorithm, but also to procedural ones, in the form of “workers.” Although dual decomposition algorithms only solve a relaxation of the original problem, we make our approach exact by wrapping the algorithm in a branch-and-bound search procedure. 39 We experimentally find that our algorithm achieves accuracy comparable to the results presented in Table 8, while respecting all imposed linguistic constraints. In comparison with beam search,</context>
<context position="108088" citStr="Rush et al. 2010" startWordPosition="17370" endWordPosition="17373">ic Parsing In the following section, we describe how we arrive at solutions for the LP in Equation (17) using dual decomposition, and how we adapt it to efficiently recover the exact solution of the ILP (Equation (11)), without the need of an off-the-shelf ILP solver. 7.2 “Augmented” Dual Decomposition Dual decomposition methods address complex optimization problems in the dual, by dividing them into simple worker problems (subproblems), which are repeatedly solved until a consensus is reached. The simplest technique relies on the subgradient algorithm (Komodakis, Paragios, and Tziritas 2007; Rush et al. 2010); as an alternative, Martins et al. (2011a, 2011b) proposed an augmented Lagrangian technique, which is more suitable when there are many small components —commonly the case in declarative constrained problems, like the one at hand. Here, we present a brief overview of the latter, which is called AD3. Let us start by establishing some notation. Let m E {1, ... , M} index a factor, and denote by i(m) the vector of indices of variables linked to that factor. (Recall that each factor represents the instantiation of a constraint.) We introduce a new set of variables, u E Rd, called the “witness” v</context>
<context position="110259" citStr="Rush et al. 2010" startWordPosition="17757" endWordPosition="17760">s Am for the equality constraints in the last line. The AD3 algorithm is depicted as Algorithm 2. Like dual decomposition approaches, it repeatedly performs a broadcast operation (the zm-updates, which can be done in parallel, one constraint per “worker”) and a gather operation (the u- and A-updates). Each u-operation can be seen as an averaged voting which takes into consideration each worker’s results. Like in the subgradient method, the A-updates can be regarded as price adjustments, which will affect the next round of zm-updates. The only difference with respect to the subgradient method (Rush et al. 2010) is that each subproblem involved in a zm-update also has a quadratic penalty that penalizes deviations from the previous 43 Computational Linguistics Volume 40, Number 1 Algorithm 2 AD3 for Argument Identification Require: role-span matching scores c := (c(r,s))r,s, structural constraints (Am,bm)Mm=1, penalty p &gt; 0 1: initialize t +- 1 2: initialize u1 uniformly (i.e., u(r, s) = 0.5, Vr, s) 3: initialize each A1m = 0, Vm E 11,...,M} 4: repeat 5: for each m = 1, ... , M do 6: make a zm-update by finding the best scoring analysis for the mth constraint, with penalties for deviating from the con</context>
</contexts>
<marker>Rush, Sontag, Collins, Jaakkola, 2010</marker>
<rawString>Rush, Alexander M, David Sontag, Michael Collins, and Tommi Jaakkola. 2010. On dual decomposition and linear programming relaxations for natural language processing. In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 1–11, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karin K Schuler</author>
</authors>
<title>VerbNet: a broad-coverage, comprehensive verb lexicon.</title>
<date>2005</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="12439" citStr="Schuler 2005" startWordPosition="1786" endWordPosition="1787">re 2(a) that it is unclear what the core roles ARG1 or ARG2 represent linguistically. To better understand the roles’ meaning for a given verb, one has to refer to a verb-specific file provided along with the PropBank corpus. Although collapsing these verb-specific core roles into tags ARG0-ARG5 leads to a small set of classes to be learned from a reasonable sized corpus, analysis shows that the roles ARG2–ARG5 serve many different purposes for different verbs. Yi, Loper, and Palmer (2007) point out that these four roles are highly overloaded and inconsistent, and they mapped them to VerbNet (Schuler 2005) thematic roles to get improvements on the SRL task. Recently, Bauer and Rambow (2011) presented a method to improve the syntactic subcategorization patterns for FrameNet lexical units using VerbNet. Instead of working with PropBank, we focus on shallow semantic parsing of sentences in the paradigm of frame semantics (Fillmore 1982), to which we turn next. 2.2 Frame-Semantic Parsing The FrameNet lexicon (Fillmore, Johnson, and Petruck 2003) contains rich linguistic information about lexical items and predicate-argument structures. A semantic frame present in this lexicon includes a list of lex</context>
</contexts>
<marker>Schuler, 2005</marker>
<rawString>Schuler, Karin K. 2005. VerbNet: a broad-coverage, comprehensive verb lexicon. Ph.D. thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fei Sha</author>
<author>Fernando Pereira</author>
</authors>
<title>Shallow parsing with conditional random fields.</title>
<date>2003</date>
<booktitle>In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>134--141</pages>
<location>Edmonton.</location>
<contexts>
<context position="62528" citStr="Sha and Pereira (2003)" startWordPosition="9744" endWordPosition="9747">labels (Subramanya and Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural language types (not tokens) and undirected edges between them are weighted using a similarity metric. Recently, this set-up has been used to learn soft labels on natural language types (say, word n-grams or in our case, syntactically disambiguated 27 The use of unsupported features (i.e., those that can fire for an analysis in the partition function but not observed to fire in the training data) has been observed to give performance improvements in NLP problems; see, for example, Sha and Pereira (2003) and Martins et al. (2010). 27 Computational Linguistics Volume 40, Number 1 predicates) from seed data, resulting in large but noisy lexicons, which are used to constrain structured prediction models. Applications have ranged from domain adaptation of sequence models (Subramanya, Petrov, and Pereira 2010) to unsupervised learning of POS taggers by using bilingual graph-based projections (Das and Petrov 2011). We describe our approach to graph construction, propagation for lexicon expansion, and the use of the result to impose constraints on frame identification. 5.5.1 Graph Construction. We c</context>
</contexts>
<marker>Sha, Pereira, 2003</marker>
<rawString>Sha, Fei and Fernando Pereira. 2003. Shallow parsing with conditional random fields. In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics, pages 134–141, Edmonton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Shen</author>
<author>Mirella Lapata</author>
</authors>
<title>Using semantic roles to improve question answering.</title>
<date>2007</date>
<booktitle>In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning,</booktitle>
<pages>12--21</pages>
<location>Prague.</location>
<contexts>
<context position="20044" citStr="Shen and Lapata 2007" startWordPosition="2948" endWordPosition="2951">ought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few improvements over vanilla supervised methods using unlabeled data are notable. F¨urstenau and Lapata (2009b) present a method of projecting predicate-argument structures from some seed examples to unlabeled sentences, and use a linear program formulation to find the best alignment explaining the projection. Next, the projected information as well as the seeds are </context>
</contexts>
<marker>Shen, Lapata, 2007</marker>
<rawString>Shen, Dan and Mirella Lapata. 2007. Using semantic roles to improve question answering. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 12–21, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lei Shi</author>
<author>Rada Mihalcea</author>
</authors>
<title>An algorithm for open text semantic parsing.</title>
<date>2004</date>
<booktitle>In Proceedings of Workshop on Robust Methods in Analysis of Natural Language Data,</booktitle>
<pages>59--67</pages>
<location>Geneva.</location>
<contexts>
<context position="16788" citStr="Shi and Mihalcea (2004)" startWordPosition="2447" endWordPosition="2450">r roles within a hierarchy (see Figure 3). PropBank does not explicitly encode relationships among predicates. Most early work on frame-semantic parsing has made use of the exemplar sentences in the FrameNet corpus (see Section 3.1), each of which is annotated for a single frame and its arguments. Gildea and Jurafsky (2002) presented a discriminative model for arguments given the frame; Thompson, Levy, and Manning (2003) used a generative model for both the frame and its arguments. Fleischman, Kwon, and Hovy (2003) first used maximum entropy models to find and label arguments given the frame. Shi and Mihalcea (2004) developed a rule-based system to predict frames and their arguments in text, and Erk and Pad´o (2006) introduced the Shalmaneser tool, which uses naive Bayes classifiers to do the same. Other FrameNet SRL systems (Giuglea and Moschitti 2006, for instance) have used SVMs. Most of this work was done on an older, smaller version of FrameNet, containing around 300 frames and fewer than 500 unique semantic roles. Unlike this body of work, we experimented with the larger SemEval 2007 shared task data set, and also the newer FrameNet 1.5,3 which lists 877 frames and 1,068 role types—thus handling ma</context>
</contexts>
<marker>Shi, Mihalcea, 2004</marker>
<rawString>Shi, Lei and Rada Mihalcea. 2004. An algorithm for open text semantic parsing. In Proceedings of Workshop on Robust Methods in Analysis of Natural Language Data, pages 59–67, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lei Shi</author>
<author>Rada Mihalcea</author>
</authors>
<title>Putting pieces together: Combining FrameNet, VerbNet and WordNet for robust semantic parsing.</title>
<date>2005</date>
<booktitle>In Proceedings of the 6th International Conference on Computational Linguistics and Intelligent Text Processing,</booktitle>
<pages>100--111</pages>
<location>Mexico City.</location>
<contexts>
<context position="19520" citStr="Shi and Mihalcea 2005" startWordPosition="2873" endWordPosition="2876">ument identification problem using a joint structure prediction model and use semisupervised learning to improve predicate coverage. We also present experiments on recently released FrameNet 1.5 data. In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) investigated various uses of FrameNet’s taxonomic relations for learning generalizations over roles; they trained a log-linear model on the SemEval 2007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Metho</context>
</contexts>
<marker>Shi, Mihalcea, 2005</marker>
<rawString>Shi, Lei and Rada Mihalcea. 2005. Putting pieces together: Combining FrameNet, VerbNet and WordNet for robust semantic parsing. In Proceedings of the 6th International Conference on Computational Linguistics and Intelligent Text Processing, pages 100–111, Mexico City.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Smith</author>
<author>Jason Eisner</author>
</authors>
<title>Dependency parsing by belief propagation.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>145--156</pages>
<location>Honolulu, HI.</location>
<contexts>
<context position="106726" citStr="Smith and Eisner (2008)" startWordPosition="17164" endWordPosition="17167">requires” relationship. In fact, out of 877 frames in FrameNet 1.5, 204 frames have at least a pair of roles for which the “excludes” relationship holds, and 54 list at least a pair of roles that share the “requires” relationship. 7.1.4 Constraints as Factors in a Graphical Model. The LP in Equation (17) can be represented as a maximum a posteriori inference problem in an undirected graphical model. In the factor graph, each component (zr,s) of the vector z corresponds to a binary variable, and each instantiation of a constraint in Equations (12), (14), (15), and (16) corresponds to a factor. Smith and Eisner (2008) and Martins et al. (2010) used such a representation to impose constraints in a dependency parsing problem; the latter discussed the equivalence of linear programs and factor graphs for representing discrete optimization problems. All of our constraints take standard factor forms we can describe using the terminology of Smith and Eisner and Martins et al. The uniqueness constraint in Equation (12) corresponds to an XOR factor, while the overlap constraint in Equation (14) corresponds to an ATMOSTONE factor. The constraints in Equation (15) enforcing the “excludes” relationship can be represen</context>
</contexts>
<marker>Smith, Eisner, 2008</marker>
<rawString>Smith, David A. and Jason Eisner. 2008. Dependency parsing by belief propagation. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 145–156, Honolulu, HI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Amarnag Subramanya</author>
<author>Jeff Bilmes</author>
</authors>
<title>Soft-supervised learning for text classification.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>1--090</pages>
<location>Honolulu, HI.</location>
<contexts>
<context position="61629" citStr="Subramanya and Bilmes 2008" startWordPosition="9603" endWordPosition="9606">een shown to perform better than several other semi-supervised algorithms on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method constructs a graph where a small portion of vertices correspond to labeled instances, and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting the similarity between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, and Lafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels from the labeled vertices to the unlabeled ones. In our work, we are interested in multi-class generalizations of graph-propagation algorithms suitable for NLP applications, where each graph vertex can assume one or more out of many possible labels (Subramanya and Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural language types (not tokens) and undirected edges between them are weighted using a similarity metric. Recently, this set-up has been used to learn soft labels on natural language types (say, word n-grams or i</context>
</contexts>
<marker>Subramanya, Bilmes, 2008</marker>
<rawString>Subramanya, Amarnag and Jeff Bilmes. 2008. Soft-supervised learning for text classification. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 1,090–1,099, Honolulu, HI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Amarnag Subramanya</author>
<author>Slav Petrov</author>
<author>Fernando Pereira</author>
</authors>
<title>Efficient graph-based semi-supervised learning of structured tagging models.</title>
<date>2010</date>
<booktitle>In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>167--176</pages>
<location>Cambridge, MA.</location>
<marker>Subramanya, Petrov, Pereira, 2010</marker>
<rawString>Subramanya, Amarnag, Slav Petrov, and Fernando Pereira. 2010. Efficient graph-based semi-supervised learning of structured tagging models. In Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 167–176, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mihai Surdeanu</author>
<author>Sanda Harabagiu</author>
<author>John Williams</author>
<author>Paul Aarseth</author>
</authors>
<title>Using predicate-argument structures for information extraction.</title>
<date>2003</date>
<booktitle>In Proceedings of the 41st Annual Meeting on Association for Computational Linguistics,</booktitle>
<pages>8--15</pages>
<location>Sapporo.</location>
<contexts>
<context position="19901" citStr="Surdeanu et al. 2003" startWordPosition="2928" endWordPosition="2931">trained a log-linear model on the SemEval 2007 data to evaluate features for the subtask of argument identification. Another line of work has sought to extend the coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea 2005; Giuglea and Moschitti 2006; Pennacchiotti et al. 2008) and by projecting entries and annotations within and across languages (Boas 2002; Fung and Chen 2004; Pado and Lapata 2005; F¨urstenau and Lapata 2009b). Others have explored the application of frame-semantic structures to tasks such as information extraction (Moschitti, Morarescu, and Harabagiu 2003; Surdeanu et al. 2003), textual entailment (Burchardt and Frank 2006; Burchardt et al. 2009), question answering (Narayanan and Harabagiu 2004; Shen and Lapata 2007), and paraphrase recognition (Pad´o and Erk 2005). 2.3 Semi-Supervised Methods Although there has been a significant amount of work in supervised shallow semantic parsing using both PropBank- and FrameNet-style representations, a few improvements over vanilla supervised methods using unlabeled data are notable. F¨urstenau and Lapata (2009b) present a method of projecting predicate-argument structures from some seed examples to unlabeled sentences, and u</context>
</contexts>
<marker>Surdeanu, Harabagiu, Williams, Aarseth, 2003</marker>
<rawString>Surdeanu, Mihai, Sanda Harabagiu, John Williams, and Paul Aarseth. 2003. Using predicate-argument structures for information extraction. In Proceedings of the 41st Annual Meeting on Association for Computational Linguistics, pages 8–15, Sapporo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mihai Surdeanu</author>
<author>Richard Johansson</author>
<author>Adam Meyers</author>
<author>Lluis M`arquez</author>
<author>Joakim Nivre</author>
</authors>
<title>The CoNLL</title>
<date>2008</date>
<booktitle>In Proceedings of the Twelfth Conference on Computational Natural Language Learning,</booktitle>
<pages>159--177</pages>
<location>Manchester.</location>
<marker>Surdeanu, Johansson, Meyers, M`arquez, Nivre, 2008</marker>
<rawString>Surdeanu, Mihai, Richard Johansson, Adam Meyers, Lluis M`arquez, and Joakim Nivre. 2008. The CoNLL 2008 shared task on joint parsing of syntactic and semantic dependencies. In Proceedings of the Twelfth Conference on Computational Natural Language Learning, pages 159–177, Manchester.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Szummer</author>
<author>Tommi Jaakkola</author>
</authors>
<title>Partially labeled classification with Markov random walks.</title>
<date>2001</date>
<booktitle>In Advances in Neural Information Processing Systems 14,</booktitle>
<pages>945--952</pages>
<location>Vancouver.</location>
<contexts>
<context position="61428" citStr="Szummer and Jaakkola 2001" startWordPosition="9572" endWordPosition="9575">s a graph constructed from labeled and unlabeled data. The widely used graph-based SSL framework—see Bengio, Delalleau, and Le Roux (2006) and Zhu (2008) for introductory material on this topic—has been shown to perform better than several other semi-supervised algorithms on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method constructs a graph where a small portion of vertices correspond to labeled instances, and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting the similarity between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, and Lafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels from the labeled vertices to the unlabeled ones. In our work, we are interested in multi-class generalizations of graph-propagation algorithms suitable for NLP applications, where each graph vertex can assume one or more out of many possible labels (Subramanya and Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural languag</context>
</contexts>
<marker>Szummer, Jaakkola, 2001</marker>
<rawString>Szummer, Martin and Tommi Jaakkola. 2001. Partially labeled classification with Markov random walks. In Advances in Neural Information Processing Systems 14, pages 945–952, Vancouver.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Partha Pratim Talukdar</author>
<author>Koby Crammer</author>
</authors>
<title>New regularized algorithms for transductive learning.</title>
<date>2009</date>
<booktitle>In Proceedings of the European Conference on Machine Learning and Knowledge Discovery in Databases,</booktitle>
<pages>442--457</pages>
<location>Bled.</location>
<contexts>
<context position="61974" citStr="Talukdar and Crammer 2009" startWordPosition="9655" endWordPosition="9658"> between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, and Lafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels from the labeled vertices to the unlabeled ones. In our work, we are interested in multi-class generalizations of graph-propagation algorithms suitable for NLP applications, where each graph vertex can assume one or more out of many possible labels (Subramanya and Bilmes 2008, 2009; Talukdar and Crammer 2009). For us, graph vertices correspond to natural language types (not tokens) and undirected edges between them are weighted using a similarity metric. Recently, this set-up has been used to learn soft labels on natural language types (say, word n-grams or in our case, syntactically disambiguated 27 The use of unsupported features (i.e., those that can fire for an analysis in the partition function but not observed to fire in the training data) has been observed to give performance improvements in NLP problems; see, for example, Sha and Pereira (2003) and Martins et al. (2010). 27 Computational L</context>
</contexts>
<marker>Talukdar, Crammer, 2009</marker>
<rawString>Talukdar, Partha Pratim and Koby Crammer. 2009. New regularized algorithms for transductive learning. In Proceedings of the European Conference on Machine Learning and Knowledge Discovery in Databases, pages 442–457, Bled.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cynthia A Thompson</author>
<author>Roger Levy</author>
<author>Christopher D Manning</author>
</authors>
<title>A generative model for semantic role labeling.</title>
<date>2003</date>
<booktitle>In Proceedings of the European Conference on Machine Learning,</booktitle>
<pages>397--408</pages>
<location>Cavtat-Dubrovnik.</location>
<marker>Thompson, Levy, Manning, 2003</marker>
<rawString>Thompson, Cynthia A., Roger Levy, and Christopher D. Manning. 2003. A generative model for semantic role labeling. In Proceedings of the European Conference on Machine Learning, pages 397–408, Cavtat-Dubrovnik.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Titov</author>
<author>Alexandre Klementiev</author>
</authors>
<title>A Bayesian approach to unsupervised semantic role induction.</title>
<date>2012</date>
<booktitle>In Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics,</booktitle>
<pages>12--22</pages>
<location>Avignon.</location>
<contexts>
<context position="22811" citStr="Titov and Klementiev 2012" startWordPosition="3360" endWordPosition="3363">show relative improvements. Experiments are performed on the CoNLL 2008 shared task data set (Surdeanu et al. 2008), which follows the PropBank conventions and only labels verbal and nominal predicates—in contrast to our work, which includes most lexicosyntactic categories. A similar approach is presented by Weston, Ratle, and Collobert (2008), who use neural embeddings of words, which are eventually used for SRL; improvements over state-of-the-art PropBank-style SRL systems are observed. Recently, there has been related work in unsupervised semantic role labeling (Lang and Lapata 2010, 2011; Titov and Klementiev 2012) that attempts to induce semantic roles automatically from unannotated data. This line of work may be useful in discovering new semantic frames and roles, but here we stick to the concrete representation provided in FrameNet, without seeking to expand its inventory of semantic types. We present a new semi-supervised technique to expand the set of lexical items with the potential semantic frames that they could evoke; we use a graph-based semi-supervised learning framework to achieve this goal (Section 5.5). 2.4 Joint Inference and Shallow Semantic Parsing Most high-performance SRL systems that</context>
</contexts>
<marker>Titov, Klementiev, 2012</marker>
<rawString>Titov, Ivan and Alexandre Klementiev. 2012. A Bayesian approach to unsupervised semantic role induction. In Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 12–22, Avignon.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristina Toutanova</author>
<author>Aria Haghighi</author>
<author>Christopher Manning</author>
</authors>
<title>Joint learning improves semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>589--596</pages>
<location>Ann Arbor, MI.</location>
<marker>Toutanova, Haghighi, Manning, 2005</marker>
<rawString>Toutanova, Kristina, Aria Haghighi, and Christopher Manning. 2005. Joint learning improves semantic role labeling. In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics, pages 589–596, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joseph Turian</author>
<author>Lev-Arie Ratinov</author>
<author>Yoshua Bengio</author>
</authors>
<title>Word representations: A simple and general method for semi-supervised learning.</title>
<date>2010</date>
<journal>Computational Linguistics</journal>
<booktitle>In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<volume>40</volume>
<pages>384--394</pages>
<location>Uppsala.</location>
<marker>Turian, Ratinov, Bengio, 2010</marker>
<rawString>Turian, Joseph, Lev-Arie Ratinov, and Yoshua Bengio. 2010. Word representations: A simple and general method for semi-supervised learning. In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 384–394, Uppsala. Computational Linguistics Volume 40, Number 1</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jason Weston</author>
<author>Fr´ed´eric Ratle</author>
<author>Ronan Collobert</author>
</authors>
<title>Deep learning via semi-supervised embedding.</title>
<date>2008</date>
<booktitle>In Proceedings of the 25th International Conference on Machine Learning,</booktitle>
<pages>1--168</pages>
<location>Helsinki.</location>
<marker>Weston, Ratle, Collobert, 2008</marker>
<rawString>Weston, Jason, Fr´ed´eric Ratle, and Ronan Collobert. 2008. Deep learning via semi-supervised embedding. In Proceedings of the 25th International Conference on Machine Learning, pages 1,168–1,175, Helsinki.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nianwen Xue</author>
<author>Martha Palmer</author>
</authors>
<title>Calibrating features for semantic role labeling.</title>
<date>2004</date>
<booktitle>In Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>88--94</pages>
<location>Barcelona.</location>
<contexts>
<context position="37065" citStr="Xue and Palmer (2004)" startWordPosition="5614" endWordPosition="5617">son and Nugues (2007, hereafter J&amp;N’07), the best system in the SemEval 2007 shared task. That system is based on a collection of SVMs. They used a set of rules for target identification which we describe in Appendix A. For frame identification, they used an SVM classifier to disambiguate frames for known frame-evoking words. They used WordNet synsets to extend the vocabulary of frame-evoking words to cover unknown words, and then used a collection of separate SVM classifiers—one for each frame—to predict a single evoked frame for each occurrence of a word in the extended set. J&amp;N’07 followed Xue and Palmer (2004) in dividing the argument identification problem into two subtasks: First, they classified candidate spans as to whether they were arguments or not; then they assigned roles to those that were identified as arguments. Both phases used SVMs. Thus, their formulation of the problem involves a multitude of independently trained classifiers that share no information—whereas ours uses two log-linear models, each with a single set of parameters shared across all contexts, to find a full frame-semantic parse. We compare our models with J&amp;N’07 using the benchmark data set from SemEval 2007. However, be</context>
</contexts>
<marker>Xue, Palmer, 2004</marker>
<rawString>Xue, Nianwen and Martha Palmer. 2004. Calibrating features for semantic role labeling. In Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing, pages 88–94, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Szu-ting Yi</author>
<author>Edward Loper</author>
<author>Martha Palmer</author>
</authors>
<title>Can semantic roles generalize across genres?</title>
<date>2007</date>
<booktitle>In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>548--555</pages>
<location>Rochester, NY.</location>
<marker>Yi, Loper, Palmer, 2007</marker>
<rawString>Yi, Szu-ting, Edward Loper, and Martha Palmer. 2007. Can semantic roles generalize across genres? In Proceedings of the Human Language Technologies Conference of the North American Chapter of the Association for Computational Linguistics, pages 548–555, Rochester, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaojin Zhu</author>
</authors>
<title>Semi-supervised learning literature survey. Available at http://pages.cs.wisc.edu/∼jerryzhu/ pub/ssl survey.pdf. Last Accessed</title>
<date>2008</date>
<contexts>
<context position="60956" citStr="Zhu (2008)" startWordPosition="9505" endWordPosition="9506">sue next. 5.5 Semi-Supervised Lexicon Expansion We next address the poor performance of our frame identification model on targets that were unseen as LUs in FrameNet or as instances in training data, and briefly describe a technique for expanding the set of lexical units with potential semantic frames that they can associate with. These experiments were carried out on the FrameNet 1.5 data only. We use a semi-supervised learning (SSL) technique that uses a graph constructed from labeled and unlabeled data. The widely used graph-based SSL framework—see Bengio, Delalleau, and Le Roux (2006) and Zhu (2008) for introductory material on this topic—has been shown to perform better than several other semi-supervised algorithms on benchmark data sets (Chapelle, Sch¨olkopf, and Zien 2006, chapter 21). The method constructs a graph where a small portion of vertices correspond to labeled instances, and the rest are unlabeled. Pairs of vertices are connected by weighted edges denoting the similarity between the pair. Traditionally, Markov random walks (Szummer and Jaakkola 2001; Baluja et al. 2008) or optimization of a loss function based on smoothness properties of the graph (e.g., Corduneanu and Jaakk</context>
</contexts>
<marker>Zhu, 2008</marker>
<rawString>Zhu, Xiaojin. 2008. Semi-supervised learning literature survey. Available at http://pages.cs.wisc.edu/∼jerryzhu/ pub/ssl survey.pdf. Last Accessed July 2013.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaojin Zhu</author>
<author>Zoubin Ghahramani</author>
<author>John Lafferty</author>
</authors>
<title>Semi-supervised learning using Gaussian fields and harmonic functions.</title>
<date>2003</date>
<booktitle>In Proceedings of the 20th International Conference on Machine Learning,</booktitle>
<pages>912--919</pages>
<location>Washington, DC.</location>
<marker>Zhu, Ghahramani, Lafferty, 2003</marker>
<rawString>Zhu, Xiaojin, Zoubin Ghahramani, and John Lafferty. 2003. Semi-supervised learning using Gaussian fields and harmonic functions. In Proceedings of the 20th International Conference on Machine Learning, pages 912–919, Washington, DC.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>